{"version":3,"file":"emoji-picker-plugin.jsx","sourceRoot":"","sources":["emoji-picker-plugin.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ;;;;;;GAMG;AACH,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAGjE,OAAO,OAAO,MAAM,cAAc,CAAA;AAElC,OAAO,EAAE,yBAAyB,EAAE,MAAM,uCAAuC,CAAA;AACjF,OAAO,EACL,UAAU,EACV,6BAA6B,GAC9B,MAAM,2CAA2C,CAAA;AAClD,OAAO,EACL,eAAe,EACf,aAAa,EACb,iBAAiB,GAElB,MAAM,SAAS,CAAA;AAIhB,MAAM,0BAA0B,GAAG,OAAO,CACxC,GAAG,EAAE,CAAC,MAAM,CAAC,yCAAyC,CAAC,EACvD,EAAE,GAAG,EAAE,KAAK,EAAE,CACf,CAAA;AAED,MAAM,WAAY,SAAQ,UAAU;IAKlC,YACE,KAAa,EACb,KAAa,EACb,OAEC;QAED,KAAK,CAAC,KAAK,CAAC,CAAA;QACZ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAA;IACxC,CAAC;CACF;AAaD,MAAM,0BAA0B,GAAG,EAAE,CAAA;AAErC,MAAM,UAAU,iBAAiB;IAC/B,MAAM,CAAC,MAAM,CAAC,GAAG,yBAAyB,EAAE,CAAA;IAC5C,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAgB,IAAI,CAAC,CAAA;IACnE,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAe,EAAE,CAAC,CAAA;IACtD,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAA;IAC3C,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAA;IACvE,CAAC,EAAE,EAAE,CAAC,CAAA;IAEN,MAAM,YAAY,GAAG,OAAO,CAC1B,GAAG,EAAE,CACH,MAAM,IAAI,IAAI;QACZ,CAAC,CAAC,MAAM,CAAC,GAAG,CACR,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,CAC3B,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE;YACjC,QAAQ,EAAE,CAAC,GAAG,OAAO,EAAE,GAAG,IAAI,CAAC;SAChC,CAAC,CACL;QACH,CAAC,CAAC,EAAE,EACR,CAAC,MAAM,CAAC,CACT,CAAA;IAED,MAAM,oBAAoB,GAAG,6BAA6B,CAAC,GAAG,EAAE;QAC9D,SAAS,EAAE,CAAC;KACb,CAAC,CAAA;IAEF,MAAM,OAAO,GAAuB,OAAO,CAAC,GAAG,EAAE;QAC/C,OAAO,YAAY;aAChB,MAAM,CAAC,CAAC,MAAmB,EAAE,EAAE;YAC9B,OAAO,WAAW,IAAI,IAAI;gBACxB,CAAC,CAAC,IAAI,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;oBAChD,MAAM,CAAC,QAAQ,IAAI,IAAI;oBACvB,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAe,EAAE,EAAE,CACvC,IAAI,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAC5C;oBACH,CAAC,CAAC,KAAK;gBACT,CAAC,CAAC,YAAY,CAAA;QAClB,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,EAAE,0BAA0B,CAAC,CAAA;IACzC,CAAC,EAAE,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC,CAAA;IAE/B,MAAM,cAAc,GAAG,WAAW,CAChC,CACE,cAA2B,EAC3B,YAA6B,EAC7B,SAAqB,EACrB,EAAE;QACF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE;YACjB,MAAM,SAAS,GAAG,aAAa,EAAE,CAAA;YAEjC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,cAAc,IAAI,IAAI,EAAE,CAAC;gBAC5D,OAAM;YACR,CAAC;YAED,IAAI,YAAY,EAAE,CAAC;gBACjB,YAAY,CAAC,MAAM,EAAE,CAAA;YACvB,CAAC;YAED,SAAS,CAAC,WAAW,CAAC,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;YAE9D,SAAS,EAAE,CAAA;QACb,CAAC,CAAC,CAAA;IACJ,CAAC,EACD,CAAC,MAAM,CAAC,CACT,CAAA;IAED,OAAO;IACL,aAAa;IACb,CAAC,0BAA0B,CACzB,aAAa,CAAC,CAAC,cAAc,CAAC,CAC9B,cAAc,CAAC,CAAC,cAAc,CAAC,CAC/B,SAAS,CAAC,CAAC,oBAAoB,CAAC,CAChC,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,MAAM,CAAC,CAAC,GAAG,EAAE;YACX,SAAS,CAAC,IAAI,CAAC,CAAA;QACjB,CAAC,CAAC,CACF,OAAO,CAAC,CAAC,GAAG,EAAE;YACZ,SAAS,CAAC,KAAK,CAAC,CAAA;QAClB,CAAC,CAAC,CACF,YAAY,CAAC,CAAC,CACZ,gBAAgB,EAChB,EAAE,aAAa,EAAE,sBAAsB,EAAE,mBAAmB,EAAE,EAC9D,EAAE;YACF,OAAO,gBAAgB,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM;gBAC/C,CAAC,CAAC,YAAY,CACV,CAAC,GAAG,CAAC,SAAS,CAAC,sCAAsC,CACnD;gBAAA,CAAC,OAAO,CACN,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;wBACf,IAAI,CAAC,CAAC,GAAG,KAAK,SAAS,EAAE,CAAC;4BACxB,CAAC,CAAC,cAAc,EAAE,CAAA;4BAClB,mBAAmB,CACjB,aAAa,KAAK,IAAI;gCACpB,CAAC,CAAC,CAAC,aAAa,GAAG,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;oCAClC,OAAO,CAAC,MAAM;gCAClB,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CACvB,CAAA;wBACH,CAAC;6BAAM,IAAI,CAAC,CAAC,GAAG,KAAK,WAAW,EAAE,CAAC;4BACjC,CAAC,CAAC,cAAc,EAAE,CAAA;4BAClB,mBAAmB,CACjB,aAAa,KAAK,IAAI;gCACpB,CAAC,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM;gCACtC,CAAC,CAAC,CAAC,CACN,CAAA;wBACH,CAAC;oBACH,CAAC,CAAC,CAEF;kBAAA,CAAC,WAAW,CACV;oBAAA,CAAC,YAAY,CACX;sBAAA,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAC9B,CAAC,WAAW,CACV,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAChB,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CACpB,QAAQ,CAAC,CAAC,GAAG,EAAE;4BACb,sBAAsB,CAAC,MAAM,CAAC,CAAA;wBAChC,CAAC,CAAC,CACF,SAAS,CAAC,CAAC,2BACT,aAAa,KAAK,KAAK;4BACrB,CAAC,CAAC,WAAW;4BACb,CAAC,CAAC,iBACN,EAAE,CAAC,CAEH;0BAAA,CAAC,MAAM,CAAC,KAAK,CAAE,CAAA,CAAC,MAAM,CAAC,KAAK,CAC9B;wBAAA,EAAE,WAAW,CAAC,CACf,CAAC,CACJ;oBAAA,EAAE,YAAY,CAChB;kBAAA,EAAE,WAAW,CACf;gBAAA,EAAE,OAAO,CACX;cAAA,EAAE,GAAG,CAAC,EACN,gBAAgB,CAAC,OAAO,CACzB;gBACH,CAAC,CAAC,IAAI,CAAA;QACV,CAAC,CAAC,EACF,CACH,CAAA;AACH,CAAC","sourcesContent":["'use client'\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport * as React from 'react'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { createPortal } from 'react-dom'\n\nimport dynamic from 'next/dynamic'\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\nimport {\n  MenuOption,\n  useBasicTypeaheadTriggerMatch,\n} from '@lexical/react/LexicalTypeaheadMenuPlugin'\nimport {\n  $createTextNode,\n  $getSelection,\n  $isRangeSelection,\n  TextNode,\n} from 'lexical'\n\nimport { Command, CommandList, CommandGroup, CommandItem } from \"../../ui/command\"\n\nconst LexicalTypeaheadMenuPlugin = dynamic(\n  () => import('./default/lexical-typeahead-menu-plugin'),\n  { ssr: false }\n)\n\nclass EmojiOption extends MenuOption {\n  title: string\n  emoji: string\n  keywords: Array<string>\n\n  constructor(\n    title: string,\n    emoji: string,\n    options: {\n      keywords?: Array<string>\n    }\n  ) {\n    super(title)\n    this.title = title\n    this.emoji = emoji\n    this.keywords = options.keywords || []\n  }\n}\n\ntype Emoji = {\n  emoji: string\n  description: string\n  category: string\n  aliases: Array<string>\n  tags: Array<string>\n  unicode_version: string\n  ios_version: string\n  skin_tones?: boolean\n}\n\nconst MAX_EMOJI_SUGGESTION_COUNT = 10\n\nexport function EmojiPickerPlugin() {\n  const [editor] = useLexicalComposerContext()\n  const [queryString, setQueryString] = useState<string | null>(null)\n  const [emojis, setEmojis] = useState<Array<Emoji>>([])\n  const [isOpen, setIsOpen] = useState(false)\n  useEffect(() => {\n    import('../utils/emoji-list').then((file) => setEmojis(file.default))\n  }, [])\n\n  const emojiOptions = useMemo(\n    () =>\n      emojis != null\n        ? emojis.map(\n            ({ emoji, aliases, tags }) =>\n              new EmojiOption(aliases[0], emoji, {\n                keywords: [...aliases, ...tags],\n              })\n          )\n        : [],\n    [emojis]\n  )\n\n  const checkForTriggerMatch = useBasicTypeaheadTriggerMatch(':', {\n    minLength: 0,\n  })\n\n  const options: Array<EmojiOption> = useMemo(() => {\n    return emojiOptions\n      .filter((option: EmojiOption) => {\n        return queryString != null\n          ? new RegExp(queryString, 'gi').exec(option.title) ||\n            option.keywords != null\n            ? option.keywords.some((keyword: string) =>\n                new RegExp(queryString, 'gi').exec(keyword)\n              )\n            : false\n          : emojiOptions\n      })\n      .slice(0, MAX_EMOJI_SUGGESTION_COUNT)\n  }, [emojiOptions, queryString])\n\n  const onSelectOption = useCallback(\n    (\n      selectedOption: EmojiOption,\n      nodeToRemove: TextNode | null,\n      closeMenu: () => void\n    ) => {\n      editor.update(() => {\n        const selection = $getSelection()\n\n        if (!$isRangeSelection(selection) || selectedOption == null) {\n          return\n        }\n\n        if (nodeToRemove) {\n          nodeToRemove.remove()\n        }\n\n        selection.insertNodes([$createTextNode(selectedOption.emoji)])\n\n        closeMenu()\n      })\n    },\n    [editor]\n  )\n\n  return (\n    // @ts-ignore\n    <LexicalTypeaheadMenuPlugin<EmojiOption>\n      onQueryChange={setQueryString}\n      onSelectOption={onSelectOption}\n      triggerFn={checkForTriggerMatch}\n      options={options}\n      onOpen={() => {\n        setIsOpen(true)\n      }}\n      onClose={() => {\n        setIsOpen(false)\n      }}\n      menuRenderFn={(\n        anchorElementRef,\n        { selectedIndex, selectOptionAndCleanUp, setHighlightedIndex }\n      ) => {\n        return anchorElementRef.current && options.length\n          ? createPortal(\n              <div className=\"fixed w-[200px] rounded-md shadow-md\">\n                <Command\n                  onKeyDown={(e) => {\n                    if (e.key === 'ArrowUp') {\n                      e.preventDefault()\n                      setHighlightedIndex(\n                        selectedIndex !== null\n                          ? (selectedIndex - 1 + options.length) %\n                              options.length\n                          : options.length - 1\n                      )\n                    } else if (e.key === 'ArrowDown') {\n                      e.preventDefault()\n                      setHighlightedIndex(\n                        selectedIndex !== null\n                          ? (selectedIndex + 1) % options.length\n                          : 0\n                      )\n                    }\n                  }}\n                >\n                  <CommandList>\n                    <CommandGroup>\n                      {options.map((option, index) => (\n                        <CommandItem\n                          key={option.key}\n                          value={option.title}\n                          onSelect={() => {\n                            selectOptionAndCleanUp(option)\n                          }}\n                          className={`flex items-center gap-2 ${\n                            selectedIndex === index\n                              ? 'bg-accent'\n                              : '!bg-transparent'\n                          }`}\n                        >\n                          {option.emoji} {option.title}\n                        </CommandItem>\n                      ))}\n                    </CommandGroup>\n                  </CommandList>\n                </Command>\n              </div>,\n              anchorElementRef.current\n            )\n          : null\n      }}\n    />\n  )\n}\n"]}