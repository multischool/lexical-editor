{"version":3,"file":"floating-text-format-plugin.jsx","sourceRoot":"","sources":["floating-text-format-plugin.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Dispatch,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  JSX,\n} from 'react'\nimport * as React from 'react'\n\nimport { $isCodeHighlightNode } from '@lexical/code'\nimport { $isLinkNode, TOGGLE_LINK_COMMAND } from '@lexical/link'\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\nimport { mergeRegister } from '@lexical/utils'\nimport {\n  $getSelection,\n  $isParagraphNode,\n  $isRangeSelection,\n  $isTextNode,\n  COMMAND_PRIORITY_LOW,\n  FORMAT_TEXT_COMMAND,\n  LexicalCommand,\n  LexicalEditor,\n  SELECTION_CHANGE_COMMAND,\n  createCommand,\n} from 'lexical'\nimport {\n  BoldIcon,\n  ItalicIcon,\n  StrikethroughIcon,\n  UnderlineIcon,\n  CodeIcon,\n  LinkIcon,\n  SubscriptIcon,\n  SuperscriptIcon,\n  ChevronDown,\n  Sparkles,\n  MessageSquare,\n  AlignJustify,\n  Scissors,\n  Maximize,\n  Minimize,\n  FileDigit,\n  PenTool,\n  Languages,\n  Edit,\n  Loader2,\n} from 'lucide-react'\nimport { createPortal } from 'react-dom'\n\nimport { Separator } from '../../ui/separator'\nimport { ToggleGroup, ToggleGroupItem } from '../../ui/toggle-group'\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n} from '../../ui/dropdown-menu'\n\nimport { useFloatingLinkContext } from '../context/floating-link-context'\nimport { getDOMRangeRect } from '../utils/get-dom-range-rect'\nimport { getSelectedNode } from '../utils/get-selected-node'\nimport { setFloatingElemPosition } from '../utils/set-floating-elem-position'\nimport { Button } from '../../ui/button'\n\n// Loading indicator component\nfunction AILoadingIndicator({ visible }: { visible: boolean }): JSX.Element | null {\n  if (!visible) return null;\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black/10 z-50\">\n      <div className=\"bg-white rounded-md p-4 shadow-lg flex items-center gap-2\">\n        <Loader2 className=\"h-5 w-5 animate-spin text-primary\" />\n        <span>Generating text with AI...</span>\n      </div>\n    </div>\n  );\n}\n\n// New command type for AI text transformations\ntype AITextTransformPayload = {\n  transformType: string;\n  editorRef: React.MutableRefObject<LexicalEditor | null>;\n};\n\n// New command for AI text transformations\nconst AI_TEXT_TRANSFORM_COMMAND: LexicalCommand<AITextTransformPayload> =\n  createCommand('AI_TEXT_TRANSFORM_COMMAND');\n\n// Helper function to process AI transformation asynchronously\nasync function processAITransformation(\n  payload: AITextTransformPayload,\n  selectedText: string,\n  setIsAILoading: (loading: boolean) => void,\n  onAIGeneration?: (prompt: string, transformType: string) => Promise<{ text: string, success: boolean, error?: string }>\n) {\n  const { transformType, editorRef } = payload;\n\n  // Create appropriate prompt based on transformation type\n  let prompt = '';\n\n  if (transformType.startsWith('translate-')) {\n    const language = transformType.split('-')[1];\n    prompt = `Translate the following text to ${language}: \"${selectedText}\"`;\n  } else if (transformType.startsWith('custom:')) {\n    prompt = transformType.substring(7);\n  } else if (transformType.startsWith('tone-')) {\n    const tone = transformType.split('-')[1];\n    prompt = `Rewrite the following text in a ${tone} tone: \"${selectedText}\"`;\n  } else if (transformType.startsWith('style-')) {\n    const style = transformType.split('-')[1];\n    prompt = `Rewrite the following text in ${style} style: \"${selectedText}\"`;\n  } else {\n    // Handle other transformations\n    switch (transformType) {\n      case 'improve':\n        prompt = `Improve the writing of the following text while maintaining its meaning: \"${selectedText}\"`;\n        break;\n      case 'shorter':\n        prompt = `Make the following text shorter and more concise while preserving its key points: \"${selectedText}\"`;\n        break;\n      case 'longer':\n        prompt = `Expand and elaborate on the following text: \"${selectedText}\"`;\n        break;\n      case 'summarize':\n        prompt = `Summarize the following text: \"${selectedText}\"`;\n        break;\n      case 'continue':\n        prompt = `Continue writing from the following text with that text included: ${selectedText}`;\n        break;\n      default:\n        prompt = `Transform the following text: \"${selectedText}\"`;\n    }\n  }\n\n  try {\n    let generatedText = '';\n\n    // Use the provided AI generation handler if available\n    if (onAIGeneration) {\n      const result = await onAIGeneration(prompt, transformType);\n\n      if (result.success) {\n        generatedText = result.text;\n      } else {\n        console.error('AI generation failed:', result.error);\n        return;\n      }\n    } \n\n    if(!generatedText) {\n      console.error('No generated text received from AI generation.');\n      return;\n    }\n\n    // Update the editor inside an update transaction\n    if (editorRef.current && generatedText) {\n      editorRef.current.update(() => {\n        const selection = $getSelection();\n        if (!$isRangeSelection(selection)) return;\n\n        // Replace the selected text with the AI-generated text\n        selection.insertText(generatedText);\n      });\n    }\n  } catch (error) {\n    console.error('Error processing AI text generation:', error);\n  } finally {\n    setIsAILoading(false);\n  }\n}\n\nfunction FloatingTextFormat({\n  editor,\n  anchorElem,\n  isLink,\n  isBold,\n  isItalic,\n  isUnderline,\n  isCode,\n  isStrikethrough,\n  isSubscript,\n  isSuperscript,\n  setIsLinkEditMode,\n  editorRef,\n  setIsAILoading,\n  onAIGeneration,\n}: {\n  editor: LexicalEditor\n  anchorElem: HTMLElement\n  isBold: boolean\n  isCode: boolean\n  isItalic: boolean\n  isLink: boolean\n  isStrikethrough: boolean\n  isSubscript: boolean\n  isSuperscript: boolean\n  isUnderline: boolean\n  setIsLinkEditMode: Dispatch<boolean>\n  editorRef: React.MutableRefObject<LexicalEditor | null>\n  setIsAILoading: Dispatch<boolean>\n  onAIGeneration?: (prompt: string, transformType: string) => Promise<{ text: string, success: boolean, error?: string }>\n}): JSX.Element {\n  const popupCharStylesEditorRef = useRef<HTMLDivElement | null>(null)\n\n  const insertLink = useCallback(() => {\n    if (!isLink) {\n      setIsLinkEditMode(true)\n      editor.dispatchCommand(TOGGLE_LINK_COMMAND, 'https://')\n    } else {\n      setIsLinkEditMode(false)\n      editor.dispatchCommand(TOGGLE_LINK_COMMAND, null)\n    }\n  }, [editor, isLink, setIsLinkEditMode])\n\n  // AI text transformation function\n  const transformText = useCallback((transformType: string) => {\n    setIsAILoading(true) // Show loading indicator\n    editor.dispatchCommand(AI_TEXT_TRANSFORM_COMMAND, {\n      transformType,\n      editorRef,\n    })\n  }, [editor, setIsAILoading, editorRef])\n\n  function mouseMoveListener(e: MouseEvent) {\n    if (\n      popupCharStylesEditorRef?.current &&\n      (e.buttons === 1 || e.buttons === 3)\n    ) {\n      if (popupCharStylesEditorRef.current.style.pointerEvents !== 'none') {\n        const x = e.clientX\n        const y = e.clientY\n        const elementUnderMouse = document.elementFromPoint(x, y)\n\n        if (!popupCharStylesEditorRef.current.contains(elementUnderMouse)) {\n          // Mouse is not over the target element => not a normal click, but probably a drag\n          popupCharStylesEditorRef.current.style.pointerEvents = 'none'\n        }\n      }\n    }\n  }\n  function mouseUpListener(e: MouseEvent) {\n    if (popupCharStylesEditorRef?.current) {\n      if (popupCharStylesEditorRef.current.style.pointerEvents !== 'auto') {\n        popupCharStylesEditorRef.current.style.pointerEvents = 'auto'\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (popupCharStylesEditorRef?.current) {\n      document.addEventListener('mousemove', mouseMoveListener)\n      document.addEventListener('mouseup', mouseUpListener)\n\n      return () => {\n        document.removeEventListener('mousemove', mouseMoveListener)\n        document.removeEventListener('mouseup', mouseUpListener)\n      }\n    }\n  }, [popupCharStylesEditorRef])\n\n  const $updateTextFormatFloatingToolbar = useCallback(() => {\n    const selection = $getSelection()\n\n    const popupCharStylesEditorElem = popupCharStylesEditorRef.current\n    const nativeSelection = window.getSelection()\n\n    if (popupCharStylesEditorElem === null) {\n      return\n    }\n\n    const rootElement = editor.getRootElement()\n    if (\n      selection !== null &&\n      nativeSelection !== null &&\n      !nativeSelection.isCollapsed &&\n      rootElement !== null &&\n      rootElement.contains(nativeSelection.anchorNode)\n    ) {\n      const rangeRect = getDOMRangeRect(nativeSelection, rootElement)\n\n      setFloatingElemPosition(\n        rangeRect,\n        popupCharStylesEditorElem,\n        anchorElem,\n        isLink\n      )\n    }\n  }, [editor, anchorElem, isLink])\n\n  useEffect(() => {\n    const scrollerElem = anchorElem.parentElement\n\n    const update = () => {\n      editor.getEditorState().read(() => {\n        $updateTextFormatFloatingToolbar()\n      })\n    }\n\n    window.addEventListener('resize', update)\n    if (scrollerElem) {\n      scrollerElem.addEventListener('scroll', update)\n    }\n\n    return () => {\n      window.removeEventListener('resize', update)\n      if (scrollerElem) {\n        scrollerElem.removeEventListener('scroll', update)\n      }\n    }\n  }, [editor, $updateTextFormatFloatingToolbar, anchorElem])\n\n  useEffect(() => {\n    editor.getEditorState().read(() => {\n      $updateTextFormatFloatingToolbar()\n    })\n    return mergeRegister(\n      editor.registerUpdateListener(({ editorState }) => {\n        editorState.read(() => {\n          $updateTextFormatFloatingToolbar()\n        })\n      }),\n\n      editor.registerCommand(\n        SELECTION_CHANGE_COMMAND,\n        () => {\n          $updateTextFormatFloatingToolbar()\n          return false\n        },\n        COMMAND_PRIORITY_LOW\n      )\n    )\n  }, [editor, $updateTextFormatFloatingToolbar])\n\n  return (\n    <div\n      ref={popupCharStylesEditorRef}\n      className=\"absolute left-0 top-0 z-10 flex gap-1 rounded-md border p-1 opacity-0 shadow-md transition-opacity duration-300 will-change-transform bg-background\"\n    >\n      {editor.isEditable() && (\n        <>\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"ghost\" className=\"flex items-center gap-1\">\n                <Sparkles className=\"h-4 w-4\" />\n                AI\n                <ChevronDown className=\"h-3 w-3 opacity-50\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"start\" className=\"w-56\">\n              <DropdownMenuLabel>Generate from selection</DropdownMenuLabel>\n              <DropdownMenuGroup>\n                <DropdownMenuItem onClick={() => transformText('improve')}>\n                  <PenTool className=\"mr-2 h-4 w-4\" />\n                  <span>Improve writing</span>\n                </DropdownMenuItem>\n                <DropdownMenuItem onClick={() => transformText('shorter')}>\n                  <Scissors className=\"mr-2 h-4 w-4\" />\n                  <span>Make shorter</span>\n                </DropdownMenuItem>\n                <DropdownMenuItem onClick={() => transformText('longer')}>\n                  <Maximize className=\"mr-2 h-4 w-4\" />\n                  <span>Make longer</span>\n                </DropdownMenuItem>\n                <DropdownMenuItem onClick={() => transformText('summarize')}>\n                  <Minimize className=\"mr-2 h-4 w-4\" />\n                  <span>Summarize</span>\n                </DropdownMenuItem>\n                <DropdownMenuItem onClick={() => transformText('continue')}>\n                  <AlignJustify className=\"mr-2 h-4 w-4\" />\n                  <span>Continue writing</span>\n                </DropdownMenuItem>\n              </DropdownMenuGroup>\n              <DropdownMenuSeparator />\n              <DropdownMenuSub>\n                <DropdownMenuSubTrigger>\n                  <MessageSquare className=\"mr-2 h-4 w-4\" />\n                  <span>Change tone</span>\n                </DropdownMenuSubTrigger>\n                <DropdownMenuSubContent>\n                  <DropdownMenuItem onClick={() => transformText('tone-professional')}>\n                    Professional\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('tone-casual')}>\n                    Casual\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('tone-friendly')}>\n                    Friendly\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('tone-confident')}>\n                    Confident\n                  </DropdownMenuItem>\n                </DropdownMenuSubContent>\n              </DropdownMenuSub>\n              <DropdownMenuSub>\n                <DropdownMenuSubTrigger>\n                  <FileDigit className=\"mr-2 h-4 w-4\" />\n                  <span>Change style</span>\n                </DropdownMenuSubTrigger>\n                <DropdownMenuSubContent>\n                  <DropdownMenuItem onClick={() => transformText('style-academic')}>\n                    Academic\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('style-technical')}>\n                    Technical\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('style-creative')}>\n                    Creative\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('style-persuasive')}>\n                    Persuasive\n                  </DropdownMenuItem>\n                </DropdownMenuSubContent>\n              </DropdownMenuSub>\n\n              <DropdownMenuSeparator />\n\n              <DropdownMenuSub>\n                <DropdownMenuSubTrigger>\n                  <Languages className=\"mr-2 h-4 w-4\" />\n                  <span>Translate</span>\n                </DropdownMenuSubTrigger>\n                <DropdownMenuSubContent>\n                  <DropdownMenuItem onClick={() => transformText('translate-english')}>\n                    English\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('translate-spanish')}>\n                    Spanish\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('translate-french')}>\n                    French\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('translate-german')}>\n                    German\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('translate-chinese')}>\n                    Chinese\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('translate-japanese')}>\n                    Japanese\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('translate-arabic')}>\n                    Arabic\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('translate-hindi')}>\n                    Hindi\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('translate-portuguese')}>\n                    Portuguese\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => transformText('translate-bangla')}>\n                    Bangla (Bengali)\n                  </DropdownMenuItem>\n                </DropdownMenuSubContent>\n              </DropdownMenuSub>\n\n              <DropdownMenuItem onClick={() => {\n                // Get selected text within an editor transaction\n                editor.update(() => {\n                  const selection = $getSelection();\n                  if (!$isRangeSelection(selection)) return;\n\n                  const selectedText = selection.getTextContent();\n                  // Display custom prompt modal\n                  const customPrompt = window.prompt('Custom AI instruction:', `Transform the following text: \"${selectedText}\"`);\n\n                  if (customPrompt) {\n                    transformText(`custom:${customPrompt}`);\n                  }\n                });\n              }}>\n                <Edit className=\"mr-2 h-4 w-4\" />\n                <span>Custom instruction</span>\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n          <ToggleGroup\n            type=\"multiple\"\n            defaultValue={[\n              isBold ? 'bold' : '',\n              isItalic ? 'italic' : '',\n              isUnderline ? 'underline' : '',\n              isStrikethrough ? 'strikethrough' : '',\n              isSubscript ? 'subscript' : '',\n              isSuperscript ? 'superscript' : '',\n              isCode ? 'code' : '',\n              isLink ? 'link' : '',\n            ]}\n          >\n            <ToggleGroupItem\n              value=\"bold\"\n              aria-label=\"Toggle bold\"\n              onClick={() => {\n                editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'bold')\n              }}\n              size=\"sm\"\n            >\n              <BoldIcon className=\"h-4 w-4\" />\n            </ToggleGroupItem>\n            <ToggleGroupItem\n              value=\"italic\"\n              aria-label=\"Toggle italic\"\n              onClick={() => {\n                editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'italic')\n              }}\n              size=\"sm\"\n            >\n              <ItalicIcon className=\"h-4 w-4\" />\n            </ToggleGroupItem>\n            <ToggleGroupItem\n              value=\"underline\"\n              aria-label=\"Toggle underline\"\n              onClick={() => {\n                editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'underline')\n              }}\n              size=\"sm\"\n            >\n              <UnderlineIcon className=\"h-4 w-4\" />\n            </ToggleGroupItem>\n            <ToggleGroupItem\n              value=\"strikethrough\"\n              aria-label=\"Toggle strikethrough\"\n              onClick={() => {\n                editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'strikethrough')\n              }}\n              size=\"sm\"\n            >\n              <StrikethroughIcon className=\"h-4 w-4\" />\n            </ToggleGroupItem>\n            <Separator orientation=\"vertical\" />\n            <ToggleGroupItem\n              value=\"code\"\n              aria-label=\"Toggle code\"\n              onClick={() => {\n                editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'code')\n              }}\n              size=\"sm\"\n            >\n              <CodeIcon className=\"h-4 w-4\" />\n            </ToggleGroupItem>\n            <ToggleGroupItem\n              value=\"link\"\n              aria-label=\"Toggle link\"\n              onClick={insertLink}\n              size=\"sm\"\n            >\n              <LinkIcon className=\"h-4 w-4\" />\n            </ToggleGroupItem>\n            <Separator orientation=\"vertical\" />\n          </ToggleGroup>\n          <ToggleGroup\n            type=\"single\"\n            defaultValue={\n              isSubscript ? 'subscript' : isSuperscript ? 'superscript' : ''\n            }\n          >\n            <ToggleGroupItem\n              value=\"subscript\"\n              aria-label=\"Toggle subscript\"\n              onClick={() => {\n                editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'subscript')\n              }}\n              size=\"sm\"\n            >\n              <SubscriptIcon className=\"h-4 w-4\" />\n            </ToggleGroupItem>\n            <ToggleGroupItem\n              value=\"superscript\"\n              aria-label=\"Toggle superscript\"\n              onClick={() => {\n                editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'superscript')\n              }}\n              size=\"sm\"\n            >\n              <SuperscriptIcon className=\"h-4 w-4\" />\n            </ToggleGroupItem>\n          </ToggleGroup>\n        </>\n      )}\n    </div>\n  )\n}\n\nfunction useFloatingTextFormatToolbar(\n  editor: LexicalEditor,\n  anchorElem: HTMLDivElement | null,\n  setIsLinkEditMode: Dispatch<boolean>,\n  editorRef: React.MutableRefObject<LexicalEditor | null>,\n  setIsAILoading: Dispatch<boolean>,\n  onAIGeneration?: (prompt: string, transformType: string) => Promise<{ text: string, success: boolean, error?: string }>\n): JSX.Element | null {\n  const [isText, setIsText] = useState(false)\n  const [isLink, setIsLink] = useState(false)\n  const [isBold, setIsBold] = useState(false)\n  const [isItalic, setIsItalic] = useState(false)\n  const [isUnderline, setIsUnderline] = useState(false)\n  const [isStrikethrough, setIsStrikethrough] = useState(false)\n  const [isSubscript, setIsSubscript] = useState(false)\n  const [isSuperscript, setIsSuperscript] = useState(false)\n  const [isCode, setIsCode] = useState(false)\n\n  const updatePopup = useCallback(() => {\n    editor.getEditorState().read(() => {\n      // Should not to pop up the floating toolbar when using IME input\n      if (editor.isComposing()) {\n        return\n      }\n      const selection = $getSelection()\n      const nativeSelection = window.getSelection()\n      const rootElement = editor.getRootElement()\n\n      if (\n        nativeSelection !== null &&\n        (!$isRangeSelection(selection) ||\n          rootElement === null ||\n          !rootElement.contains(nativeSelection.anchorNode))\n      ) {\n        setIsText(false)\n        return\n      }\n\n      if (!$isRangeSelection(selection)) {\n        return\n      }\n\n      const node = getSelectedNode(selection)\n\n      // Update text format\n      setIsBold(selection.hasFormat('bold'))\n      setIsItalic(selection.hasFormat('italic'))\n      setIsUnderline(selection.hasFormat('underline'))\n      setIsStrikethrough(selection.hasFormat('strikethrough'))\n      setIsSubscript(selection.hasFormat('subscript'))\n      setIsSuperscript(selection.hasFormat('superscript'))\n      setIsCode(selection.hasFormat('code'))\n\n      // Update links\n      const parent = node.getParent()\n      if ($isLinkNode(parent) || $isLinkNode(node)) {\n        setIsLink(true)\n      } else {\n        setIsLink(false)\n      }\n\n      if (\n        !$isCodeHighlightNode(selection.anchor.getNode()) &&\n        selection.getTextContent() !== ''\n      ) {\n        setIsText($isTextNode(node) || $isParagraphNode(node))\n      } else {\n        setIsText(false)\n      }\n\n      const rawTextContent = selection.getTextContent().replace(/\\n/g, '')\n      if (!selection.isCollapsed() && rawTextContent === '') {\n        setIsText(false)\n        return\n      }\n    })\n  }, [editor])\n\n  useEffect(() => {\n    document.addEventListener('selectionchange', updatePopup)\n    return () => {\n      document.removeEventListener('selectionchange', updatePopup)\n    }\n  }, [updatePopup])\n\n  useEffect(() => {\n    return mergeRegister(\n      editor.registerUpdateListener(() => {\n        updatePopup()\n      }),\n      editor.registerRootListener(() => {\n        if (editor.getRootElement() === null) {\n          setIsText(false)\n        }\n      }),\n      // Register AI transformation command handler\n      editor.registerCommand(\n        AI_TEXT_TRANSFORM_COMMAND,\n        (payload) => {\n          const { transformType } = payload;\n\n          // First, capture the selected text in a safe transaction\n          let selectedText = '';\n          let wasSelected = false;\n\n          // Capture the selection within a read transaction\n          editor.getEditorState().read(() => {\n            const selection = $getSelection();\n\n            if ($isRangeSelection(selection)) {\n              selectedText = selection.getTextContent();\n              wasSelected = !selection.isCollapsed();\n            }\n          });\n\n          // If no text was selected, we can't transform anything\n          if (!wasSelected || !selectedText.trim()) {\n            setIsAILoading(false);\n            return false;\n          }\n\n          // Process the transformation asynchronously\n          processAITransformation(payload, selectedText, setIsAILoading, onAIGeneration);\n\n          // Return true to indicate the command was handled\n          return true;\n        },\n        COMMAND_PRIORITY_LOW\n      )\n    )\n  }, [editor, updatePopup, setIsAILoading, onAIGeneration])\n\n  if (!isText || !anchorElem) {\n    return null\n  }\n\n  return createPortal(\n    <FloatingTextFormat\n      editor={editor}\n      anchorElem={anchorElem}\n      isLink={isLink}\n      isBold={isBold}\n      isItalic={isItalic}\n      isStrikethrough={isStrikethrough}\n      isSubscript={isSubscript}\n      isSuperscript={isSuperscript}\n      isUnderline={isUnderline}\n      isCode={isCode}\n      setIsLinkEditMode={setIsLinkEditMode}\n      editorRef={editorRef}\n      setIsAILoading={setIsAILoading}\n      onAIGeneration={onAIGeneration}\n    />,\n    anchorElem\n  )\n}\n\nexport function FloatingTextFormatToolbarPlugin({\n  anchorElem,\n  onAIGeneration,\n}: {\n  anchorElem: HTMLDivElement | null,\n  onAIGeneration?: (prompt: string, transformType: string) => Promise<{ text: string, success: boolean, error?: string }>\n}): JSX.Element | null {\n  const [editor] = useLexicalComposerContext()\n  const { setIsLinkEditMode } = useFloatingLinkContext()\n  const editorRef = useRef<LexicalEditor | null>(editor);\n  const [isAILoading, setIsAILoading] = useState(false);\n\n  // Keep the ref updated\n  useEffect(() => {\n    editorRef.current = editor;\n  }, [editor]);\n\n  return (\n    <>\n      {useFloatingTextFormatToolbar(\n        editor,\n        anchorElem,\n        setIsLinkEditMode,\n        editorRef,\n        setIsAILoading,\n        onAIGeneration\n      )}\n      <AILoadingIndicator visible={isAILoading} />\n    </>\n  );\n}"]}