{"version":3,"file":"subsuper-toolbar-plugin.jsx","sourceRoot":"","sources":["subsuper-toolbar-plugin.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAEhC,OAAO,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAA;AAClD,OAAO,EAAE,iBAAiB,EAAiB,mBAAmB,EAAE,MAAM,SAAS,CAAA;AAC/E,OAAO,EAAE,aAAa,EAAE,eAAe,EAAE,MAAM,cAAc,CAAA;AAE7D,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAA;AAEvE,OAAO,EAAE,iBAAiB,EAAE,MAAM,+BAA+B,CAAA;AACjE,OAAO,EAAE,uBAAuB,EAAE,MAAM,uCAAuC,CAAA;AAE/E,MAAM,UAAU,qBAAqB;IACnC,MAAM,EAAE,YAAY,EAAE,GAAG,iBAAiB,EAAE,CAAA;IAC5C,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAA;IACrD,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAA;IAEzD,MAAM,cAAc,GAAG,CAAC,SAAwB,EAAE,EAAE;QAClD,IAAI,iBAAiB,CAAC,SAAS,CAAC,IAAI,iBAAiB,CAAC,SAAS,CAAC,EAAE,CAAC;YACjE,aAAa;YACb,cAAc,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAA;YAChD,aAAa;YACb,gBAAgB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAA;QACtD,CAAC;IACH,CAAC,CAAA;IAED,uBAAuB,CAAC,cAAc,CAAC,CAAA;IAEvC,OAAO,CACL,CAAC,WAAW,CACV,IAAI,CAAC,QAAQ,CACb,YAAY,CAAC,CACX,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EAC9D,CAAC,CAED;MAAA,CAAC,eAAe,CACd,KAAK,CAAC,WAAW,CACjB,UAAU,CAAC,kBAAkB,CAC7B,OAAO,CAAC,CAAC,GAAG,EAAE;YACZ,YAAY,CAAC,eAAe,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAA;QAChE,CAAC,CAAC,CACF,IAAI,CAAC,IAAI,CACT,OAAO,CAAC,CAAC,SAAS,CAAC,CAEnB;QAAA,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,EACpC;MAAA,EAAE,eAAe,CACjB;MAAA,CAAC,eAAe,CACd,KAAK,CAAC,aAAa,CACnB,UAAU,CAAC,oBAAoB,CAC/B,OAAO,CAAC,CAAC,GAAG,EAAE;YACZ,YAAY,CAAC,eAAe,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAA;QAClE,CAAC,CAAC,CACF,IAAI,CAAC,IAAI,CACT,OAAO,CAAC,CAAC,SAAS,CAAC,CAEnB;QAAA,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,EACtC;MAAA,EAAE,eAAe,CACnB;IAAA,EAAE,WAAW,CAAC,CACf,CAAA;AACH,CAAC","sourcesContent":["'use client'\n\nimport { useState } from 'react'\n\nimport { $isTableSelection } from '@lexical/table'\nimport { $isRangeSelection, BaseSelection, FORMAT_TEXT_COMMAND } from 'lexical'\nimport { SubscriptIcon, SuperscriptIcon } from 'lucide-react'\n\nimport { ToggleGroup, ToggleGroupItem } from '../../../ui/toggle-group'\n\nimport { useToolbarContext } from '../../context/toolbar-context'\nimport { useUpdateToolbarHandler } from '../../editor-hooks/use-update-toolbar'\n\nexport function SubSuperToolbarPlugin() {\n  const { activeEditor } = useToolbarContext()\n  const [isSubscript, setIsSubscript] = useState(false)\n  const [isSuperscript, setIsSuperscript] = useState(false)\n\n  const $updateToolbar = (selection: BaseSelection) => {\n    if ($isRangeSelection(selection) || $isTableSelection(selection)) {\n      // @ts-ignore\n      setIsSubscript(selection.hasFormat('subscript'))\n      // @ts-ignore\n      setIsSuperscript(selection.hasFormat('superscript'))\n    }\n  }\n\n  useUpdateToolbarHandler($updateToolbar)\n\n  return (\n    <ToggleGroup\n      type=\"single\"\n      defaultValue={\n        isSubscript ? 'subscript' : isSuperscript ? 'superscript' : ''\n      }\n    >\n      <ToggleGroupItem\n        value=\"subscript\"\n        aria-label=\"Toggle subscript\"\n        onClick={() => {\n          activeEditor.dispatchCommand(FORMAT_TEXT_COMMAND, 'subscript')\n        }}\n        size=\"sm\"\n        variant={'outline'}\n      >\n        <SubscriptIcon className=\"h-4 w-4\" />\n      </ToggleGroupItem>\n      <ToggleGroupItem\n        value=\"superscript\"\n        aria-label=\"Toggle superscript\"\n        onClick={() => {\n          activeEditor.dispatchCommand(FORMAT_TEXT_COMMAND, 'superscript')\n        }}\n        size=\"sm\"\n        variant={'outline'}\n      >\n        <SuperscriptIcon className=\"h-4 w-4\" />\n      </ToggleGroupItem>\n    </ToggleGroup>\n  )\n}\n"]}