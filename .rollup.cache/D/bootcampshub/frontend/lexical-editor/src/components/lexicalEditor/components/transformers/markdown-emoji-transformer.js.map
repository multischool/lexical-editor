{"version":3,"file":"markdown-emoji-transformer.js","sourceRoot":"","sources":["markdown-emoji-transformer.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,MAAM,SAAS,CAAA;AAEzC,OAAO,SAAS,MAAM,qBAAqB,CAAA;AAE3C,MAAM,CAAC,MAAM,KAAK,GAAyB;IACzC,YAAY,EAAE,EAAE;IAChB,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI;IAClB,YAAY,EAAE,gBAAgB;IAC9B,MAAM,EAAE,gBAAgB;IACxB,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE;;QAC9B,MAAM,KAAK,GAAG,MAAA,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,0CAAE,KAAK,CAAA;QACpE,IAAI,KAAK,EAAE,CAAC;YACV,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAA;QAC1C,CAAC;IACH,CAAC;IACD,OAAO,EAAE,GAAG;IACZ,IAAI,EAAE,YAAY;CACnB,CAAA","sourcesContent":["import { TextMatchTransformer } from '@lexical/markdown'\nimport { $createTextNode } from 'lexical'\n\nimport emojiList from '../utils/emoji-list'\n\nexport const EMOJI: TextMatchTransformer = {\n  dependencies: [],\n  export: () => null,\n  importRegExp: /:([a-z0-9_]+):/,\n  regExp: /:([a-z0-9_]+):/,\n  replace: (textNode, [, name]) => {\n    const emoji = emojiList.find((e) => e.aliases.includes(name))?.emoji\n    if (emoji) {\n      textNode.replace($createTextNode(emoji))\n    }\n  },\n  trigger: ':',\n  type: 'text-match',\n}\n"]}