{"version":3,"file":"useMentionLookupService.js","sourceRoot":"","sources":["useMentionLookupService.ts"],"names":[],"mappings":"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","sourcesContent":["import { RefObject, useEffect, useMemo, useState } from \"react\";\nimport { BeautifulMentionsItem } from \"./BeautifulMentionsPluginProps\";\nimport { useDebounce } from \"./useDebounce\";\n\ninterface MentionsLookupServiceOptions {\n  queryString: string | null;\n  trigger: string | null;\n  searchDelay?: number;\n  items?: Record<string, BeautifulMentionsItem[]>;\n  onSearch?: (\n    trigger: string,\n    queryString?: string | null,\n  ) => Promise<BeautifulMentionsItem[]>;\n  justSelectedAnOption?: RefObject<boolean>;\n}\n\nexport function useMentionLookupService(options: MentionsLookupServiceOptions) {\n  const {\n    queryString,\n    trigger,\n    searchDelay,\n    items,\n    onSearch,\n    justSelectedAnOption,\n  } = options;\n  const debouncedQueryString = useDebounce(queryString, searchDelay);\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState<BeautifulMentionsItem[]>([]);\n  const [query, setQuery] = useState<string | null>(null);\n\n  // lookup in items (no search function)\n  useEffect(() => {\n    if (!items) {\n      return;\n    }\n    if (trigger === null) {\n      setResults([]);\n      setQuery(null);\n      return;\n    }\n    const mentions = Object.entries(items).find(([key]) => {\n      return new RegExp(key).test(trigger);\n    });\n    if (!mentions) {\n      return;\n    }\n    const result = !queryString\n      ? [...mentions[1]]\n      : mentions[1].filter((item) => {\n          const value = typeof item === \"string\" ? item : item.value;\n          return value.toLowerCase().includes(queryString.toLowerCase());\n        });\n    setResults(result);\n    setQuery(queryString);\n  }, [items, trigger, queryString]);\n\n  // lookup by calling onSearch\n  useEffect(() => {\n    if (!onSearch) {\n      return;\n    }\n    if (trigger === null || debouncedQueryString === null) {\n      setResults([]);\n      setQuery(null);\n      return;\n    }\n    setLoading(true);\n    setQuery(debouncedQueryString);\n    onSearch(trigger, justSelectedAnOption?.current ? \"\" : debouncedQueryString)\n      .then((result) => {\n        setResults(result);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n\n    if (justSelectedAnOption?.current) {\n      justSelectedAnOption.current = false;\n    }\n  }, [debouncedQueryString, onSearch, trigger, justSelectedAnOption]);\n\n  return useMemo(\n    () => ({ loading, results, query }),\n    [loading, results, query],\n  );\n}\n"]}