{"version":3,"file":"code-language-toolbar-plugin.jsx","sourceRoot":"","sources":["code-language-toolbar-plugin.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client'\n\nimport { useCallback, useState } from 'react'\n\nimport {\n  $isCodeNode,\n  CODE_LANGUAGE_FRIENDLY_NAME_MAP,\n  CODE_LANGUAGE_MAP,\n  getLanguageFriendlyName,\n} from '@lexical/code'\nimport { $isListNode } from '@lexical/list'\nimport { $findMatchingParent } from '@lexical/utils'\nimport {\n  $getNodeByKey,\n  $isRangeSelection,\n  $isRootOrShadowRoot,\n  BaseSelection,\n} from 'lexical'\n\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n} from '../../../ui/select'\n\nimport { useToolbarContext } from '../../context/toolbar-context'\nimport { useUpdateToolbarHandler } from '../../editor-hooks/use-update-toolbar'\n\nfunction getCodeLanguageOptions(): [string, string][] {\n  const options: [string, string][] = []\n\n  for (const [lang, friendlyName] of Object.entries(\n    CODE_LANGUAGE_FRIENDLY_NAME_MAP\n  )) {\n    options.push([lang, friendlyName])\n  }\n\n  return options\n}\n\nconst CODE_LANGUAGE_OPTIONS = getCodeLanguageOptions()\n\nexport function CodeLanguageToolbarPlugin() {\n  const { activeEditor } = useToolbarContext()\n  const [codeLanguage, setCodeLanguage] = useState<string>('')\n  const [selectedElementKey, setSelectedElementKey] = useState<string | null>(\n    null\n  )\n\n  const $updateToolbar = (selection: BaseSelection) => {\n    if ($isRangeSelection(selection)) {\n      const anchorNode = selection.anchor.getNode()\n      let element =\n        anchorNode.getKey() === 'root'\n          ? anchorNode\n          : $findMatchingParent(anchorNode, (e) => {\n              const parent = e.getParent()\n              return parent !== null && $isRootOrShadowRoot(parent)\n            })\n\n      if (element === null) {\n        element = anchorNode.getTopLevelElementOrThrow()\n      }\n\n      const elementKey = element.getKey()\n      const elementDOM = activeEditor.getElementByKey(elementKey)\n\n      if (elementDOM !== null) {\n        setSelectedElementKey(elementKey)\n\n        if (!$isListNode(element) && $isCodeNode(element)) {\n          const language =\n            element.getLanguage() as keyof typeof CODE_LANGUAGE_MAP\n          setCodeLanguage(\n            language ? CODE_LANGUAGE_MAP[language] || language : ''\n          )\n          return\n        }\n      }\n    }\n  }\n\n  useUpdateToolbarHandler($updateToolbar)\n\n  const onCodeLanguageSelect = useCallback(\n    (value: string) => {\n      activeEditor.update(() => {\n        if (selectedElementKey !== null) {\n          const node = $getNodeByKey(selectedElementKey)\n          if ($isCodeNode(node)) {\n            node.setLanguage(value)\n          }\n        }\n      })\n    },\n    [activeEditor, selectedElementKey]\n  )\n\n  return (\n    <Select>\n      <SelectTrigger className=\"h-8 w-min gap-1\">\n        <span>{getLanguageFriendlyName(codeLanguage)}</span>\n      </SelectTrigger>\n      <SelectContent>\n        {CODE_LANGUAGE_OPTIONS.map(([value, label]) => (\n          <SelectItem\n            key={value}\n            value={value}\n            onPointerUp={() => {\n              onCodeLanguageSelect(value)\n            }}\n          >\n            {label}\n          </SelectItem>\n        ))}\n      </SelectContent>\n    </Select>\n  )\n}\n"]}