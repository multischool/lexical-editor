{"version":3,"file":"markdown-hr-transformer.js","sourceRoot":"","sources":["markdown-hr-transformer.ts"],"names":[],"mappings":"AACA,OAAO,EACL,yBAAyB,EACzB,qBAAqB,EACrB,kBAAkB,GACnB,MAAM,0CAA0C,CAAA;AAGjD,MAAM,CAAC,MAAM,EAAE,GAAuB;IACpC,YAAY,EAAE,CAAC,kBAAkB,CAAC;IAClC,MAAM,EAAE,CAAC,IAAiB,EAAE,EAAE;QAG5B,OAAO,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAA;IACnD,CAAC;IACD,MAAM,EAAE,uBAAuB;IAC/B,OAAO,EAAE,CAAC,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE;QACxC,MAAM,IAAI,GAAG,yBAAyB,EAAE,CAAA;QAExC,iCAAiC;QACjC,IAAI,QAAQ,IAAI,UAAU,CAAC,cAAc,EAAE,IAAI,IAAI,EAAE,CAAC;YACpD,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QAC1B,CAAC;aAAM,CAAC;YACN,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;QAC/B,CAAC;QAED,IAAI,CAAC,UAAU,EAAE,CAAA;IACnB,CAAC;IACD,IAAI,EAAE,SAAS;CAChB,CAAA","sourcesContent":["import { ElementTransformer } from '@lexical/markdown'\nimport {\n  $createHorizontalRuleNode,\n  $isHorizontalRuleNode,\n  HorizontalRuleNode,\n} from '@lexical/react/LexicalHorizontalRuleNode'\nimport { LexicalNode } from 'lexical'\n\nexport const HR: ElementTransformer = {\n  dependencies: [HorizontalRuleNode],\n  export: (node: LexicalNode) => {\n\n  \n    return $isHorizontalRuleNode(node) ? '***' : null\n  },\n  regExp: /^(---|\\*\\*\\*|___)\\s?$/,\n  replace: (parentNode, _1, _2, isImport) => {\n    const line = $createHorizontalRuleNode()\n\n    // TODO: Get rid of isImport flag\n    if (isImport || parentNode.getNextSibling() != null) {\n      parentNode.replace(line)\n    } else {\n      parentNode.insertBefore(line)\n    }\n\n    line.selectNext()\n  },\n  type: 'element',\n}\n"]}