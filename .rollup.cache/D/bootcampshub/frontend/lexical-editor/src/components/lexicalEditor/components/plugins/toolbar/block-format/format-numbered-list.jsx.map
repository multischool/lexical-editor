{"version":3,"file":"format-numbered-list.jsx","sourceRoot":"","sources":["format-numbered-list.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,2BAA2B,EAAE,MAAM,eAAe,CAAA;AAC3D,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAA;AACnD,OAAO,EAAE,oBAAoB,EAAE,aAAa,EAAE,iBAAiB,EAAE,MAAM,SAAS,CAAA;AAEhF,OAAO,EAAE,iBAAiB,EAAE,MAAM,kCAAkC,CAAA;AACpE,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAA;AAElD,OAAO,EAAE,oBAAoB,EAAE,MAAM,yDAAyD,CAAA;AAE9F,MAAM,kBAAkB,GAAG,QAAQ,CAAA;AAEnC,MAAM,UAAU,kBAAkB;IAChC,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,iBAAiB,EAAE,CAAA;IAEvD,MAAM,eAAe,GAAG,GAAG,EAAE;QAC3B,YAAY,CAAC,MAAM,CAAC,GAAG,EAAE;YACvB,MAAM,SAAS,GAAG,aAAa,EAAE,CAAA;YACjC,IAAI,iBAAiB,CAAC,SAAS,CAAC,EAAE,CAAC;gBACjC,cAAc,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,oBAAoB,EAAE,CAAC,CAAA;YACzD,CAAC;QACH,CAAC,CAAC,CAAA;IACJ,CAAC,CAAA;IAED,MAAM,kBAAkB,GAAG,GAAG,EAAE;QAC9B,IAAI,SAAS,KAAK,QAAQ,EAAE,CAAC;YAC3B,YAAY,CAAC,eAAe,CAAC,2BAA2B,EAAE,SAAS,CAAC,CAAA;QACtE,CAAC;aAAM,CAAC;YACN,eAAe,EAAE,CAAA;QACnB,CAAC;IACH,CAAC,CAAA;IAED,OAAO,CACL,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,kBAAkB,CAAC,CAAC,aAAa,CAAC,CAAC,kBAAkB,CAAC,CACvE;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,qCAAqC,CAClD;QAAA,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAC9C;QAAA,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC,KAAK,CACjD;MAAA,EAAE,GAAG,CACP;IAAA,EAAE,UAAU,CAAC,CACd,CAAA;AACH,CAAC","sourcesContent":["import { INSERT_ORDERED_LIST_COMMAND } from '@lexical/list'\nimport { $setBlocksType } from '@lexical/selection'\nimport { $createParagraphNode, $getSelection, $isRangeSelection } from 'lexical'\n\nimport { useToolbarContext } from '../../../context/toolbar-context'\nimport { SelectItem } from '../../../../ui/select'\n\nimport { blockTypeToBlockName } from '../../../plugins/toolbar/block-format/block-format-data'\n\nconst BLOCK_FORMAT_VALUE = 'number'\n\nexport function FormatNumberedList() {\n  const { activeEditor, blockType } = useToolbarContext()\n\n  const formatParagraph = () => {\n    activeEditor.update(() => {\n      const selection = $getSelection()\n      if ($isRangeSelection(selection)) {\n        $setBlocksType(selection, () => $createParagraphNode())\n      }\n    })\n  }\n\n  const formatNumberedList = () => {\n    if (blockType !== 'number') {\n      activeEditor.dispatchCommand(INSERT_ORDERED_LIST_COMMAND, undefined)\n    } else {\n      formatParagraph()\n    }\n  }\n\n  return (\n    <SelectItem value={BLOCK_FORMAT_VALUE} onPointerDown={formatNumberedList}>\n      <div className=\"flex items-center gap-1 font-normal\">\n        {blockTypeToBlockName[BLOCK_FORMAT_VALUE].icon}\n        {blockTypeToBlockName[BLOCK_FORMAT_VALUE].label}\n      </div>\n    </SelectItem>\n  )\n}\n"]}