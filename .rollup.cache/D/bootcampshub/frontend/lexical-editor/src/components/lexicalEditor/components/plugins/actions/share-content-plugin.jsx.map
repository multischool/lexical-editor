{"version":3,"file":"share-content-plugin.jsx","sourceRoot":"","sources":["share-content-plugin.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAA;AAEjC,OAAO,EAEL,iCAAiC,EACjC,iCAAiC,GAClC,MAAM,eAAe,CAAA;AACtB,OAAO,EAAE,yBAAyB,EAAE,MAAM,uCAAuC,CAAA;AACjF,OAAO,EAAE,qBAAqB,EAAE,MAAM,SAAS,CAAA;AAC/C,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAA;AACvC,OAAO,EAAE,KAAK,EAAE,MAAM,QAAQ,CAAA;AAE9B,OAAO,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAA;AAC3C,OAAO,EACL,OAAO,EACP,cAAc,EACd,cAAc,GACf,MAAM,qBAAqB,CAAA;AAE5B,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,+BAA+B,CAAA;AAEtE,MAAM,UAAU,kBAAkB;IAChC,MAAM,CAAC,MAAM,CAAC,GAAG,yBAAyB,EAAE,CAAA;IAC5C,KAAK,UAAU,QAAQ,CAAC,GAAuB;QAC7C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAA;QAC/C,GAAG,CAAC,IAAI,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,CAAA;QAC/B,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAA;QAC7B,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAA;QAC3C,MAAM,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;IACpD,CAAC;IACD,SAAS,CAAC,GAAG,EAAE;QACb,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAO,EAAE,EAAE;YACjD,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,QAAQ,EAAE,CAAC;gBACnC,MAAM,CAAC,cAAc,CAAC,iCAAiC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAA;gBACrE,MAAM,CAAC,eAAe,CAAC,qBAAqB,EAAE,SAAS,CAAC,CAAA;YAC1D,CAAC;QACH,CAAC,CAAC,CAAA;IACJ,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;IAEZ,OAAO,CACL,CAAC,OAAO,CACN;MAAA,CAAC,cAAc,CAAC,OAAO,CACrB;QAAA,CAAC,MAAM,CACL,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,OAAO,CAAC,CAAC,GAAG,EAAE,CACZ,QAAQ,CACN,iCAAiC,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE;YACzD,MAAM,EAAE,QAAQ;SACjB,CAAC,CACH,CAAC,IAAI,CACJ,GAAG,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,yBAAyB,CAAC,EAC9C,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAE7D,CAAC,CACD,KAAK,CAAC,OAAO,CACb,UAAU,CAAC,+CAA+C,CAC1D,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,SAAS,CAAC,KAAK,CAEf;UAAA,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAC9B;QAAA,EAAE,MAAM,CACV;MAAA,EAAE,cAAc,CAChB;MAAA,CAAC,cAAc,CAAC,aAAa,EAAE,cAAc,CAC/C;IAAA,EAAE,OAAO,CAAC,CACX,CAAA;AACH,CAAC","sourcesContent":["'use client'\n\nimport { useEffect } from 'react'\n\nimport {\n  SerializedDocument,\n  editorStateFromSerializedDocument,\n  serializedDocumentFromEditorState,\n} from '@lexical/file'\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\nimport { CLEAR_HISTORY_COMMAND } from 'lexical'\nimport { SendIcon } from 'lucide-react'\nimport { toast } from 'sonner'\n\nimport { Button } from '../../../ui/button'\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from '../../../ui/tooltip'\n\nimport { docFromHash, docToHash } from '../../utils/doc-serialization'\n\nexport function ShareContentPlugin() {\n  const [editor] = useLexicalComposerContext()\n  async function shareDoc(doc: SerializedDocument): Promise<void> {\n    const url = new URL(window.location.toString())\n    url.hash = await docToHash(doc)\n    const newUrl = url.toString()\n    window.history.replaceState({}, '', newUrl)\n    await window.navigator.clipboard.writeText(newUrl)\n  }\n  useEffect(() => {\n    docFromHash(window.location.hash).then((doc:any) => {\n      if (doc && doc.source === 'editor') {\n        editor.setEditorState(editorStateFromSerializedDocument(editor, doc))\n        editor.dispatchCommand(CLEAR_HISTORY_COMMAND, undefined)\n      }\n    })\n  }, [editor])\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>\n        <Button\n          variant={'ghost'}\n          onClick={() =>\n            shareDoc(\n              serializedDocumentFromEditorState(editor.getEditorState(), {\n                source: 'editor',\n              })\n            ).then(\n              () => toast.success('URL copied to clipboard'),\n              () => toast.error('URL could not be copied to clipboard')\n            )\n          }\n          title=\"Share\"\n          aria-label=\"Share Playground link to current editor state\"\n          size={'sm'}\n          className=\"p-2\"\n        >\n          <SendIcon className=\"size-4\" />\n        </Button>\n      </TooltipTrigger>\n      <TooltipContent>Share Content</TooltipContent>\n    </Tooltip>\n  )\n}\n"]}