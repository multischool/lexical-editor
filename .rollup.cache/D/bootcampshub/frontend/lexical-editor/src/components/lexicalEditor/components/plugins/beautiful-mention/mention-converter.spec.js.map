{"version":3,"file":"mention-converter.spec.js","sourceRoot":"","sources":["mention-converter.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACzC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACvD,OAAO,EACL,0BAA0B,EAC1B,wBAAwB,EACxB,YAAY,GACb,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAAE,kBAAkB,EAAE,MAAM,0CAA0C,CAAC;AAC9E,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC5D,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAC9E,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,QAAQ,CAAC;AAC9C,OAAO,EACL,4BAA4B,EAC5B,uBAAuB,GACxB,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAC;AACtD,OAAO,EAAE,oBAAoB,EAAE,MAAM,eAAe,CAAC;AACrD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAEpD,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,EAAE,CAAC,qCAAqC,EAAE,GAAG,EAAE;QAC7C,MAAM,QAAQ,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;QACpC,MAAM,IAAI,GAAG,iDAAiD,CAAC;QAC/D,MAAM,OAAO,GAAG,uBAAuB,CACrC,IAAI,EACJ,QAAQ,EACR,mBAAmB,CACpB,CAAC;QAEF,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAE/B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEtC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;YAClC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC;QAED,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEhD,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;YAClC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1C,CAAC;QAED,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEvC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;YAClC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACxC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,GAAG,EAAE;QAC7D,MAAM,QAAQ,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;QACpC,MAAM,IAAI,GAAG,sBAAsB,CAAC;QACpC,MAAM,OAAO,GAAG,uBAAuB,CACrC,IAAI,EACJ,QAAQ,EACR,mBAAmB,CACpB,CAAC;QAEF,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAE/B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEtC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;YAClC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC;QAED,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEvC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;YAClC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE;QAChD,MAAM,QAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC5B,MAAM,IAAI,GAAG,wBAAwB,CAAC;QACtC,MAAM,OAAO,GAAG,uBAAuB,CACrC,IAAI,EACJ,QAAQ,EACR,mBAAmB,CACpB,CAAC;QACF,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACxD,MAAM,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QACvB,MAAM,IAAI,GAAG,yBAAyB,CAAC;QACvC,MAAM,OAAO,GAAG,uBAAuB,CACrC,IAAI,EACJ,QAAQ,EACR,mBAAmB,CACpB,CAAC;QACF,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACnD,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;YAClC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAC1C,MAAM,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QACvB,MAAM,IAAI,GAAG,aAAa,CAAC;QAC3B,MAAM,OAAO,GAAG,uBAAuB,CACrC,IAAI,EACJ,QAAQ,EACR,mBAAmB,CACpB,CAAC;QACF,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;YAClC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC;QACD,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,qFAAqF;IACrF,EAAE,CAAC,IAAI,CAAC,kDAAkD,EAAE,GAAG,EAAE;QAC/D,MAAM,MAAM,GAAG,YAAY,CAAC;YAC1B,KAAK,EAAE;gBACL,oBAAoB;gBACpB,eAAe;gBACf,kBAAkB;gBAClB,QAAQ;gBACR,WAAW;gBACX,QAAQ;gBACR,QAAQ;gBACR,YAAY;gBACZ,SAAS;aACV;YACD,OAAO,CAAC,GAAG;gBACT,MAAM,GAAG,CAAC;YACZ,CAAC;SACF,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE;YACjB,0BAA0B,CACxB,yCAAyC,EACzC,YAAY,CACb,CAAC;YACF,4BAA4B,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YAEzC,4DAA4D;YAC5D,MAAM,SAAS,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC;YAC9C,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YAEzC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC/C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;YACtD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACrD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC/C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC/C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;YACtD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAElD,MAAM,QAAQ,GAAG,wBAAwB,CAAC,YAAY,CAAC,CAAC;YACxD,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { CodeNode } from \"@lexical/code\";\nimport { LinkNode } from \"@lexical/link\";\nimport { ListItemNode, ListNode } from \"@lexical/list\";\nimport {\n  $convertFromMarkdownString,\n  $convertToMarkdownString,\n  TRANSFORMERS,\n} from \"@lexical/markdown\";\nimport { HorizontalRuleNode } from \"@lexical/react/LexicalHorizontalRuleNode\";\nimport { HeadingNode, QuoteNode } from \"@lexical/rich-text\";\nimport { $nodesOfType, createEditor, ParagraphNode, TextNode } from \"lexical\";\nimport { describe, expect, it } from \"vitest\";\nimport {\n  $transformTextToMentionNodes,\n  convertToMentionEntries,\n} from \"./mention-converter\";\nimport { DEFAULT_PUNCTUATION } from \"./mention-utils\";\nimport { BeautifulMentionNode } from \"./MentionNode\";\nimport { PlaceholderNode } from \"./PlaceholderNode\";\n\ndescribe(\"mention-converter\", () => {\n  it(\"should find mention entries in text\", () => {\n    const triggers = [\"@\", \"due:\", \"#\"];\n    const text = \"Hey @john, the task is #urgent and due:tomorrow\";\n    const entries = convertToMentionEntries(\n      text,\n      triggers,\n      DEFAULT_PUNCTUATION,\n    );\n\n    expect(entries.length).toBe(6);\n\n    expect(entries[0].type).toBe(\"text\");\n    expect(entries[0].value).toBe(\"Hey \");\n\n    expect(entries[1].type).toBe(\"mention\");\n    if (entries[1].type === \"mention\") {\n      expect(entries[1].trigger).toBe(\"@\");\n      expect(entries[1].value).toBe(\"john\");\n    }\n\n    expect(entries[2].type).toBe(\"text\");\n    expect(entries[2].value).toBe(\", the task is \");\n\n    expect(entries[3].type).toBe(\"mention\");\n    if (entries[3].type === \"mention\") {\n      expect(entries[3].trigger).toBe(\"#\");\n      expect(entries[3].value).toBe(\"urgent\");\n    }\n\n    expect(entries[4].type).toBe(\"text\");\n    expect(entries[4].value).toBe(\" and \");\n\n    expect(entries[5].type).toBe(\"mention\");\n    if (entries[5].type === \"mention\") {\n      expect(entries[5].trigger).toBe(\"due:\");\n      expect(entries[5].value).toBe(\"tomorrow\");\n    }\n  });\n\n  it(\"should find multiple mentions with the same trigger\", () => {\n    const triggers = [\"@\", \"due:\", \"#\"];\n    const text = \"Hey @john and @jane.\";\n    const entries = convertToMentionEntries(\n      text,\n      triggers,\n      DEFAULT_PUNCTUATION,\n    );\n\n    expect(entries.length).toBe(5);\n\n    expect(entries[0].type).toBe(\"text\");\n    expect(entries[0].value).toBe(\"Hey \");\n\n    expect(entries[1].type).toBe(\"mention\");\n    if (entries[1].type === \"mention\") {\n      expect(entries[1].trigger).toBe(\"@\");\n      expect(entries[1].value).toBe(\"john\");\n    }\n\n    expect(entries[2].type).toBe(\"text\");\n    expect(entries[2].value).toBe(\" and \");\n\n    expect(entries[3].type).toBe(\"mention\");\n    if (entries[3].type === \"mention\") {\n      expect(entries[3].trigger).toBe(\"@\");\n      expect(entries[3].value).toBe(\"jane\");\n    }\n  });\n\n  it(\"should ignore triggers without a value\", () => {\n    const triggers = [\"@\", \"#\"];\n    const text = \"Hey @ john and # jane.\";\n    const entries = convertToMentionEntries(\n      text,\n      triggers,\n      DEFAULT_PUNCTUATION,\n    );\n    expect(entries.length).toBe(1);\n    expect(entries[0].type).toBe(\"text\");\n  });\n\n  it(\"should ignore triggers in the middle of a word\", () => {\n    const triggers = [\"@\"];\n    const text = \"test@example.com @hello\";\n    const entries = convertToMentionEntries(\n      text,\n      triggers,\n      DEFAULT_PUNCTUATION,\n    );\n    expect(entries.length).toBe(2);\n    expect(entries[0].type).toBe(\"text\");\n    expect(entries[0].value).toBe(\"test@example.com \");\n    expect(entries[1].type).toBe(\"mention\");\n    if (entries[1].type === \"mention\") {\n      expect(entries[1].trigger).toBe(\"@\");\n      expect(entries[1].value).toBe(\"hello\");\n    }\n  });\n\n  it(\"should find mentions in brackets\", () => {\n    const triggers = [\"@\"];\n    const text = \"Hey (@john)\";\n    const entries = convertToMentionEntries(\n      text,\n      triggers,\n      DEFAULT_PUNCTUATION,\n    );\n    expect(entries.length).toBe(3);\n    expect(entries[0].type).toBe(\"text\");\n    expect(entries[0].value).toBe(\"Hey (\");\n    expect(entries[1].type).toBe(\"mention\");\n    if (entries[1].type === \"mention\") {\n      expect(entries[1].trigger).toBe(\"@\");\n      expect(entries[1].value).toBe(\"john\");\n    }\n    expect(entries[2].type).toBe(\"text\");\n    expect(entries[2].value).toBe(\")\");\n  });\n\n  // Temp. disabling this test. For unknown reason, it fails after update to Vite 6.0.0\n  it.skip(\"should transform mention string to mention nodes\", () => {\n    const editor = createEditor({\n      nodes: [\n        BeautifulMentionNode,\n        PlaceholderNode,\n        HorizontalRuleNode,\n        CodeNode,\n        HeadingNode,\n        LinkNode,\n        ListNode,\n        ListItemNode,\n        QuoteNode,\n      ],\n      onError(err) {\n        throw err;\n      },\n    });\n    editor.update(() => {\n      $convertFromMarkdownString(\n        \"Hey @catherine, the **task** is #urgent\",\n        TRANSFORMERS,\n      );\n      $transformTextToMentionNodes([\"@\", \"#\"]);\n\n      // eslint-disable-next-line @typescript-eslint/no-deprecated\n      const paragraph = $nodesOfType(ParagraphNode);\n      const nodes = paragraph[0].getChildren();\n\n      expect(nodes[0]).toBeInstanceOf(TextNode);\n      expect(nodes[0].getTextContent()).toBe(\"Hey \");\n      expect(nodes[1]).toBeInstanceOf(BeautifulMentionNode);\n      expect(nodes[1].getTextContent()).toBe(\"@catherine\");\n      expect(nodes[2]).toBeInstanceOf(TextNode);\n      expect(nodes[2].getTextContent()).toBe(\", the \");\n      expect(nodes[3]).toBeInstanceOf(TextNode);\n      expect(nodes[3].getTextContent()).toBe(\"task\");\n      expect(nodes[4]).toBeInstanceOf(TextNode);\n      expect(nodes[4].getTextContent()).toBe(\" is \");\n      expect(nodes[5]).toBeInstanceOf(BeautifulMentionNode);\n      expect(nodes[5].getTextContent()).toBe(\"#urgent\");\n\n      const markdown = $convertToMarkdownString(TRANSFORMERS);\n      expect(markdown).toBe(\"Hey @catherine, the **task** is #urgent\");\n    });\n  });\n});\n"]}