{"version":3,"file":"poll-component.jsx","sourceRoot":"","sources":["poll-component.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { useCallback, useEffect, useMemo, useRef, useState, JSX } from 'react'\n\nimport { useCollaborationContext } from '@lexical/react/LexicalCollaborationContext'\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\nimport { useLexicalNodeSelection } from '@lexical/react/useLexicalNodeSelection'\nimport { mergeRegister } from '@lexical/utils'\nimport {\n  $getNodeByKey,\n  $getSelection,\n  $isNodeSelection,\n  BaseSelection,\n  CLICK_COMMAND,\n  COMMAND_PRIORITY_LOW,\n  KEY_BACKSPACE_COMMAND,\n  KEY_DELETE_COMMAND,\n  NodeKey,\n} from 'lexical'\n\nimport { Button } from '../../ui/button'\nimport { Input } from '../../ui/input'\n\nimport type { Option, Options, PollNode } from '../nodes/poll-node'\nimport { $isPollNode, createPollOption } from '../nodes/poll-node'\n\nfunction getTotalVotes(options: Options): number {\n  return options.reduce((totalVotes, next) => {\n    return totalVotes + next.votes.length\n  }, 0)\n}\n\nfunction PollOptionComponent({\n  option,\n  index,\n  options,\n  totalVotes,\n  withPollNode,\n}: {\n  index: number\n  option: Option\n  options: Options\n  totalVotes: number\n  withPollNode: (\n    cb: (pollNode: PollNode) => void,\n    onSelect?: () => void\n  ) => void\n}): JSX.Element {\n  const { clientID } = useCollaborationContext()\n  const checkboxRef = useRef(null)\n  const votesArray = option.votes\n  const checkedIndex = votesArray.indexOf(clientID)\n  const checked = checkedIndex !== -1\n  const votes = votesArray.length\n  const text = option.text\n\n  return (\n    <div className=\"mb-2.5 flex flex-row items-center\">\n      <div\n        className={`relative mr-2.5 flex h-[22px] w-[22px] rounded-md border border-gray-400 ${\n          checked\n            ? 'border-primary bg-primary after:pointer-events-none after:absolute after:left-2 after:top-1 after:m-0 after:block after:h-[9px] after:w-[5px] after:rotate-45 after:cursor-pointer after:border-b-2 after:border-r-2 after:border-solid after:border-white after:content-[\"\"]'\n            : ''\n        }`}\n      >\n        <input\n          ref={checkboxRef}\n          className=\"absolute block h-full w-full cursor-pointer border-0 opacity-0\"\n          type=\"checkbox\"\n          onChange={(e) => {\n            withPollNode((node) => {\n              node.toggleVote(option, clientID)\n            })\n          }}\n          checked={checked}\n        />\n      </div>\n      <div className=\"relative flex flex-[10px] cursor-pointer overflow-hidden rounded-md border border-primary\">\n        <div\n          className=\"transition-width absolute left-0 top-0 z-0 h-full bg-accent duration-1000 ease-in-out\"\n          style={{ width: `${votes === 0 ? 0 : (votes / totalVotes) * 100}%` }}\n        />\n        <span className=\"absolute right-4 top-1.5 text-xs text-primary\">\n          {votes > 0 && (votes === 1 ? '1 vote' : `${votes} votes`)}\n        </span>\n        <Input\n          type=\"text\"\n          value={text}\n          onChange={(e) => {\n            const target = e.target\n            const value = target.value\n            const selectionStart = target.selectionStart\n            const selectionEnd = target.selectionEnd\n            withPollNode(\n              (node) => {\n                node.setOptionText(option, value)\n              },\n              () => {\n                target.selectionStart = selectionStart\n                target.selectionEnd = selectionEnd\n              }\n            )\n          }}\n          placeholder={`Option ${index + 1}`}\n        />\n      </div>\n      <button\n        disabled={options.length < 3}\n        className={`relative z-0 ml-1.5 flex h-7 w-7 cursor-pointer rounded-md border-0 bg-transparent bg-[position:6px_6px] bg-no-repeat opacity-30 before:absolute before:left-[13px] before:top-1.5 before:block before:h-[15px] before:w-0.5 before:-rotate-45 before:bg-gray-400 before:content-[''] after:absolute after:left-[13px] after:top-1.5 after:block after:h-[15px] after:w-0.5 after:rotate-45 after:bg-gray-400 after:content-[''] hover:bg-gray-100 hover:opacity-100 disabled:cursor-not-allowed disabled:hover:bg-transparent disabled:hover:opacity-30`}\n        aria-label=\"Remove\"\n        onClick={() => {\n          withPollNode((node) => {\n            node.deleteOption(option)\n          })\n        }}\n      />\n    </div>\n  )\n}\n\nexport default function PollComponent({\n  question,\n  options,\n  nodeKey,\n}: {\n  nodeKey: NodeKey\n  options: Options\n  question: string\n}): JSX.Element {\n  const [editor] = useLexicalComposerContext()\n  const totalVotes = useMemo(() => getTotalVotes(options), [options])\n  const [isSelected, setSelected, clearSelection] =\n    useLexicalNodeSelection(nodeKey)\n  const [selection, setSelection] = useState<BaseSelection | null>(null)\n  const ref = useRef(null)\n\n  const $onDelete = useCallback(\n    (payload: KeyboardEvent) => {\n      const deleteSelection = $getSelection()\n      if (isSelected && $isNodeSelection(deleteSelection)) {\n        const event: KeyboardEvent = payload\n        event.preventDefault()\n        editor.update(() => {\n          deleteSelection.getNodes().forEach((node) => {\n            if ($isPollNode(node)) {\n              node.remove()\n            }\n          })\n        })\n      }\n      return false\n    },\n    [editor, isSelected]\n  )\n\n  useEffect(() => {\n    return mergeRegister(\n      editor.registerUpdateListener(({ editorState }) => {\n        setSelection(editorState.read(() => $getSelection()))\n      }),\n      editor.registerCommand<MouseEvent>(\n        CLICK_COMMAND,\n        (payload) => {\n          const event = payload\n\n          if (event.target === ref.current) {\n            if (!event.shiftKey) {\n              clearSelection()\n            }\n            setSelected(!isSelected)\n            return true\n          }\n\n          return false\n        },\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(\n        KEY_DELETE_COMMAND,\n        $onDelete,\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(\n        KEY_BACKSPACE_COMMAND,\n        $onDelete,\n        COMMAND_PRIORITY_LOW\n      )\n    )\n  }, [clearSelection, editor, isSelected, nodeKey, $onDelete, setSelected])\n\n  const withPollNode = (\n    cb: (node: PollNode) => void,\n    onUpdate?: () => void\n  ): void => {\n    editor.update(\n      () => {\n        const node = $getNodeByKey(nodeKey)\n        if ($isPollNode(node)) {\n          cb(node)\n        }\n      },\n      { onUpdate }\n    )\n  }\n\n  const addOption = () => {\n    withPollNode((node) => {\n      node.addOption(createPollOption())\n    })\n  }\n\n  const isFocused = $isNodeSelection(selection) && isSelected\n\n  return (\n    <div\n      className={`min-w-[400px] max-w-[600px] cursor-pointer select-none rounded-lg border border-gray-200 bg-background ${\n        isFocused ? 'outline outline-2 outline-primary' : ''\n      }`}\n      ref={ref}\n    >\n      <div className=\"m-4 cursor-default\">\n        <h2 className=\"m-0 mb-4 text-center text-lg text-gray-600\">\n          {question}\n        </h2>\n        {options.map((option, index) => {\n          const key = option.uid\n          return (\n            <PollOptionComponent\n              key={key}\n              withPollNode={withPollNode}\n              option={option}\n              index={index}\n              options={options}\n              totalVotes={totalVotes}\n            />\n          )\n        })}\n        <div className=\"flex justify-center\">\n          <Button onClick={addOption} size=\"sm\">\n            Add Option\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n"]}