{"version":3,"file":"link-toolbar-plugin.jsx","sourceRoot":"","sources":["link-toolbar-plugin.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client'\n\nimport { useCallback, useEffect, useState } from 'react'\n\nimport { $isLinkNode, TOGGLE_LINK_COMMAND } from '@lexical/link'\nimport {\n  $isRangeSelection,\n  BaseSelection,\n  COMMAND_PRIORITY_NORMAL,\n} from 'lexical'\nimport { KEY_MODIFIER_COMMAND } from 'lexical'\nimport { LinkIcon } from 'lucide-react'\n\nimport { Toggle } from '../../../ui/toggle'\n\nimport { useFloatingLinkContext } from '../../context/floating-link-context'\nimport { useToolbarContext } from '../../context/toolbar-context'\nimport { useUpdateToolbarHandler } from '../../editor-hooks/use-update-toolbar'\nimport { getSelectedNode } from '../../utils/get-selected-node'\nimport { sanitizeUrl } from '../../utils/url'\n\nexport function LinkToolbarPlugin() {\n  const { activeEditor } = useToolbarContext()\n  const { setIsLinkEditMode } = useFloatingLinkContext()\n  const [isLink, setIsLink] = useState(false)\n\n  const $updateToolbar = (selection: BaseSelection) => {\n    if ($isRangeSelection(selection)) {\n      const node = getSelectedNode(selection)\n      const parent = node.getParent()\n      if ($isLinkNode(parent) || $isLinkNode(node)) {\n        setIsLink(true)\n      } else {\n        setIsLink(false)\n      }\n    }\n  }\n\n  useUpdateToolbarHandler($updateToolbar)\n\n  useEffect(() => {\n    return activeEditor.registerCommand(\n      KEY_MODIFIER_COMMAND,\n      (payload) => {\n        const event: KeyboardEvent = payload\n        const { code, ctrlKey, metaKey } = event\n\n        if (code === 'KeyK' && (ctrlKey || metaKey)) {\n          event.preventDefault()\n          let url: string | null\n          if (!isLink) {\n            setIsLinkEditMode(true)\n            url = sanitizeUrl('https://')\n          } else {\n            setIsLinkEditMode(false)\n            url = null\n          }\n          return activeEditor.dispatchCommand(TOGGLE_LINK_COMMAND, url)\n        }\n        return false\n      },\n      COMMAND_PRIORITY_NORMAL\n    )\n  }, [activeEditor, isLink, setIsLinkEditMode])\n\n  const insertLink = useCallback(() => {\n    if (!isLink) {\n      setIsLinkEditMode(true)\n      activeEditor.dispatchCommand(TOGGLE_LINK_COMMAND, sanitizeUrl('https://'))\n    } else {\n      setIsLinkEditMode(false)\n      activeEditor.dispatchCommand(TOGGLE_LINK_COMMAND, null)\n    }\n  }, [activeEditor, isLink, setIsLinkEditMode])\n\n  return (\n    <Toggle\n      size={'sm'}\n      variant={'outline'}\n      aria-label=\"Toggle link\"\n      onClick={insertLink}\n    >\n      <LinkIcon className=\"h-4 w-4\" />\n    </Toggle>\n  )\n}\n"]}