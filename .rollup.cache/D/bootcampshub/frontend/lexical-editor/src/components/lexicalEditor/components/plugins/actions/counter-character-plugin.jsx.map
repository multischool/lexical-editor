{"version":3,"file":"counter-character-plugin.jsx","sourceRoot":"","sources":["counter-character-plugin.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client'\n\nimport { useEffect, useState } from \"react\";\nimport { $rootTextContent } from '@lexical/text';\nimport { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\n\nlet textEncoderInstance: null | TextEncoder = null;\n\nfunction textEncoder(): null | TextEncoder {\n  if (window.TextEncoder === undefined) {\n    return null;\n  }\n\n  if (textEncoderInstance === null) {\n    textEncoderInstance = new window.TextEncoder();\n  }\n\n  return textEncoderInstance;\n}\n\nfunction utf8Length(text: string) {\n  const currentTextEncoder = textEncoder();\n\n  if (currentTextEncoder === null) {\n    // http://stackoverflow.com/a/5515960/210370\n    const m = encodeURIComponent(text).match(/%[89ABab]/g);\n    return text.length + (m ? m.length : 0);\n  }\n\n  return currentTextEncoder.encode(text).length;\n}\n\ninterface CounterCharacterPluginProps {\n  charset?: 'UTF-8' | 'UTF-16'\n}\n\nconst strlen = (text: string, charset: 'UTF-8' | 'UTF-16') => {\n  if (charset === 'UTF-8') {\n    return utf8Length(text);\n  } else if (charset === 'UTF-16') {\n    return text.length;\n  }\n}\n\nconst countWords = (text: string) => {\n  return text.split(/\\s+/).filter(word => word.length > 0).length;\n}\n\nexport function CounterCharacterPlugin({ charset = \"UTF-16\" }: CounterCharacterPluginProps) {\n  const [editor] = useLexicalComposerContext();\n  const [stats, setStats] = useState(() => {\n    const initialText = editor.getEditorState().read($rootTextContent);\n    return {\n      characters: strlen(initialText, charset),\n      words: countWords(initialText)\n    };\n  });\n\n  useEffect(() => {\n    return editor.registerTextContentListener((currentText: string) => {\n      setStats({\n        characters: strlen(currentText, charset),\n        words: countWords(currentText)\n      });\n    });\n  }, [editor, charset]);\n\n  return (\n    <div className=\"text-xs flex gap-2 text-gray-500 whitespace-nowrap\">\n      <p>{stats.characters} characters</p>\n      |\n      <p>{stats.words} words</p>\n    </div>\n  );\n}"]}