{"version":3,"file":"layout-item-node.jsx","sourceRoot":"","sources":["layout-item-node.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,gBAAgB,CAAA;AAOvD,OAAO,EAAE,WAAW,EAAE,MAAM,SAAS,CAAA;AAIrC,MAAM,OAAO,cAAe,SAAQ,WAAW;IAC7C,MAAM,CAAC,OAAO;QACZ,OAAO,aAAa,CAAA;IACtB,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,IAAoB;QAC/B,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACvC,CAAC;IAED,SAAS,CAAC,MAAoB;QAC5B,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;QACzC,IAAI,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,KAAK,QAAQ,EAAE,CAAC;YAChD,sBAAsB,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;QACtD,CAAC;QACD,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,SAAS;QACP,OAAO,KAAK,CAAA;IACd,CAAC;IAED,MAAM,CAAC,SAAS;QACd,OAAO,EAAE,CAAA;IACX,CAAC;IAED,MAAM,CAAC,UAAU;QACf,OAAO,qBAAqB,EAAE,CAAA;IAChC,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAA;IACb,CAAC;IAED,UAAU;QACR,uCACK,KAAK,CAAC,UAAU,EAAE,KACrB,IAAI,EAAE,aAAa,EACnB,OAAO,EAAE,CAAC,IACX;IACH,CAAC;CACF;AAED,MAAM,UAAU,qBAAqB;IACnC,OAAO,IAAI,cAAc,EAAE,CAAA;AAC7B,CAAC;AAED,MAAM,UAAU,iBAAiB,CAC/B,IAAoC;IAEpC,OAAO,IAAI,YAAY,cAAc,CAAA;AACvC,CAAC","sourcesContent":["import { addClassNamesToElement } from '@lexical/utils'\nimport type {\n  DOMConversionMap,\n  EditorConfig,\n  LexicalNode,\n  SerializedElementNode,\n} from 'lexical'\nimport { ElementNode } from 'lexical'\n\nexport type SerializedLayoutItemNode = SerializedElementNode\n\nexport class LayoutItemNode extends ElementNode {\n  static getType(): string {\n    return 'layout-item'\n  }\n\n  static clone(node: LayoutItemNode): LayoutItemNode {\n    return new LayoutItemNode(node.__key)\n  }\n\n  createDOM(config: EditorConfig): HTMLElement {\n    const dom = document.createElement('div')\n    if (typeof config.theme.layoutItem === 'string') {\n      addClassNamesToElement(dom, config.theme.layoutItem)\n    }\n    return dom\n  }\n\n  updateDOM(): boolean {\n    return false\n  }\n\n  static importDOM(): DOMConversionMap | null {\n    return {}\n  }\n\n  static importJSON(): LayoutItemNode {\n    return $createLayoutItemNode()\n  }\n\n  isShadowRoot(): boolean {\n    return true\n  }\n\n  exportJSON(): SerializedLayoutItemNode {\n    return {\n      ...super.exportJSON(),\n      type: 'layout-item',\n      version: 1,\n    }\n  }\n}\n\nexport function $createLayoutItemNode(): LayoutItemNode {\n  return new LayoutItemNode()\n}\n\nexport function $isLayoutItemNode(\n  node: LexicalNode | null | undefined\n): node is LayoutItemNode {\n  return node instanceof LayoutItemNode\n}\n"]}