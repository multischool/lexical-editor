{"version":3,"file":"markdown-equation-transofrmer.js","sourceRoot":"","sources":["markdown-equation-transofrmer.ts"],"names":[],"mappings":"AAEA,OAAO,EACL,mBAAmB,EACnB,eAAe,EACf,YAAY,GACb,MAAM,wBAAwB,CAAA;AAE/B,MAAM,CAAC,MAAM,QAAQ,GAAyB;IAC5C,YAAY,EAAE,CAAC,YAAY,CAAC;IAC5B,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;QACf,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC;YAC3B,OAAO,IAAI,CAAA;QACb,CAAC;QAED,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,GAAG,CAAA;IAClC,CAAC;IACD,YAAY,EAAE,cAAc;IAC5B,MAAM,EAAE,eAAe;IACvB,OAAO,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;QAC3B,MAAM,CAAC,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAA;QAC1B,MAAM,YAAY,GAAG,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;QACxD,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAA;IAChC,CAAC;IACD,OAAO,EAAE,GAAG;IACZ,IAAI,EAAE,YAAY;CACnB,CAAA","sourcesContent":["import { TextMatchTransformer } from '@lexical/markdown'\n\nimport {\n  $createEquationNode,\n  $isEquationNode,\n  EquationNode,\n} from '../nodes/equation-node'\n\nexport const EQUATION: TextMatchTransformer = {\n  dependencies: [EquationNode],\n  export: (node) => {\n    if (!$isEquationNode(node)) {\n      return null\n    }\n\n    return `$${node.getEquation()}$`\n  },\n  importRegExp: /\\$([^$]+?)\\$/,\n  regExp: /\\$([^$]+?)\\$$/,\n  replace: (textNode, match) => {\n    const [, equation] = match\n    const equationNode = $createEquationNode(equation, true)\n    textNode.replace(equationNode)\n  },\n  trigger: '$',\n  type: 'text-match',\n}\n"]}