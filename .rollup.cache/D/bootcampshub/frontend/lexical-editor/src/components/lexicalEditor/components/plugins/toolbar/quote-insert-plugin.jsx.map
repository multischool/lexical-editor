{"version":3,"file":"quote-insert-plugin.jsx","sourceRoot":"","sources":["quote-insert-plugin.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAKZ,OAAO,EACH,aAAa,EACb,iBAAiB,GAGpB,MAAM,SAAS,CAAA;AAEhB,OAAO,EAAY,SAAS,EAAE,MAAM,cAAc,CAAA;AAElD,OAAO,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAA;AAG3C,OAAO,EAAE,iBAAiB,EAAE,MAAM,+BAA+B,CAAA;AAIjE,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAA;AACnD,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAA;AAErD,MAAM,UAAU,kBAAkB;IAC9B,MAAM,EAAE,YAAY,EAAE,GAAG,iBAAiB,EAAE,CAAA;IAI5C,MAAM,WAAW,GAAG,GAAG,EAAE;QACrB,YAAY,CAAC,MAAM,CAAC,GAAG,EAAE;YACrB,MAAM,SAAS,GAAG,aAAa,EAAE,CAAA;YACjC,IAAI,iBAAiB,CAAC,SAAS,CAAC,EAAE,CAAC;gBAC/B,cAAc,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,gBAAgB,EAAE,CAAC,CAAA;YACvD,CAAC;QAGL,CAAC,CAAC,CAAA;IACN,CAAC,CAAA;IAGG,OAAO,CACH,CAAC,MAAM,CACH,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,OAAO,CAAC,CAAC,SAAS,CAAC,CACnB,UAAU,CAAC,aAAa,CACxB,OAAO,CAAC,CAAC,WAAW,CAAC,CAErB;gBAAA,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,EAClC;YAAA,EAAE,MAAM,CAAC,CACZ,CAAA;AACL,CAAC","sourcesContent":["'use client'\r\n\r\nimport { useCallback, useEffect, useState } from 'react'\r\n\r\nimport { $isLinkNode, TOGGLE_LINK_COMMAND } from '@lexical/link'\r\nimport {\r\n    $getSelection,\r\n    $isRangeSelection,\r\n    BaseSelection,\r\n    COMMAND_PRIORITY_NORMAL,\r\n} from 'lexical'\r\nimport { KEY_MODIFIER_COMMAND } from 'lexical'\r\nimport { LinkIcon, QuoteIcon } from 'lucide-react'\r\n\r\nimport { Toggle } from '../../../ui/toggle'\r\n\r\nimport { useFloatingLinkContext } from '../../context/floating-link-context'\r\nimport { useToolbarContext } from '../../context/toolbar-context'\r\nimport { useUpdateToolbarHandler } from '../../editor-hooks/use-update-toolbar'\r\nimport { getSelectedNode } from '../../utils/get-selected-node'\r\nimport { sanitizeUrl } from '../../utils/url'\r\nimport { $setBlocksType } from '@lexical/selection'\r\nimport { $createQuoteNode } from '@lexical/rich-text'\r\n\r\nexport function QuotePluginToolbar() {\r\n    const { activeEditor } = useToolbarContext()\r\n\r\n\r\n\r\n    const insertQuote = () => {\r\n        activeEditor.update(() => {\r\n            const selection = $getSelection()\r\n            if ($isRangeSelection(selection)) {\r\n                $setBlocksType(selection, () => $createQuoteNode())\r\n            }\r\n            \r\n            \r\n        })\r\n    }\r\n\r\n\r\n        return (\r\n            <Toggle\r\n                size={'sm'}\r\n                variant={'outline'}\r\n                aria-label=\"Toggle link\"\r\n                onClick={insertQuote}\r\n            >\r\n                <QuoteIcon className=\"h-4 w-4\" />\r\n            </Toggle>\r\n        )\r\n    }\r\n\r\n"]}