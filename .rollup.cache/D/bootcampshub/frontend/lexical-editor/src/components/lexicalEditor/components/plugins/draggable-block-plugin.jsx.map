{"version":3,"file":"draggable-block-plugin.jsx","sourceRoot":"","sources":["draggable-block-plugin.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,OAAO,EAAE,MAAM,EAAO,MAAM,OAAO,CAAA;AAEnC,OAAO,EAAE,iCAAiC,IAAI,gCAAgC,EAAE,MAAM,4CAA4C,CAAA;AAClI,OAAO,EAAE,gBAAgB,EAAE,MAAM,cAAc,CAAA;AAE/C,MAAM,8BAA8B,GAAG,sBAAsB,CAAA;AAE7D,SAAS,QAAQ,CAAC,OAAoB;IACpC,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,8BAA8B,EAAE,CAAC,CAAA;AAChE,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,EACnC,UAAU,GAGX;IACC,gDAAgD;IAChD,MAAM,OAAO,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAA;IAC5C,MAAM,aAAa,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAA;IAElD,IAAI,CAAC,UAAU,EAAE,CAAC;QAChB,OAAO,IAAI,CAAA;IACb,CAAC;IAED,OAAO,CACL,CAAC,gCAAgC,CAC/B,UAAU,CAAC,CAAC,UAAU,CAAC;IACvB,4CAA4C;IAC5C,OAAO,CAAC,CAAC,OAAuC,CAAC,CACjD,aAAa,CAAC,CAAC,aAA6C,CAAC,CAC7D,aAAa,CAAC,CACZ,CAAC,GAAG,CACF,GAAG,CAAC,CAAC,OAAO,CAAC,CACb,SAAS,CAAC,4JAA4J,CAEtK;UAAA,CAAC,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,EACjD;QAAA,EAAE,GAAG,CACP,CAAC,CACD,mBAAmB,CAAC,CAClB,CAAC,GAAG,CACF,GAAG,CAAC,CAAC,aAAa,CAAC,CACnB,SAAS,CAAC,uGAAuG,EAErH,CAAC,CACD,QAAQ,CAAC,CAAC,QAAQ,CAAC,EACnB,CACH,CAAA;AACH,CAAC","sourcesContent":["'use client'\n\nimport { useRef, JSX } from 'react'\n\nimport { DraggableBlockPlugin_EXPERIMENTAL as DraggableBlockPluginExperimental } from '@lexical/react/LexicalDraggableBlockPlugin'\nimport { GripVerticalIcon } from 'lucide-react'\n\nconst DRAGGABLE_BLOCK_MENU_CLASSNAME = 'draggable-block-menu'\n\nfunction isOnMenu(element: HTMLElement): boolean {\n  return !!element.closest(`.${DRAGGABLE_BLOCK_MENU_CLASSNAME}`)\n}\n\nexport function DraggableBlockPlugin({\n  anchorElem,\n}: {\n  anchorElem: HTMLElement | null\n}): JSX.Element | null {\n  // Fix 1: Remove the explicit null from the type\n  const menuRef = useRef<HTMLDivElement>(null)\n  const targetLineRef = useRef<HTMLDivElement>(null)\n\n  if (!anchorElem) {\n    return null\n  }\n\n  return (\n    <DraggableBlockPluginExperimental\n      anchorElem={anchorElem}\n      // Fix 2: Cast the refs to the expected type\n      menuRef={menuRef as React.RefObject<HTMLElement>}\n      targetLineRef={targetLineRef as React.RefObject<HTMLElement>}\n      menuComponent={\n        <div\n          ref={menuRef}\n          className=\"draggable-block-menu absolute left-0 top-0 cursor-grab rounded-sm px-[1px] py-0.5 opacity-0 will-change-transform hover:bg-gray-100 active:cursor-grabbing\"\n        >\n          <GripVerticalIcon className=\"size-4 opacity-30\" />\n        </div>\n      }\n      targetLineComponent={\n        <div\n          ref={targetLineRef}\n          className=\"pointer-events-none absolute left-0 top-0 h-1 bg-secondary-foreground opacity-0 will-change-transform\"\n        />\n      }\n      isOnMenu={isOnMenu}\n    />\n  )\n}"]}