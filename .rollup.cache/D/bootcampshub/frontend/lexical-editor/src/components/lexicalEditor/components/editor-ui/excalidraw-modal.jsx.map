{"version":3,"file":"excalidraw-modal.jsx","sourceRoot":"","sources":["excalidraw-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport {\n  ReactElement,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  JSX\n} from 'react'\n\nimport dynamic from 'next/dynamic'\n\n// import {\n//   AppState,\n//   BinaryFiles,\n//   ExcalidrawImperativeAPI,\n//   ExcalidrawInitialDataState,\n// } from '@excalidraw/excalidraw/types/types'\nimport { DialogTrigger } from '@radix-ui/react-dialog'\n\nimport { Button } from '../../ui/button'\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogFooter,\n} from '../../ui/dialog'\n\ntype AppState= any \ntype BinaryFiles= any \ntype ExcalidrawImperativeAPI= any \ntype ExcalidrawInitialDataState= any \n\n\nconst Excalidraw = dynamic(() => import('./excalidraw'), { ssr: false })\n\nexport type ExcalidrawInitialElements = ExcalidrawInitialDataState['elements']\n\ntype Props = {\n  closeOnClickOutside?: boolean\n  /**\n   * The initial set of elements to draw into the scene\n   */\n  initialElements: ExcalidrawInitialElements\n  /**\n   * The initial set of elements to draw into the scene\n   */\n  initialAppState: AppState\n  /**\n   * The initial set of elements to draw into the scene\n   */\n  initialFiles: BinaryFiles\n  /**\n   * Controls the visibility of the modal\n   */\n  isShown?: boolean\n  /**\n   * Callback when closing and discarding the new changes\n   */\n  onClose: () => void\n  /**\n   * Completely remove Excalidraw component\n   */\n  onDelete: () => void\n  /**\n   * Callback when the save button is clicked\n   */\n  onSave: (\n    elements: ExcalidrawInitialElements,\n    appState: Partial<AppState>,\n    files: BinaryFiles\n  ) => void\n}\n\nexport const useCallbackRefState = () => {\n  const [refValue, setRefValue] =\n    React.useState<ExcalidrawImperativeAPI | null>(null)\n  const refCallback = React.useCallback(\n    (value: ExcalidrawImperativeAPI | null) => setRefValue(value),\n    []\n  )\n  return [refValue, refCallback] as const\n}\n\n/**\n * @explorer-desc\n * A component which renders a modal with Excalidraw (a painting app)\n * which can be used to export an editable image\n */\nexport function ExcalidrawModal({\n  closeOnClickOutside = false,\n  onSave,\n  initialElements,\n  initialAppState,\n  initialFiles,\n  isShown = false,\n  onDelete,\n  onClose,\n}: Props): ReactElement | null {\n  const excaliDrawModelRef = useRef<HTMLDivElement | null>(null)\n  const [excalidrawAPI, excalidrawAPIRefCallback] = useCallbackRefState()\n  const [discardModalOpen, setDiscardModalOpen] = useState(false)\n  const [elements, setElements] =\n    useState<ExcalidrawInitialElements>(initialElements)\n  const [files, setFiles] = useState<BinaryFiles>(initialFiles)\n\n  useEffect(() => {\n    if (excaliDrawModelRef.current !== null) {\n      excaliDrawModelRef.current.focus()\n    }\n  }, [])\n\n  useEffect(() => {\n    let modalOverlayElement: HTMLElement | null = null\n\n    const clickOutsideHandler = (event: MouseEvent) => {\n      const target = event.target\n      if (\n        excaliDrawModelRef.current !== null &&\n        !excaliDrawModelRef.current.contains(target as Node) &&\n        closeOnClickOutside\n      ) {\n        onDelete()\n      }\n    }\n\n    if (excaliDrawModelRef.current !== null) {\n      modalOverlayElement = excaliDrawModelRef.current?.parentElement\n      if (modalOverlayElement !== null) {\n        modalOverlayElement?.addEventListener('click', clickOutsideHandler)\n      }\n    }\n\n    return () => {\n      if (modalOverlayElement !== null) {\n        modalOverlayElement?.removeEventListener('click', clickOutsideHandler)\n      }\n    }\n  }, [closeOnClickOutside, onDelete])\n\n  useLayoutEffect(() => {\n    const currentModalRef = excaliDrawModelRef.current\n\n    const onKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onDelete()\n      }\n    }\n\n    if (currentModalRef !== null) {\n      currentModalRef.addEventListener('keydown', onKeyDown)\n    }\n\n    return () => {\n      if (currentModalRef !== null) {\n        currentModalRef.removeEventListener('keydown', onKeyDown)\n      }\n    }\n  }, [elements, files, onDelete])\n\n  const save = () => {\n    if (elements && elements.filter((el:any) => !el.isDeleted).length > 0) {\n      const appState = excalidrawAPI?.getAppState()\n      // We only need a subset of the state\n      const partialState: Partial<AppState> = {\n        exportBackground: appState?.exportBackground,\n        exportScale: appState?.exportScale,\n        exportWithDarkMode: appState?.theme === 'dark',\n        isBindingEnabled: appState?.isBindingEnabled,\n        isLoading: appState?.isLoading,\n        name: appState?.name,\n        theme: appState?.theme,\n        viewBackgroundColor: appState?.viewBackgroundColor,\n        viewModeEnabled: appState?.viewModeEnabled,\n        zenModeEnabled: appState?.zenModeEnabled,\n        zoom: appState?.zoom,\n      }\n      onSave(elements, partialState, files)\n    } else {\n      // delete node if the scene is clear\n      onDelete()\n    }\n  }\n\n  const discard = () => {\n    setDiscardModalOpen(true)\n  }\n\n  function ShowDiscardDialog(): JSX.Element {\n    return (\n      <Dialog open={discardModalOpen} onOpenChange={setDiscardModalOpen}>\n        <DialogContent>\n          Are you sure you want to discard the changes?\n        </DialogContent>\n        <DialogClose asChild>\n          <Button\n            onClick={() => {\n              setDiscardModalOpen(false)\n              onClose()\n            }}\n          >\n            Discard\n          </Button>\n        </DialogClose>\n        <DialogClose asChild>\n          <Button onClick={() => setDiscardModalOpen(false)}>Cancel</Button>\n        </DialogClose>\n      </Dialog>\n    )\n  }\n\n  if (isShown === false) {\n    return null\n  }\n\n  const onChange = (\n    els: ExcalidrawInitialElements,\n    _: AppState,\n    fls: BinaryFiles\n  ) => {\n    setElements(els)\n    setFiles(fls)\n  }\n\n  return (\n    <Dialog open={isShown}>\n      <DialogTrigger />\n      <DialogContent className=\"h-4/6  overflow-hidden p-0 w-[90vw]\">\n        <div className=\"relative\" role=\"dialog\">\n          <div className=\"h-full w-full\" ref={excaliDrawModelRef} tabIndex={-1}>\n            <div className=\"h-full w-full\">\n              {discardModalOpen && <ShowDiscardDialog />}\n              <Excalidraw\n                onChange={onChange}\n                excalidrawAPI={excalidrawAPIRefCallback}\n                initialData={{\n                  appState: initialAppState || { isLoading: false },\n                  elements: initialElements,\n                  files: initialFiles,\n                }}\n              />\n              <div className=\"flex h-full items-center justify-center\">\n                Loading...\n              </div>\n              <div className=\"absolute bottom-0 bottom-5 right-1/2 z-10 flex translate-x-1/2 gap-2\">\n                <Button variant=\"outline\" onClick={onClose}>\n                  Discard\n                </Button>\n                <Button onClick={save}>Save</Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n"]}