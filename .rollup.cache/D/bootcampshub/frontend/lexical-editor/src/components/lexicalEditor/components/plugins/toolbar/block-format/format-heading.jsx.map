{"version":3,"file":"format-heading.jsx","sourceRoot":"","sources":["format-heading.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAkB,MAAM,oBAAoB,CAAA;AACvE,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAA;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAA;AAEvC,OAAO,EAAE,iBAAiB,EAAE,MAAM,kCAAkC,CAAA;AACpE,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAA;AAElD,OAAO,EAAE,oBAAoB,EAAE,MAAM,yDAAyD,CAAA;AAE9F,MAAM,UAAU,aAAa,CAAC,EAAE,MAAM,GAAG,EAAE,EAAgC;IACzE,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,iBAAiB,EAAE,CAAA;IAEvD,MAAM,aAAa,GAAG,CAAC,WAA2B,EAAE,EAAE;QACpD,IAAI,SAAS,KAAK,WAAW,EAAE,CAAC;YAC9B,YAAY,CAAC,MAAM,CAAC,GAAG,EAAE;gBACvB,MAAM,SAAS,GAAG,aAAa,EAAE,CAAA;gBACjC,cAAc,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC,CAAA;YAClE,CAAC,CAAC,CAAA;QACJ,CAAC;IACH,CAAC,CAAA;IAED,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAC3B,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAC9E;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,qCAAqC,CAClD;QAAA,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,IAAI,CACjC;QAAA,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,KAAK,CACpC;MAAA,EAAE,GAAG,CACP;IAAA,EAAE,UAAU,CAAC,CACd,CAAC,CAAA;AACJ,CAAC","sourcesContent":["import { $createHeadingNode, HeadingTagType } from '@lexical/rich-text'\nimport { $setBlocksType } from '@lexical/selection'\nimport { $getSelection } from 'lexical'\n\nimport { useToolbarContext } from '../../../context/toolbar-context'\nimport { SelectItem } from '../../../../ui/select'\n\nimport { blockTypeToBlockName } from '../../../plugins/toolbar/block-format/block-format-data'\n\nexport function FormatHeading({ levels = [] }: { levels: HeadingTagType[] }) {\n  const { activeEditor, blockType } = useToolbarContext()\n\n  const formatHeading = (headingSize: HeadingTagType) => {\n    if (blockType !== headingSize) {\n      activeEditor.update(() => {\n        const selection = $getSelection()\n        $setBlocksType(selection, () => $createHeadingNode(headingSize))\n      })\n    }\n  }\n\n  return levels.map((level) => (\n    <SelectItem key={level} value={level} onPointerDown={() => formatHeading(level)}>\n      <div className=\"flex items-center gap-1 font-normal\">\n        {blockTypeToBlockName[level].icon}\n        {blockTypeToBlockName[level].label}\n      </div>\n    </SelectItem>\n  ))\n}\n"]}