{"version":3,"file":"inline-image-component.jsx","sourceRoot":"","sources":["inline-image-component.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Suspense, useCallback, useEffect, useRef, useState, JSX } from 'react'\n\nimport { AutoFocusPlugin } from '@lexical/react/LexicalAutoFocusPlugin'\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\nimport { LexicalErrorBoundary } from '@lexical/react/LexicalErrorBoundary'\nimport { LexicalNestedComposer } from '@lexical/react/LexicalNestedComposer'\nimport { RichTextPlugin } from '@lexical/react/LexicalRichTextPlugin'\nimport { useLexicalEditable } from '@lexical/react/useLexicalEditable'\nimport { useLexicalNodeSelection } from '@lexical/react/useLexicalNodeSelection'\nimport { mergeRegister } from '@lexical/utils'\nimport type { BaseSelection, LexicalEditor, NodeKey } from 'lexical'\nimport {\n  $getNodeByKey,\n  $getSelection,\n  $isNodeSelection,\n  $setSelection,\n  CLICK_COMMAND,\n  COMMAND_PRIORITY_LOW,\n  DRAGSTART_COMMAND,\n  KEY_BACKSPACE_COMMAND,\n  KEY_DELETE_COMMAND,\n  KEY_ENTER_COMMAND,\n  KEY_ESCAPE_COMMAND,\n  SELECTION_CHANGE_COMMAND,\n} from 'lexical'\n\nimport { Button } from '../../ui/button'\nimport { Checkbox } from '../../ui/checkbox'\nimport { DialogFooter } from '../../ui/dialog'\nimport { Input } from '../../ui/input'\nimport { Label } from '../../ui/label'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '../../ui/select'\n\nimport { useEditorModal } from '../editor-hooks/use-modal'\nimport type { Position } from '../nodes/inline-image-node'\nimport { $isInlineImageNode, InlineImageNode } from '../nodes/inline-image-node'\nimport { LinkPlugin } from '../plugins/link-plugin'\nimport { ContentEditable } from '../editor-ui/content-editable'\n\nconst imageCache = new Set()\n\nfunction useSuspenseImage(src: string) {\n  if (!imageCache.has(src)) {\n    throw new Promise((resolve) => {\n      const img = new Image()\n      img.src = src\n      img.onload = () => {\n        imageCache.add(src)\n        resolve(null)\n      }\n    })\n  }\n}\n\nfunction LazyImage({\n  altText,\n  className,\n  imageRef,\n  src,\n  width,\n  height,\n  position,\n}: {\n  altText: string\n  className: string | null\n  height: 'inherit' | number\n  imageRef: { current: null | HTMLImageElement }\n  src: string\n  width: 'inherit' | number\n  position: Position\n}): JSX.Element {\n  useSuspenseImage(src)\n  return (\n    <img\n      className={className || undefined}\n      src={src}\n      alt={altText}\n      ref={imageRef}\n      data-position={position}\n      style={{\n        display: 'block',\n        height,\n        width,\n      }}\n      draggable=\"false\"\n    />\n  )\n}\n\nexport function UpdateInlineImageDialog({\n  activeEditor,\n  nodeKey,\n  onClose,\n}: {\n  activeEditor: LexicalEditor\n  nodeKey: NodeKey\n  onClose: () => void\n}): JSX.Element {\n  const editorState = activeEditor.getEditorState()\n  const node = editorState.read(() => $getNodeByKey(nodeKey) as InlineImageNode)\n  const [altText, setAltText] = useState(node.getAltText())\n  const [showCaption, setShowCaption] = useState(node.getShowCaption())\n  const [position, setPosition] = useState<Position>(node.getPosition())\n\n  const handleShowCaptionChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setShowCaption(e.target.checked)\n  }\n\n  const handlePositionChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPosition(e.target.value as Position)\n  }\n\n  const handleOnConfirm = () => {\n    const payload = { altText, position, showCaption }\n    if (node) {\n      activeEditor.update(() => {\n        node.update(payload)\n      })\n    }\n    onClose()\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"alt-text\">Alt Text</Label>\n        <Input\n          id=\"alt-text\"\n          placeholder=\"Descriptive alternative text\"\n          onChange={(e) => setAltText(e.target.value)}\n          value={altText}\n          data-test-id=\"image-modal-alt-text-input\"\n        />\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"position-select\">Position</Label>\n        <Select\n          value={position}\n          onValueChange={(value) => setPosition(value as Position)}\n        >\n          <SelectTrigger id=\"position-select\">\n            <SelectValue placeholder=\"Select position\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"left\">Left</SelectItem>\n            <SelectItem value=\"right\">Right</SelectItem>\n            <SelectItem value=\"full\">Full Width</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div className=\"flex items-center space-x-2\">\n        <Checkbox\n          id=\"caption\"\n          checked={showCaption}\n          onCheckedChange={(checked) => setShowCaption(checked as boolean)}\n        />\n        <Label htmlFor=\"caption\">Show Caption</Label>\n      </div>\n\n      <DialogFooter>\n        <Button\n          data-test-id=\"image-modal-file-upload-btn\"\n          onClick={handleOnConfirm}\n        >\n          Confirm\n        </Button>\n      </DialogFooter>\n    </div>\n  )\n}\n\nexport default function InlineImageComponent({\n  src,\n  altText,\n  nodeKey,\n  width,\n  height,\n  showCaption,\n  caption,\n  position,\n}: {\n  altText: string\n  caption: LexicalEditor\n  height: 'inherit' | number\n  nodeKey: NodeKey\n  showCaption: boolean\n  src: string\n  width: 'inherit' | number\n  position: Position\n}): JSX.Element {\n  const [modal, showModal] = useEditorModal()\n  const imageRef = useRef<null | HTMLImageElement>(null)\n  const buttonRef = useRef<HTMLButtonElement | null>(null)\n  const [isSelected, setSelected, clearSelection] =\n    useLexicalNodeSelection(nodeKey)\n  const [editor] = useLexicalComposerContext()\n  const [selection, setSelection] = useState<BaseSelection | null>(null)\n  const activeEditorRef = useRef<LexicalEditor | null>(null)\n  const isEditable = useLexicalEditable()\n\n  const $onDelete = useCallback(\n    (payload: KeyboardEvent) => {\n      const deleteSelection = $getSelection()\n      if (isSelected && $isNodeSelection(deleteSelection)) {\n        const event: KeyboardEvent = payload\n        event.preventDefault()\n        if (isSelected && $isNodeSelection(deleteSelection)) {\n          editor.update(() => {\n            deleteSelection.getNodes().forEach((node) => {\n              if ($isInlineImageNode(node)) {\n                node.remove()\n              }\n            })\n          })\n        }\n      }\n      return false\n    },\n    [editor, isSelected]\n  )\n\n  const $onEnter = useCallback(\n    (event: KeyboardEvent) => {\n      const latestSelection = $getSelection()\n      const buttonElem = buttonRef.current\n      if (\n        isSelected &&\n        $isNodeSelection(latestSelection) &&\n        latestSelection.getNodes().length === 1\n      ) {\n        if (showCaption) {\n          // Move focus into nested editor\n          $setSelection(null)\n          event.preventDefault()\n          caption.focus()\n          return true\n        } else if (\n          buttonElem !== null &&\n          buttonElem !== document.activeElement\n        ) {\n          event.preventDefault()\n          buttonElem.focus()\n          return true\n        }\n      }\n      return false\n    },\n    [caption, isSelected, showCaption]\n  )\n\n  const $onEscape = useCallback(\n    (event: KeyboardEvent) => {\n      if (\n        activeEditorRef.current === caption ||\n        buttonRef.current === event.target\n      ) {\n        $setSelection(null)\n        editor.update(() => {\n          setSelected(true)\n          const parentRootElement = editor.getRootElement()\n          if (parentRootElement !== null) {\n            parentRootElement.focus()\n          }\n        })\n        return true\n      }\n      return false\n    },\n    [caption, editor, setSelected]\n  )\n\n  useEffect(() => {\n    let isMounted = true\n    const unregister = mergeRegister(\n      editor.registerUpdateListener(({ editorState }) => {\n        if (isMounted) {\n          setSelection(editorState.read(() => $getSelection()))\n        }\n      }),\n      editor.registerCommand(\n        SELECTION_CHANGE_COMMAND,\n        (_, activeEditor) => {\n          activeEditorRef.current = activeEditor\n          return false\n        },\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand<MouseEvent>(\n        CLICK_COMMAND,\n        (payload) => {\n          const event = payload\n          if (event.target === imageRef.current) {\n            if (event.shiftKey) {\n              setSelected(!isSelected)\n            } else {\n              clearSelection()\n              setSelected(true)\n            }\n            return true\n          }\n\n          return false\n        },\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(\n        DRAGSTART_COMMAND,\n        (event) => {\n          if (event.target === imageRef.current) {\n            // TODO This is just a temporary workaround for FF to behave like other browsers.\n            // Ideally, this handles drag & drop too (and all browsers).\n            event.preventDefault()\n            return true\n          }\n          return false\n        },\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(\n        KEY_DELETE_COMMAND,\n        $onDelete,\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(\n        KEY_BACKSPACE_COMMAND,\n        $onDelete,\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(KEY_ENTER_COMMAND, $onEnter, COMMAND_PRIORITY_LOW),\n      editor.registerCommand(\n        KEY_ESCAPE_COMMAND,\n        $onEscape,\n        COMMAND_PRIORITY_LOW\n      )\n    )\n    return () => {\n      isMounted = false\n      unregister()\n    }\n  }, [\n    clearSelection,\n    editor,\n    isSelected,\n    nodeKey,\n    $onDelete,\n    $onEnter,\n    $onEscape,\n    setSelected,\n  ])\n\n  const draggable = isSelected && $isNodeSelection(selection)\n  const isFocused = isSelected && isEditable\n  return (\n    <Suspense fallback={null}>\n      <>\n        <span draggable={draggable}>\n          {isEditable && (\n            <Button\n              className=\"image-edit-button absolute right-1 top-1\"\n              variant=\"outline\"\n              ref={buttonRef}\n              onClick={() => {\n                showModal('Update Inline Image', (onClose) => (\n                  <UpdateInlineImageDialog\n                    activeEditor={editor}\n                    nodeKey={nodeKey}\n                    onClose={onClose}\n                  />\n                ))\n              }}\n            >\n              Edit\n            </Button>\n          )}\n          <LazyImage\n            className={`max-w-full cursor-default ${\n              isFocused\n                ? `${\n                    $isNodeSelection(selection)\n                      ? 'draggable cursor-grab active:cursor-grabbing'\n                      : ''\n                  } focused ring-2 ring-primary ring-offset-2`\n                : null\n            }`}\n            src={src}\n            altText={altText}\n            imageRef={imageRef}\n            width={width}\n            height={height}\n            position={position}\n          />\n        </span>\n        {showCaption && (\n          <div className=\"image-caption-container absolute bottom-1 left-0 right-0 m-0 block min-w-[100px] overflow-hidden border-t bg-white/90 p-0\">\n            <LexicalNestedComposer initialEditor={caption}>\n              <AutoFocusPlugin />\n              <LinkPlugin />\n              <RichTextPlugin\n                contentEditable={\n                  <ContentEditable\n                    placeholder=\"Enter a caption...\"\n                    className=\"ImageNode__contentEditable user-select-text word-break-break-word relative block min-h-5 w-[calc(100%-20px)] cursor-text resize-none whitespace-pre-wrap border-0 p-2.5 text-sm caret-primary outline-none\"\n                    placeholderClassName=\"ImageNode__placeholder text-sm text-muted-foreground overflow-hidden absolute top-2.5 left-2.5 pointer-events-none text-ellipsis user-select-none whitespace-nowrap inline-block\"\n                  />\n                }\n                ErrorBoundary={LexicalErrorBoundary}\n              />\n            </LexicalNestedComposer>\n          </div>\n        )}\n      </>\n      {modal}\n    </Suspense>\n  )\n}\n"]}