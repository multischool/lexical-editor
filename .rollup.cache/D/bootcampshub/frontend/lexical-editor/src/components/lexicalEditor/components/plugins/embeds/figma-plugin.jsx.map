{"version":3,"file":"figma-plugin.jsx","sourceRoot":"","sources":["figma-plugin.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ;;;;;;GAMG;AACH,OAAO,EAAE,SAAS,EAAO,MAAM,OAAO,CAAA;AAEtC,OAAO,EAAE,yBAAyB,EAAE,MAAM,uCAAuC,CAAA;AACjF,OAAO,EAAE,wBAAwB,EAAE,MAAM,gBAAgB,CAAA;AACzD,OAAO,EAAE,uBAAuB,EAAkB,aAAa,EAAE,MAAM,SAAS,CAAA;AAEhF,OAAO,EAAE,gBAAgB,EAAE,SAAS,EAAE,MAAM,+BAA+B,CAAA;AAE3E,MAAM,CAAC,MAAM,oBAAoB,GAA2B,aAAa,CACvE,sBAAsB,CACvB,CAAA;AAED,MAAM,UAAU,WAAW;IACzB,MAAM,CAAC,MAAM,CAAC,GAAG,yBAAyB,EAAE,CAAA;IAE5C,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC;YAClC,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAA;QACpE,CAAC;QAED,OAAO,MAAM,CAAC,eAAe,CAC3B,oBAAoB,EACpB,CAAC,OAAO,EAAE,EAAE;YACV,MAAM,SAAS,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAA;YAC3C,wBAAwB,CAAC,SAAS,CAAC,CAAA;YACnC,OAAO,IAAI,CAAA;QACb,CAAC,EACD,uBAAuB,CACxB,CAAA;IACH,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;IAEZ,OAAO,IAAI,CAAA;AACb,CAAC","sourcesContent":["'use client'\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { useEffect, JSX } from 'react'\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\nimport { $insertNodeToNearestRoot } from '@lexical/utils'\nimport { COMMAND_PRIORITY_EDITOR, LexicalCommand, createCommand } from 'lexical'\n\nimport { $createFigmaNode, FigmaNode } from '../../nodes/embeds/figma-node'\n\nexport const INSERT_FIGMA_COMMAND: LexicalCommand<string> = createCommand(\n  'INSERT_FIGMA_COMMAND'\n)\n\nexport function FigmaPlugin(): JSX.Element | null {\n  const [editor] = useLexicalComposerContext()\n\n  useEffect(() => {\n    if (!editor.hasNodes([FigmaNode])) {\n      throw new Error('FigmaPlugin: FigmaNode not registered on editor')\n    }\n\n    return editor.registerCommand<string>(\n      INSERT_FIGMA_COMMAND,\n      (payload) => {\n        const figmaNode = $createFigmaNode(payload)\n        $insertNodeToNearestRoot(figmaNode)\n        return true\n      },\n      COMMAND_PRIORITY_EDITOR\n    )\n  }, [editor])\n\n  return null\n}\n"]}