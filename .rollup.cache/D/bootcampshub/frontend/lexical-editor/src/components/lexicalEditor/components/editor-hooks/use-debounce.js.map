{"version":3,"file":"use-debounce.js","sourceRoot":"","sources":["use-debounce.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,OAAO,CAAA;AAEvC,OAAO,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAA;AAEpC,MAAM,UAAU,WAAW,CACzB,EAAK,EACL,EAAU,EACV,OAAgB;IAEhB,MAAM,OAAO,GAAG,MAAM,CAAW,IAAI,CAAC,CAAA;IACtC,OAAO,CAAC,OAAO,GAAG,EAAE,CAAA;IAEpB,OAAO,OAAO,CACZ,GAAG,EAAE,CACH,QAAQ,CACN,CAAC,GAAG,IAAmB,EAAE,EAAE;QACzB,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpB,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAA;QAC1B,CAAC;IACH,CAAC,EACD,EAAE,EACF,EAAE,OAAO,EAAE,CACZ,EACH,CAAC,EAAE,EAAE,OAAO,CAAC,CACd,CAAA;AACH,CAAC","sourcesContent":["import { useMemo, useRef } from 'react'\n\nimport { debounce } from 'lodash-es'\n\nexport function useDebounce<T extends (...args: never[]) => void>(\n  fn: T,\n  ms: number,\n  maxWait?: number\n) {\n  const funcRef = useRef<T | null>(null)\n  funcRef.current = fn\n\n  return useMemo(\n    () =>\n      debounce(\n        (...args: Parameters<T>) => {\n          if (funcRef.current) {\n            funcRef.current(...args)\n          }\n        },\n        ms,\n        { maxWait }\n      ),\n    [ms, maxWait]\n  )\n}\n"]}