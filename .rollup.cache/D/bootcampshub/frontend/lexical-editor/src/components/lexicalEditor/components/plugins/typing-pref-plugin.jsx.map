{"version":3,"file":"typing-pref-plugin.jsx","sourceRoot":"","sources":["typing-pref-plugin.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client'\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { useEffect, JSX } from 'react'\n\nimport { useReport } from '../editor-hooks/use-report'\n\nconst validInputTypes = new Set([\n  'insertText',\n  'insertCompositionText',\n  'insertFromComposition',\n  'insertLineBreak',\n  'insertParagraph',\n  'deleteCompositionText',\n  'deleteContentBackward',\n  'deleteByComposition',\n  'deleteContent',\n  'deleteContentForward',\n  'deleteWordBackward',\n  'deleteWordForward',\n  'deleteHardLineBackward',\n  'deleteSoftLineBackward',\n  'deleteHardLineForward',\n  'deleteSoftLineForward',\n])\n\nexport function TypingPerfPlugin(): JSX.Element | null {\n  const report = useReport()\n  useEffect(() => {\n    let start = 0\n    let timerId: ReturnType<typeof setTimeout> | null\n    let keyPressTimerId: ReturnType<typeof setTimeout> | null\n    let log: Array<DOMHighResTimeStamp> = []\n    let invalidatingEvent = false\n\n    const measureEventEnd = function logKeyPress() {\n      if (keyPressTimerId != null) {\n        if (invalidatingEvent) {\n          invalidatingEvent = false\n        } else {\n          log.push(performance.now() - start)\n        }\n\n        clearTimeout(keyPressTimerId)\n        keyPressTimerId = null\n      }\n    }\n\n    const measureEventStart = function measureEvent() {\n      if (timerId != null) {\n        clearTimeout(timerId)\n        timerId = null\n      }\n\n      // We use a setTimeout(0) instead of requestAnimationFrame, due to\n      // inconsistencies between the sequencing of rAF in different browsers.\n      keyPressTimerId = setTimeout(measureEventEnd, 0)\n      // Schedule a timer to report the results.\n      timerId = setTimeout(() => {\n        const total = log.reduce((a, b) => a + b, 0)\n        const reportedText =\n          'Typing Perf: ' + Math.round((total / log.length) * 100) / 100 + 'ms'\n        report(reportedText)\n        log = []\n      }, 2000)\n      // Make the time after we do the previous logic, so we don't measure the overhead\n      // for it all.\n      start = performance.now()\n    }\n\n    const beforeInputHandler = function beforeInputHandler(event: InputEvent) {\n      if (!validInputTypes.has(event.inputType) || invalidatingEvent) {\n        invalidatingEvent = false\n        return\n      }\n\n      measureEventStart()\n    }\n\n    const keyDownHandler = function keyDownHandler(event: KeyboardEvent) {\n      const key = event.key\n\n      if (key === 'Backspace' || key === 'Enter') {\n        measureEventStart()\n      }\n    }\n\n    const pasteHandler = function pasteHandler() {\n      invalidatingEvent = true\n    }\n\n    const cutHandler = function cutHandler() {\n      invalidatingEvent = true\n    }\n\n    window.addEventListener('keydown', keyDownHandler, true)\n    window.addEventListener('selectionchange', measureEventEnd, true)\n    window.addEventListener('beforeinput', beforeInputHandler, true)\n    window.addEventListener('paste', pasteHandler, true)\n    window.addEventListener('cut', cutHandler, true)\n\n    return () => {\n      window.removeEventListener('keydown', keyDownHandler, true)\n      window.removeEventListener('selectionchange', measureEventEnd, true)\n      window.removeEventListener('beforeinput', beforeInputHandler, true)\n      window.removeEventListener('paste', pasteHandler, true)\n      window.removeEventListener('cut', cutHandler, true)\n    }\n  }, [report])\n\n  return null\n}\n"]}