{"version":3,"file":"table-cell-resizer-plugin.jsx","sourceRoot":"","sources":["table-cell-resizer-plugin.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client'\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport * as React from 'react'\nimport {\n  MouseEventHandler,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  JSX,\n} from 'react'\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\nimport { useLexicalEditable } from '@lexical/react/useLexicalEditable'\nimport type { TableCellNode, TableDOMCell, TableMapType } from '@lexical/table'\nimport {\n  $computeTableMapSkipCellCheck,\n  $getTableNodeFromLexicalNodeOrThrow,\n  $getTableRowIndexFromTableCellNode,\n  $isTableCellNode,\n  $isTableRowNode,\n  TableNode,\n  getDOMCellFromTarget,\n} from '@lexical/table'\nimport { calculateZoomLevel } from '@lexical/utils'\nimport type { LexicalEditor } from 'lexical'\nimport { $getNearestNodeFromDOMNode } from 'lexical'\nimport { createPortal } from 'react-dom'\n\ntype MousePosition = {\n  x: number\n  y: number\n}\n\ntype MouseDraggingDirection = 'right' | 'bottom'\n\nconst MIN_ROW_HEIGHT = 33\nconst MIN_COLUMN_WIDTH = 92\n\nfunction TableCellResizer({ editor }: { editor: LexicalEditor }): JSX.Element {\n  const targetRef = useRef<HTMLElement | null>(null)\n  const resizerRef = useRef<HTMLDivElement | null>(null)\n  const tableRectRef = useRef<ClientRect | null>(null)\n\n  const mouseStartPosRef = useRef<MousePosition | null>(null)\n  const [mouseCurrentPos, updateMouseCurrentPos] =\n    useState<MousePosition | null>(null)\n\n  const [activeCell, updateActiveCell] = useState<TableDOMCell | null>(null)\n  const [isMouseDown, updateIsMouseDown] = useState<boolean>(false)\n  const [draggingDirection, updateDraggingDirection] =\n    useState<MouseDraggingDirection | null>(null)\n\n  const resetState = useCallback(() => {\n    updateActiveCell(null)\n    targetRef.current = null\n    updateDraggingDirection(null)\n    mouseStartPosRef.current = null\n    tableRectRef.current = null\n  }, [])\n\n  const isMouseDownOnEvent = (event: MouseEvent) => {\n    return (event.buttons & 1) === 1\n  }\n\n  useEffect(() => {\n    return editor.registerNodeTransform(TableNode, (tableNode) => {\n      if (tableNode.getColWidths()) {\n        return tableNode\n      }\n\n      const numColumns = tableNode.getColumnCount()\n      const columnWidth = MIN_COLUMN_WIDTH\n\n      tableNode.setColWidths(Array(numColumns).fill(columnWidth))\n      return tableNode\n    })\n  }, [editor])\n\n  useEffect(() => {\n    const onMouseMove = (event: MouseEvent) => {\n      setTimeout(() => {\n        const target = event.target\n\n        if (draggingDirection) {\n          updateMouseCurrentPos({\n            x: event.clientX,\n            y: event.clientY,\n          })\n          return\n        }\n        updateIsMouseDown(isMouseDownOnEvent(event))\n        if (resizerRef.current && resizerRef.current.contains(target as Node)) {\n          return\n        }\n\n        if (targetRef.current !== target) {\n          targetRef.current = target as HTMLElement\n          const cell = getDOMCellFromTarget(target as HTMLElement)\n\n          if (cell && activeCell !== cell) {\n            editor.update(() => {\n              const tableCellNode = $getNearestNodeFromDOMNode(cell.elem)\n              if (!tableCellNode) {\n                throw new Error('TableCellResizer: Table cell node not found.')\n              }\n\n              const tableNode =\n                $getTableNodeFromLexicalNodeOrThrow(tableCellNode)\n              const tableElement = editor.getElementByKey(tableNode.getKey())\n\n              if (!tableElement) {\n                throw new Error('TableCellResizer: Table element not found.')\n              }\n\n              targetRef.current = target as HTMLElement\n              tableRectRef.current = tableElement.getBoundingClientRect()\n              updateActiveCell(cell)\n            })\n          } else if (cell == null) {\n            resetState()\n          }\n        }\n      }, 0)\n    }\n\n    const onMouseDown = (event: MouseEvent) => {\n      setTimeout(() => {\n        updateIsMouseDown(true)\n      }, 0)\n    }\n\n    const onMouseUp = (event: MouseEvent) => {\n      setTimeout(() => {\n        updateIsMouseDown(false)\n      }, 0)\n    }\n\n    const removeRootListener = editor.registerRootListener(\n      (rootElement, prevRootElement) => {\n        prevRootElement?.removeEventListener('mousemove', onMouseMove)\n        prevRootElement?.removeEventListener('mousedown', onMouseDown)\n        prevRootElement?.removeEventListener('mouseup', onMouseUp)\n        rootElement?.addEventListener('mousemove', onMouseMove)\n        rootElement?.addEventListener('mousedown', onMouseDown)\n        rootElement?.addEventListener('mouseup', onMouseUp)\n      }\n    )\n\n    return () => {\n      removeRootListener()\n    }\n  }, [activeCell, draggingDirection, editor, resetState])\n\n  const isHeightChanging = (direction: MouseDraggingDirection) => {\n    if (direction === 'bottom') {\n      return true\n    }\n    return false\n  }\n\n  const updateRowHeight = useCallback(\n    (heightChange: number) => {\n      if (!activeCell) {\n        throw new Error('TableCellResizer: Expected active cell.')\n      }\n\n      editor.update(\n        () => {\n          const tableCellNode = $getNearestNodeFromDOMNode(activeCell.elem)\n          if (!$isTableCellNode(tableCellNode)) {\n            throw new Error('TableCellResizer: Table cell node not found.')\n          }\n\n          const tableNode = $getTableNodeFromLexicalNodeOrThrow(tableCellNode)\n\n          const tableRowIndex =\n            $getTableRowIndexFromTableCellNode(tableCellNode) +\n            tableCellNode.getRowSpan() -\n            1\n\n          const tableRows = tableNode.getChildren()\n\n          if (tableRowIndex >= tableRows.length || tableRowIndex < 0) {\n            throw new Error('Expected table cell to be inside of table row.')\n          }\n\n          const tableRow = tableRows[tableRowIndex]\n\n          if (!$isTableRowNode(tableRow)) {\n            throw new Error('Expected table row')\n          }\n\n          let height = tableRow.getHeight()\n          if (height === undefined) {\n            const rowCells = tableRow.getChildren<TableCellNode>()\n            height = Math.min(\n              ...rowCells.map(\n                (cell) => getCellNodeHeight(cell, editor) ?? Infinity\n              )\n            )\n          }\n\n          const newHeight = Math.max(height + heightChange, MIN_ROW_HEIGHT)\n          tableRow.setHeight(newHeight)\n        },\n        { tag: 'skip-scroll-into-view' }\n      )\n    },\n    [activeCell, editor]\n  )\n\n  const getCellNodeHeight = (\n    cell: TableCellNode,\n    activeEditor: LexicalEditor\n  ): number | undefined => {\n    const domCellNode = activeEditor.getElementByKey(cell.getKey())\n    return domCellNode?.clientHeight\n  }\n\n  const getCellColumnIndex = (\n    tableCellNode: TableCellNode,\n    tableMap: TableMapType\n  ) => {\n    for (let row = 0; row < tableMap.length; row++) {\n      for (let column = 0; column < tableMap[row].length; column++) {\n        if (tableMap[row][column].cell === tableCellNode) {\n          return column\n        }\n      }\n    }\n  }\n\n  const updateColumnWidth = useCallback(\n    (widthChange: number) => {\n      if (!activeCell) {\n        throw new Error('TableCellResizer: Expected active cell.')\n      }\n      editor.update(\n        () => {\n          const tableCellNode = $getNearestNodeFromDOMNode(activeCell.elem)\n          if (!$isTableCellNode(tableCellNode)) {\n            throw new Error('TableCellResizer: Table cell node not found.')\n          }\n\n          const tableNode = $getTableNodeFromLexicalNodeOrThrow(tableCellNode)\n          const [tableMap] = $computeTableMapSkipCellCheck(\n            tableNode,\n            null,\n            null\n          )\n          const columnIndex = getCellColumnIndex(tableCellNode, tableMap)\n          if (columnIndex === undefined) {\n            throw new Error('TableCellResizer: Table column not found.')\n          }\n\n          const colWidths = tableNode.getColWidths()\n          if (!colWidths) {\n            return\n          }\n          const width = colWidths[columnIndex]\n          if (width === undefined) {\n            return\n          }\n          const newColWidths = [...colWidths]\n          const newWidth = Math.max(width + widthChange, MIN_COLUMN_WIDTH)\n          newColWidths[columnIndex] = newWidth\n          tableNode.setColWidths(newColWidths)\n        },\n        { tag: 'skip-scroll-into-view' }\n      )\n    },\n    [activeCell, editor]\n  )\n\n  const mouseUpHandler = useCallback(\n    (direction: MouseDraggingDirection) => {\n      const handler = (event: MouseEvent) => {\n        event.preventDefault()\n        event.stopPropagation()\n\n        if (!activeCell) {\n          throw new Error('TableCellResizer: Expected active cell.')\n        }\n\n        if (mouseStartPosRef.current) {\n          const { x, y } = mouseStartPosRef.current\n\n          if (activeCell === null) {\n            return\n          }\n          const zoom = calculateZoomLevel(event.target as Element)\n\n          if (isHeightChanging(direction)) {\n            const heightChange = (event.clientY - y) / zoom\n            updateRowHeight(heightChange)\n          } else {\n            const widthChange = (event.clientX - x) / zoom\n            updateColumnWidth(widthChange)\n          }\n\n          resetState()\n          document.removeEventListener('mouseup', handler)\n        }\n      }\n      return handler\n    },\n    [activeCell, resetState, updateColumnWidth, updateRowHeight]\n  )\n\n  const toggleResize = useCallback(\n    (direction: MouseDraggingDirection): MouseEventHandler<HTMLDivElement> =>\n      (event) => {\n        event.preventDefault()\n        event.stopPropagation()\n\n        if (!activeCell) {\n          throw new Error('TableCellResizer: Expected active cell.')\n        }\n\n        mouseStartPosRef.current = {\n          x: event.clientX,\n          y: event.clientY,\n        }\n        updateMouseCurrentPos(mouseStartPosRef.current)\n        updateDraggingDirection(direction)\n\n        document.addEventListener('mouseup', mouseUpHandler(direction))\n      },\n    [activeCell, mouseUpHandler]\n  )\n\n  const getResizers = useCallback(() => {\n    if (activeCell) {\n      const { height, width, top, left } =\n        activeCell.elem.getBoundingClientRect()\n      const zoom = calculateZoomLevel(activeCell.elem)\n      const zoneWidth = 10 // Pixel width of the zone where you can drag the edge\n      const styles = {\n        bottom: {\n          backgroundColor: 'none',\n          cursor: 'row-resize',\n          height: `${zoneWidth}px`,\n          left: `${window.pageXOffset + left}px`,\n          top: `${window.pageYOffset + top + height - zoneWidth / 2}px`,\n          width: `${width}px`,\n        },\n        right: {\n          backgroundColor: 'none',\n          cursor: 'col-resize',\n          height: `${height}px`,\n          left: `${window.pageXOffset + left + width - zoneWidth / 2}px`,\n          top: `${window.pageYOffset + top}px`,\n          width: `${zoneWidth}px`,\n        },\n      }\n\n      const tableRect = tableRectRef.current\n\n      if (draggingDirection && mouseCurrentPos && tableRect) {\n        if (isHeightChanging(draggingDirection)) {\n          styles[draggingDirection].left = `${\n            window.pageXOffset + tableRect.left\n          }px`\n          styles[draggingDirection].top = `${\n            window.pageYOffset + mouseCurrentPos.y / zoom\n          }px`\n          styles[draggingDirection].height = '3px'\n          styles[draggingDirection].width = `${tableRect.width}px`\n        } else {\n          styles[draggingDirection].top = `${\n            window.pageYOffset + tableRect.top\n          }px`\n          styles[draggingDirection].left = `${\n            window.pageXOffset + mouseCurrentPos.x / zoom\n          }px`\n          styles[draggingDirection].width = '3px'\n          styles[draggingDirection].height = `${tableRect.height}px`\n        }\n\n        styles[draggingDirection].backgroundColor = '#adf'\n      }\n\n      return styles\n    }\n\n    return {\n      bottom: null,\n      left: null,\n      right: null,\n      top: null,\n    }\n  }, [activeCell, draggingDirection, mouseCurrentPos])\n\n  const resizerStyles = getResizers()\n\n  return (\n    <div ref={resizerRef}>\n      {activeCell != null && !isMouseDown && (\n        <>\n          <div\n            className=\"TableCellResizer__ui absolute\"\n            style={resizerStyles.right || undefined}\n            onMouseDown={toggleResize('right')}\n          />\n          <div\n            className=\"TableCellResizer__ui absolute\"\n            style={resizerStyles.bottom || undefined}\n            onMouseDown={toggleResize('bottom')}\n          />\n        </>\n      )}\n    </div>\n  )\n}\n\nexport function TableCellResizerPlugin(): null | React.ReactElement {\n  const [editor] = useLexicalComposerContext()\n  const isEditable = useLexicalEditable()\n  const [bodyRef, setBodyRef] = useState<HTMLElement | null>(null)\n\n  useEffect(() => {\n    setBodyRef(document.body)\n  }, [])\n\n  return useMemo(\n    () =>\n      isEditable && bodyRef\n        ? createPortal(<TableCellResizer editor={editor} />, bodyRef)\n        : null,\n    [editor, isEditable, bodyRef]\n  )\n}\n"]}