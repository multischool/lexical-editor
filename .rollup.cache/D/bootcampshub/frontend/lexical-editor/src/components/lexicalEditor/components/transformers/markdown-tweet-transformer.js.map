{"version":3,"file":"markdown-tweet-transformer.js","sourceRoot":"","sources":["markdown-tweet-transformer.ts"],"names":[],"mappings":"AAEA,OAAO,EACL,gBAAgB,EAChB,YAAY,EACZ,SAAS,GACV,MAAM,4BAA4B,CAAA;AAEnC,MAAM,CAAC,MAAM,KAAK,GAAuB;IACvC,YAAY,EAAE,CAAC,SAAS,CAAC;IACzB,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;QACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC;YACxB,OAAO,IAAI,CAAA;QACb,CAAC;QAED,OAAO,cAAc,IAAI,CAAC,KAAK,EAAE,MAAM,CAAA;IACzC,CAAC;IACD,MAAM,EAAE,gCAAgC;IACxC,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE;QAC/B,MAAM,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAA;QACpB,MAAM,SAAS,GAAG,gBAAgB,CAAC,EAAE,CAAC,CAAA;QACtC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;IAC7B,CAAC;IACD,IAAI,EAAE,SAAS;CAChB,CAAA","sourcesContent":["import { ElementTransformer } from '@lexical/markdown'\n\nimport {\n  $createTweetNode,\n  $isTweetNode,\n  TweetNode,\n} from '../nodes/embeds/tweet-node'\n\nexport const TWEET: ElementTransformer = {\n  dependencies: [TweetNode],\n  export: (node) => {\n    if (!$isTweetNode(node)) {\n      return null\n    }\n\n    return `<tweet id=\"${node.getId()}\" />`\n  },\n  regExp: /<tweet id=\"([^\"]+?)\"\\s?\\/>\\s?$/,\n  replace: (textNode, _1, match) => {\n    const [, id] = match\n    const tweetNode = $createTweetNode(id)\n    textNode.replace(tweetNode)\n  },\n  type: 'element',\n}\n"]}