{"version":3,"file":"equations-plugin.jsx","sourceRoot":"","sources":["equations-plugin.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ;;;;;;GAMG;AACH,OAAO,EAAE,WAAW,EAAE,SAAS,EAAO,MAAM,OAAO,CAAA;AACnD,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAE9B,OAAO,EAAE,yBAAyB,EAAE,MAAM,uCAAuC,CAAA;AACjF,OAAO,EAAE,kBAAkB,EAAE,MAAM,gBAAgB,CAAA;AACnD,OAAO,sBAAsB,CAAA;AAC7B,OAAO,EACL,oBAAoB,EACpB,YAAY,EACZ,mBAAmB,EACnB,uBAAuB,EAGvB,aAAa,GACd,MAAM,SAAS,CAAA;AAEhB,OAAO,EAAE,mBAAmB,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAA;AAC1E,OAAO,oBAAoB,MAAM,qCAAqC,CAAA;AAOtE,MAAM,CAAC,MAAM,uBAAuB,GAClC,aAAa,CAAC,yBAAyB,CAAC,CAAA;AAE1C,MAAM,UAAU,oBAAoB,CAAC,EACnC,YAAY,EACZ,OAAO,GAIR;IACC,MAAM,iBAAiB,GAAG,WAAW,CACnC,CAAC,QAAgB,EAAE,MAAe,EAAE,EAAE;QACpC,YAAY,CAAC,eAAe,CAAC,uBAAuB,EAAE;YACpD,QAAQ;YACR,MAAM;SACP,CAAC,CAAA;QACF,OAAO,EAAE,CAAA;IACX,CAAC,EACD,CAAC,YAAY,EAAE,OAAO,CAAC,CACxB,CAAA;IAED,OAAO,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,iBAAiB,CAAC,EAAG,CAAA;AAC/D,CAAC;AAED,MAAM,UAAU,eAAe;IAC7B,MAAM,CAAC,MAAM,CAAC,GAAG,yBAAyB,EAAE,CAAA;IAE5C,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC;YACrC,MAAM,IAAI,KAAK,CACb,0DAA0D,CAC3D,CAAA;QACH,CAAC;QAED,OAAO,MAAM,CAAC,eAAe,CAC3B,uBAAuB,EACvB,CAAC,OAAO,EAAE,EAAE;YACV,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,OAAO,CAAA;YACpC,MAAM,YAAY,GAAG,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;YAE1D,YAAY,CAAC,CAAC,YAAY,CAAC,CAAC,CAAA;YAC5B,IAAI,mBAAmB,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC,EAAE,CAAC;gBACzD,kBAAkB,CAAC,YAAY,EAAE,oBAAoB,CAAC,CAAC,SAAS,EAAE,CAAA;YACpE,CAAC;YAED,OAAO,IAAI,CAAA;QACb,CAAC,EACD,uBAAuB,CACxB,CAAA;IACH,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;IAEZ,OAAO,IAAI,CAAA;AACb,CAAC","sourcesContent":["'use client'\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { useCallback, useEffect, JSX } from 'react'\nimport * as React from 'react'\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\nimport { $wrapNodeInElement } from '@lexical/utils'\nimport 'katex/dist/katex.css'\nimport {\n  $createParagraphNode,\n  $insertNodes,\n  $isRootOrShadowRoot,\n  COMMAND_PRIORITY_EDITOR,\n  LexicalCommand,\n  LexicalEditor,\n  createCommand,\n} from 'lexical'\n\nimport { $createEquationNode, EquationNode } from '../nodes/equation-node'\nimport KatexEquationAlterer from '../editor-ui/katex-equation-alterer'\n\ntype CommandPayload = {\n  equation: string\n  inline: boolean\n}\n\nexport const INSERT_EQUATION_COMMAND: LexicalCommand<CommandPayload> =\n  createCommand('INSERT_EQUATION_COMMAND')\n\nexport function InsertEquationDialog({\n  activeEditor,\n  onClose,\n}: {\n  activeEditor: LexicalEditor\n  onClose: () => void\n}): JSX.Element {\n  const onEquationConfirm = useCallback(\n    (equation: string, inline: boolean) => {\n      activeEditor.dispatchCommand(INSERT_EQUATION_COMMAND, {\n        equation,\n        inline,\n      })\n      onClose()\n    },\n    [activeEditor, onClose]\n  )\n\n  return <KatexEquationAlterer onConfirm={onEquationConfirm} />\n}\n\nexport function EquationsPlugin(): JSX.Element | null {\n  const [editor] = useLexicalComposerContext()\n\n  useEffect(() => {\n    if (!editor.hasNodes([EquationNode])) {\n      throw new Error(\n        'EquationsPlugins: EquationsNode not registered on editor'\n      )\n    }\n\n    return editor.registerCommand<CommandPayload>(\n      INSERT_EQUATION_COMMAND,\n      (payload) => {\n        const { equation, inline } = payload\n        const equationNode = $createEquationNode(equation, inline)\n\n        $insertNodes([equationNode])\n        if ($isRootOrShadowRoot(equationNode.getParentOrThrow())) {\n          $wrapNodeInElement(equationNode, $createParagraphNode).selectEnd()\n        }\n\n        return true\n      },\n      COMMAND_PRIORITY_EDITOR\n    )\n  }, [editor])\n\n  return null\n}\n"]}