{"version":3,"file":"table-picker-plugin.jsx","sourceRoot":"","sources":["table-picker-plugin.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,EAAE,oBAAoB,EAAE,MAAM,gBAAgB,CAAC;AAEtD,OAAO,EAAE,iBAAiB,EAAE,MAAM,4BAA4B,CAAC;AAC/D,OAAO,EAAE,qBAAqB,EAAE,MAAM,8CAA8C,CAAC;AAErF,MAAM,UAAU,iBAAiB;IAC/B,OAAO,IAAI,qBAAqB,CAAC,OAAO,EAAE;QACxC,IAAI,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAG;QACtC,QAAQ,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,EAAE,SAAS,CAAC;QAC7D,QAAQ,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,CACjC,SAAS,CAAC,cAAc,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CACrC,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAG,CAC9D,CAAC;KACL,CAAC,CAAA;AACJ,CAAC;AAGD,MAAM,UAAU,wBAAwB,CAAC,EAAC,WAAW,EAAwB;IAC3E,MAAM,OAAO,GAAiC,EAAE,CAAA;IAEhD,IAAI,WAAW,IAAI,IAAI,EAAE,CAAC;QACxB,OAAO,OAAO,CAAA;IAChB,CAAC;IAED,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAA;IAErE,IAAI,UAAU,KAAK,IAAI,EAAE,CAAC;QACxB,MAAM,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAA;QAC1B,MAAM,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;QAE/C,OAAO,CAAC,IAAI,CACV,GAAG,UAAU,CAAC,GAAG,CACf,CAAC,OAAO,EAAE,EAAE,CACV,IAAI,qBAAqB,CAAC,GAAG,IAAI,IAAI,OAAO,QAAQ,EAAE;YACpD,IAAI,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,YAAY,EAAG;YAClC,QAAQ,EAAE,CAAC,OAAO,CAAC;YACnB,QAAQ,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,CACtB,MAAM,CAAC,eAAe,CAAC,oBAAoB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;SAClE,CAAC,CACL,CACF,CAAA;IACH,CAAC;IAED,OAAO,OAAO,CAAA;AAChB,CAAC","sourcesContent":["import { TableIcon } from \"lucide-react\";\nimport { INSERT_TABLE_COMMAND } from \"@lexical/table\";\n\nimport { InsertTableDialog } from \"../../plugins/table-plugin\";\nimport { ComponentPickerOption } from \"../../plugins/picker/component-picker-option\";\n\nexport function TablePickerPlugin() {\n  return new ComponentPickerOption('Table', {\n    icon: <TableIcon className=\"size-4\" />,\n    keywords: ['table', 'grid', 'spreadsheet', 'rows', 'columns'],\n    onSelect: (_, editor, showModal) =>\n      showModal('Insert Table', (onClose) => (\n        <InsertTableDialog activeEditor={editor} onClose={onClose} />\n      )),\n  })\n}\n\n\nexport function DynamicTablePickerPlugin({queryString}: {queryString: string}) {\n  const options: Array<ComponentPickerOption> = []\n\n  if (queryString == null) {\n    return options\n  }\n\n  const tableMatch = queryString.match(/^([1-9]\\d?)(?:x([1-9]\\d?)?)?$/)\n\n  if (tableMatch !== null) {\n    const rows = tableMatch[1]\n    const colOptions = tableMatch[2]\n      ? [tableMatch[2]]\n      : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(String)\n\n    options.push(\n      ...colOptions.map(\n        (columns) =>\n          new ComponentPickerOption(`${rows}x${columns} Table`, {\n            icon: <i className=\"icon table\" />,\n            keywords: ['table'],\n            onSelect: (_, editor) =>\n              editor.dispatchCommand(INSERT_TABLE_COMMAND, { columns, rows }),\n          })\n      )\n    )\n  }\n\n  return options\n}"]}