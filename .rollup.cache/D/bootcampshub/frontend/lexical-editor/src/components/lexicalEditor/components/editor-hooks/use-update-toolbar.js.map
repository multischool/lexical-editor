{"version":3,"file":"use-update-toolbar.js","sourceRoot":"","sources":["use-update-toolbar.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAA;AAEjC,OAAO,EAAE,yBAAyB,EAAE,MAAM,uCAAuC,CAAA;AACjF,OAAO,EACL,aAAa,EAEb,yBAAyB,GAC1B,MAAM,SAAS,CAAA;AAChB,OAAO,EAAE,wBAAwB,EAAE,MAAM,SAAS,CAAA;AAElD,OAAO,EAAE,iBAAiB,EAAE,MAAM,4BAA4B,CAAA;AAE9D,MAAM,UAAU,uBAAuB,CACrC,QAA4C;IAE5C,MAAM,CAAC,MAAM,CAAC,GAAG,yBAAyB,EAAE,CAAA;IAC5C,MAAM,EAAE,YAAY,EAAE,GAAG,iBAAiB,EAAE,CAAA;IAE5C,SAAS,CAAC,GAAG,EAAE;QACb,OAAO,YAAY,CAAC,eAAe,CACjC,wBAAwB,EACxB,GAAG,EAAE;YACH,MAAM,SAAS,GAAG,aAAa,EAAE,CAAA;YACjC,IAAI,SAAS,EAAE,CAAC;gBACd,QAAQ,CAAC,SAAS,CAAC,CAAA;YACrB,CAAC;YACD,OAAO,KAAK,CAAA;QACd,CAAC,EACD,yBAAyB,CAC1B,CAAA;IACH,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAA;IAEtB,SAAS,CAAC,GAAG,EAAE;QACb,YAAY,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YACtC,MAAM,SAAS,GAAG,aAAa,EAAE,CAAA;YACjC,IAAI,SAAS,EAAE,CAAC;gBACd,QAAQ,CAAC,SAAS,CAAC,CAAA;YACrB,CAAC;QACH,CAAC,CAAC,CAAA;IACJ,CAAC,EAAE,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAA;AAC9B,CAAC","sourcesContent":["import { useEffect } from 'react'\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\nimport {\n  $getSelection,\n  BaseSelection,\n  COMMAND_PRIORITY_CRITICAL,\n} from 'lexical'\nimport { SELECTION_CHANGE_COMMAND } from 'lexical'\n\nimport { useToolbarContext } from '../context/toolbar-context'\n\nexport function useUpdateToolbarHandler(\n  callback: (selection: BaseSelection) => void\n) {\n  const [editor] = useLexicalComposerContext()\n  const { activeEditor } = useToolbarContext()\n\n  useEffect(() => {\n    return activeEditor.registerCommand(\n      SELECTION_CHANGE_COMMAND,\n      () => {\n        const selection = $getSelection()\n        if (selection) {\n          callback(selection)\n        }\n        return false\n      },\n      COMMAND_PRIORITY_CRITICAL\n    )\n  }, [editor, callback])\n\n  useEffect(() => {\n    activeEditor.getEditorState().read(() => {\n      const selection = $getSelection()\n      if (selection) {\n        callback(selection)\n      }\n    })\n  }, [activeEditor, callback])\n}\n"]}