{"version":3,"file":"component-picker-menu-plugin.jsx","sourceRoot":"","sources":["component-picker-menu-plugin.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ;;;;;;GAMG;AACH,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAO,MAAM,OAAO,CAAA;AAG3D,OAAO,OAAO,MAAM,cAAc,CAAA;AAGlC,OAAO,EAAE,yBAAyB,EAAE,MAAM,uCAAuC,CAAA;AACjF,OAAO,EAAE,6BAA6B,EAAE,MAAM,2CAA2C,CAAA;AAIzF,OAAO,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAA;AAG1D,MAAM,0BAA0B,GAAG,OAAO,CACxC,GAAG,EAAE,CAAC,MAAM,CAAC,yCAAyC,CAAC,EACvD,EAAE,GAAG,EAAE,KAAK,EAAE,CACf,CAAA;AAED,MAAM,UAAU,yBAAyB,CAAC,EACxC,WAAW,GAAG,EAAE,EAChB,gBAAgB,GAIjB;IACC,MAAM,CAAC,MAAM,CAAC,GAAG,yBAAyB,EAAE,CAAA;IAC5C,MAAM,CAAC,KAAK,EAAE,SAAS,CAAC,GAAG,cAAc,EAAE,CAAA;IAC3C,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAgB,IAAI,CAAC,CAAA;IAEnE,MAAM,oBAAoB,GAAG,6BAA6B,CAAC,GAAG,EAAE;QAC9D,SAAS,EAAE,CAAC;KACb,CAAC,CAAA;IAEF,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE;QAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO,WAAW,CAAA;QACpB,CAAC;QAED,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,CAAA;QAE1C,OAAO;YACL,GAAG,CAAA,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,EAAE,WAAW,EAAE,CAAC,KAAI,EAAE;YAC5C,GAAG,WAAW,CAAC,MAAM,CACnB,CAAC,MAAM,EAAE,EAAE,CACT,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;gBACxB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CACzD;SACF,CAAA;IACH,CAAC,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC,CAAA;IAEpC,MAAM,cAAc,GAAG,WAAW,CAChC,CACE,cAAqC,EACrC,YAA6B,EAC7B,SAAqB,EACrB,cAAsB,EACtB,EAAE;QACF,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE;YACjB,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,MAAM,EAAE,CAAA;YACtB,cAAc,CAAC,QAAQ,CAAC,cAAc,EAAE,MAAM,EAAE,SAAS,CAAC,CAAA;YAC1D,SAAS,EAAE,CAAA;QACb,CAAC,CAAC,CAAA;IACJ,CAAC,EACD,CAAC,MAAM,CAAC,CACT,CAAA;IAED,OAAO,CACL,EACE;MAAA,CAAC,KAAK,CACN;MAAA,CAAC,gBAAgB,CACjB;MAAA,CAAC,0BAA0B,CACzB,aAAa,CAAC,CAAC,cAAc,CAAC,CAC9B,cAAc,CAAC,CAAC,cAAc,CAAC,CAC/B,SAAS,CAAC,CAAC,oBAAoB,CAAC,CAChC,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,YAAY,CAAC,CAAC,CACZ,gBAAgB,EAChB,EAAE,aAAa,EAAE,sBAAsB,EAAE,mBAAmB,EAAE,EAC9D,EAAE;YACF,OAAO,gBAAgB,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM;gBAC/C,CAAC,CAAC,YAAY,CACZ,CAAC,GAAG,CAAC,SAAS,CAAC,sCAAsC,CACnD;gBAAA,CAAC,OAAO,CACN,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;wBACf,IAAI,CAAC,CAAC,GAAG,KAAK,SAAS,EAAE,CAAC;4BACxB,CAAC,CAAC,cAAc,EAAE,CAAA;4BAClB,mBAAmB,CACjB,aAAa,KAAK,IAAI;gCACpB,CAAC,CAAC,CAAC,aAAa,GAAG,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;oCACtC,OAAO,CAAC,MAAM;gCACd,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CACvB,CAAA;wBACH,CAAC;6BAAM,IAAI,CAAC,CAAC,GAAG,KAAK,WAAW,EAAE,CAAC;4BACjC,CAAC,CAAC,cAAc,EAAE,CAAA;4BAClB,mBAAmB,CACjB,aAAa,KAAK,IAAI;gCACpB,CAAC,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM;gCACtC,CAAC,CAAC,CAAC,CACN,CAAA;wBACH,CAAC;oBACH,CAAC,CAAC,CAEF;kBAAA,CAAC,WAAW,CACV;oBAAA,CAAC,YAAY,CACX;sBAAA,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAC9B,CAAC,WAAW,CACV,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAChB,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CACpB,QAAQ,CAAC,CAAC,GAAG,EAAE;4BACb,sBAAsB,CAAC,MAAM,CAAC,CAAA;wBAChC,CAAC,CAAC,CACF,SAAS,CAAC,CAAC,2BAA2B,aAAa,KAAK,KAAK;4BACzD,CAAC,CAAC,WAAW;4BACb,CAAC,CAAC,iBACJ,EAAE,CAAC,CAEL;0BAAA,CAAC,MAAM,CAAC,IAAI,CACZ;0BAAA,CAAC,MAAM,CAAC,KAAK,CACf;wBAAA,EAAE,WAAW,CAAC,CACf,CAAC,CACJ;oBAAA,EAAE,YAAY,CAChB;kBAAA,EAAE,WAAW,CACf;gBAAA,EAAE,OAAO,CACX;cAAA,EAAE,GAAG,CAAC,EACN,gBAAgB,CAAC,OAAO,CACzB;gBACD,CAAC,CAAC,IAAI,CAAA;QACV,CAAC,CAAC,EAEN;IAAA,GAAG,CACJ,CAAA;AACH,CAAC","sourcesContent":["'use client'\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { useCallback, useMemo, useState, JSX } from 'react'\nimport { createPortal } from 'react-dom'\n\nimport dynamic from 'next/dynamic'\n\nimport { TextNode } from 'lexical'\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\nimport { useBasicTypeaheadTriggerMatch } from '@lexical/react/LexicalTypeaheadMenuPlugin'\n\nimport { Command, CommandGroup, CommandItem, CommandList } from '../../ui/command'\n\nimport { useEditorModal } from '../editor-hooks/use-modal'\nimport { ComponentPickerOption } from '../plugins/picker/component-picker-option'\n\nconst LexicalTypeaheadMenuPlugin = dynamic(\n  () => import('./default/lexical-typeahead-menu-plugin'),\n  { ssr: false }\n)\n\nexport function ComponentPickerMenuPlugin({\n  baseOptions = [],\n  dynamicOptionsFn,\n}: {\n  baseOptions?: Array<ComponentPickerOption>\n  dynamicOptionsFn?: ({ queryString }: { queryString: string }) => Array<ComponentPickerOption>\n}): JSX.Element {\n  const [editor] = useLexicalComposerContext()\n  const [modal, showModal] = useEditorModal()\n  const [queryString, setQueryString] = useState<string | null>(null)\n\n  const checkForTriggerMatch = useBasicTypeaheadTriggerMatch('/', {\n    minLength: 0,\n  })\n\n  const options = useMemo(() => {\n    if (!queryString) {\n      return baseOptions\n    }\n\n    const regex = new RegExp(queryString, 'i')\n\n    return [\n      ...dynamicOptionsFn?.({ queryString }) || [],\n      ...baseOptions.filter(\n        (option) =>\n          regex.test(option.title) ||\n          option.keywords.some((keyword) => regex.test(keyword))\n      ),\n    ]\n  }, [editor, queryString, showModal])\n\n  const onSelectOption = useCallback(\n    (\n      selectedOption: ComponentPickerOption,\n      nodeToRemove: TextNode | null,\n      closeMenu: () => void,\n      matchingString: string\n    ) => {\n      editor.update(() => {\n        nodeToRemove?.remove()\n        selectedOption.onSelect(matchingString, editor, showModal)\n        closeMenu()\n      })\n    },\n    [editor]\n  )\n\n  return (\n    <>\n      {modal}\n      {/* @ts-ignore */}\n      <LexicalTypeaheadMenuPlugin<ComponentPickerOption>\n        onQueryChange={setQueryString}\n        onSelectOption={onSelectOption}\n        triggerFn={checkForTriggerMatch}\n        options={options}\n        menuRenderFn={(\n          anchorElementRef,\n          { selectedIndex, selectOptionAndCleanUp, setHighlightedIndex }\n        ) => {\n          return anchorElementRef.current && options.length\n            ? createPortal(\n              <div className=\"fixed w-[250px] rounded-md shadow-md\">\n                <Command\n                  onKeyDown={(e) => {\n                    if (e.key === 'ArrowUp') {\n                      e.preventDefault()\n                      setHighlightedIndex(\n                        selectedIndex !== null\n                          ? (selectedIndex - 1 + options.length) %\n                          options.length\n                          : options.length - 1\n                      )\n                    } else if (e.key === 'ArrowDown') {\n                      e.preventDefault()\n                      setHighlightedIndex(\n                        selectedIndex !== null\n                          ? (selectedIndex + 1) % options.length\n                          : 0\n                      )\n                    }\n                  }}\n                >\n                  <CommandList>\n                    <CommandGroup>\n                      {options.map((option, index) => (\n                        <CommandItem\n                          key={option.key}\n                          value={option.title}\n                          onSelect={() => {\n                            selectOptionAndCleanUp(option)\n                          }}\n                          className={`flex items-center gap-2 ${selectedIndex === index\n                              ? 'bg-accent'\n                              : '!bg-transparent'\n                            }`}\n                        >\n                          {option.icon}\n                          {option.title}\n                        </CommandItem>\n                      ))}\n                    </CommandGroup>\n                  </CommandList>\n                </Command>\n              </div>,\n              anchorElementRef.current\n            )\n            : null\n        }}\n      />\n    </>\n  )\n}\n"]}