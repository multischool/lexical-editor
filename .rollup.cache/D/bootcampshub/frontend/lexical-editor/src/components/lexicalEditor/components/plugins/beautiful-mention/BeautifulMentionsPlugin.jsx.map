{"version":3,"file":"BeautifulMentionsPlugin.jsx","sourceRoot":"","sources":["BeautifulMentionsPlugin.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint @typescript-eslint/no-deprecated: 0 */\nimport { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\nimport {\n  LexicalTypeaheadMenuPlugin,\n  MenuTextMatch,\n} from \"@lexical/react/LexicalTypeaheadMenuPlugin\";\nimport { mergeRegister } from \"@lexical/utils\";\nimport {\n  $createTextNode,\n  $getSelection,\n  $isNodeSelection,\n  $isParagraphNode,\n  $setSelection,\n  BLUR_COMMAND,\n  BaseSelection,\n  COMMAND_PRIORITY_LOW,\n  COMMAND_PRIORITY_NORMAL,\n  KEY_BACKSPACE_COMMAND,\n  KEY_DOWN_COMMAND,\n  KEY_SPACE_COMMAND,\n  PASTE_COMMAND,\n  SELECTION_CHANGE_COMMAND,\n  TextNode,\n} from \"lexical\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n  BeautifulMentionsItemData,\n  BeautifulMentionsMenuItem,\n  BeautifulMentionsPluginProps,\n} from \"./BeautifulMentionsPluginProps\";\nimport { ComboboxPlugin } from \"./ComboboxPlugin\";\nimport {\n  $createBeautifulMentionNode,\n  $isBeautifulMentionNode,\n  BeautifulMentionNode,\n} from \"./MentionNode\";\nimport { MenuOption } from \"./Menu\";\nimport { CAN_USE_DOM, IS_MOBILE } from \"./environment\";\nimport {\n  $insertMentionAtSelection,\n  $insertTriggerAtSelection,\n  $removeMention,\n  $renameMention,\n  INSERT_MENTION_COMMAND,\n  OPEN_MENTION_MENU_COMMAND,\n  REMOVE_MENTIONS_COMMAND,\n  RENAME_MENTIONS_COMMAND,\n} from \"./mention-commands\";\nimport {\n  $findBeautifulMentionNodes,\n  $getSelectionInfo,\n  $selectEnd,\n  DEFAULT_PUNCTUATION,\n  LENGTH_LIMIT,\n  PRE_TRIGGER_CHARS,\n  TRIGGERS,\n  VALID_CHARS,\n  getCreatableProp,\n  getMenuItemLimitProp,\n  getTextContent,\n  isWordChar,\n} from \"./mention-utils\";\nimport { useIsFocused } from \"./useIsFocused\";\nimport { useMentionLookupService } from \"./useMentionLookupService\";\n\nclass MentionOption extends MenuOption {\n  readonly menuItem: BeautifulMentionsMenuItem;\n  constructor(\n    public readonly trigger: string,\n    value: string,\n    displayValue: string,\n    data?: Record<string, BeautifulMentionsItemData>,\n  ) {\n    super(value, displayValue, data);\n    this.menuItem = {\n      trigger,\n      value,\n      displayValue,\n      data,\n    };\n  }\n}\n\n// Non-standard series of chars. Each series must be preceded and followed by\n// a valid char.\nconst VALID_JOINS = (punctuation: string) =>\n  \"(?:\" +\n  \"\\\\.[ |$]|\" + // E.g. \"r. \" in \"Mr. Smith\"\n  \"\\\\s|\" + // E.g. \" \" in \"Josh Duck\"\n  \"[\" +\n  punctuation +\n  \"]|\" + // E.g. \"-' in \"Salier-Hellendag\"\n  \")\";\n\n// Regex used to trigger the mention menu.\nfunction createMentionsRegex(\n  triggers: string[],\n  preTriggerChars: string,\n  punctuation: string,\n  allowSpaces: boolean,\n) {\n  return new RegExp(\n    (preTriggerChars ? `(^|\\\\s|${preTriggerChars})(` : \"(^|\\\\s)(\") +\n      TRIGGERS(triggers) +\n      \"((?:\" +\n      VALID_CHARS(triggers, punctuation) +\n      (allowSpaces ? VALID_JOINS(punctuation) : \"\") +\n      \"){0,\" +\n      LENGTH_LIMIT +\n      \"})\" +\n      \")$\",\n  );\n}\n\nexport function checkForMentions(\n  text: string,\n  triggers: string[],\n  preTriggerChars: string,\n  punctuation: string,\n  allowSpaces: boolean,\n): MenuTextMatch | null {\n  const match = createMentionsRegex(\n    triggers,\n    preTriggerChars,\n    punctuation,\n    allowSpaces,\n  ).exec(text);\n  if (match !== null) {\n    // The strategy ignores leading whitespace, but we need to know its\n    // length to add it to the leadOffset\n    const maybeLeadingWhitespace = match[1];\n    const matchingStringWithTrigger = match[2];\n    const matchingString = match[3];\n    if (matchingStringWithTrigger.length >= 1) {\n      return {\n        leadOffset: match.index + maybeLeadingWhitespace.length,\n        matchingString: matchingString,\n        replaceableString: matchingStringWithTrigger,\n      };\n    }\n  }\n  return null;\n}\n\n/**\n * A plugin that adds mentions to the lexical editor.\n */\nexport function BeautifulMentionsPlugin(props: BeautifulMentionsPluginProps) {\n  const {\n    items,\n    onSearch,\n    autoSpace = true,\n    searchDelay = props.onSearch ? 250 : 0,\n    allowSpaces = true,\n    insertOnBlur = true,\n    menuComponent: MenuComponent = \"ul\",\n    menuItemComponent: MenuItemComponent = \"li\",\n    emptyComponent: EmptyComponent,\n    menuAnchorClassName,\n    showMentionsOnDelete,\n    showCurrentMentionsAsSuggestions = true,\n    mentionEnclosure,\n    onMenuOpen,\n    onMenuClose,\n    onMenuItemSelect,\n    punctuation = DEFAULT_PUNCTUATION,\n    preTriggerChars = PRE_TRIGGER_CHARS,\n  } = props;\n  const justSelectedAnOption = useRef(false);\n  const isEditorFocused = useIsFocused();\n  const triggers = useMemo(\n    () => props.triggers ?? Object.keys(items ?? {}),\n    [props.triggers, items],\n  );\n  const [editor] = useLexicalComposerContext();\n  const [queryString, setQueryString] = useState<string | null>(null);\n  const [trigger, setTrigger] = useState<string | null>(null);\n  const { results, loading, query } = useMentionLookupService({\n    queryString,\n    searchDelay,\n    trigger,\n    items,\n    onSearch,\n    justSelectedAnOption,\n  });\n  const selectedMenuIndexRef = useRef<number | null>(null);\n  const oldSelection = useRef<BaseSelection | null>(null);\n  const creatable = getCreatableProp(props.creatable, trigger);\n  const menuItemLimit = getMenuItemLimitProp(props.menuItemLimit, trigger);\n  const options = useMemo((): MentionOption[] => {\n    if (!trigger) {\n      return [];\n    }\n    // add options from the lookup service\n    let opt = results.map((result) => {\n      if (typeof result === \"string\") {\n        return new MentionOption(trigger, result, result);\n      } else {\n        const { value, ...data } = result;\n        return new MentionOption(trigger, value, value, data);\n      }\n    });\n    // limit the number of menu items\n    if (menuItemLimit !== false && menuItemLimit > 0) {\n      opt = opt.slice(0, menuItemLimit);\n    }\n    // Add mentions from the editor. When a search function is provided, wait for the\n    // delayed search to prevent flickering\n    const readyToAddCurrentMentions = !onSearch || (!loading && query !== null);\n    if (readyToAddCurrentMentions && showCurrentMentionsAsSuggestions) {\n      editor.getEditorState().read(() => {\n        const mentions = $findBeautifulMentionNodes(editor);\n        for (const mention of mentions) {\n          const value = mention.getValue();\n          const data = mention.getData();\n          // only add the mention if it's not already in the list\n          if (\n            mention.getTrigger() === trigger &&\n            (query === null || mention.getValue().startsWith(query)) &&\n            opt.every((o) => o.value !== value)\n          ) {\n            opt.push(new MentionOption(trigger, value, value, data));\n          }\n        }\n      });\n    }\n    // add option to create a new mention\n    if (query && opt.every((o) => o.displayValue !== query)) {\n      const displayValue =\n        typeof creatable === \"string\"\n          ? creatable.replace(\"{{name}}\", query)\n          : typeof creatable === \"undefined\" || creatable\n            ? `Add \"${query}\"`\n            : undefined;\n      if (displayValue) {\n        opt.push(new MentionOption(trigger, query, displayValue));\n      }\n    }\n    return opt;\n  }, [\n    results,\n    onSearch,\n    loading,\n    query,\n    editor,\n    trigger,\n    creatable,\n    menuItemLimit,\n    showCurrentMentionsAsSuggestions,\n  ]);\n\n  const queryWithoutResults =\n    !!onSearch && !options.length && !!queryString && /\\s+/.test(queryString);\n\n  const open = !!options.length || (loading && !queryWithoutResults);\n\n  const handleClose = useCallback(() => {\n    setTrigger(null);\n  }, []);\n\n  const handleSelectOption = useCallback(\n    (\n      selectedOption: MenuOption,\n      nodeToReplace: TextNode | null,\n      closeMenu?: () => void,\n    ) => {\n      editor.update(() => {\n        if (!trigger) {\n          return;\n        }\n        const newMention =\n          !!creatable && selectedOption.value !== selectedOption.displayValue;\n        const value =\n          newMention && mentionEnclosure && /\\s/.test(selectedOption.value)\n            ? // if the value has spaces, wrap it in the enclosure\n              mentionEnclosure + selectedOption.value + mentionEnclosure\n            : selectedOption.value;\n        const mentionNode = $createBeautifulMentionNode(\n          trigger,\n          value,\n          selectedOption.data,\n        );\n        if (nodeToReplace) {\n          const nextSibling = nodeToReplace.getNextSibling();\n          nodeToReplace.replace(mentionNode);\n          if (nextSibling instanceof TextNode) {\n            // prevent that the text directly after the cursor remains in the\n            // editor if the user moved back with the cursor when selecting a mention\n            const nextSiblingTextContent = nextSibling.getTextContent();\n            if (\n              !/\\s/.test(nextSiblingTextContent) &&\n              value.includes(nextSiblingTextContent)\n            ) {\n              nextSibling.remove();\n            }\n          }\n        }\n        closeMenu?.();\n        justSelectedAnOption.current = true;\n      });\n    },\n    [editor, trigger, creatable, mentionEnclosure],\n  );\n\n  const handleSelectMenuItem = useCallback(\n    (\n      selectedOption: MenuOption,\n      nodeToReplace: TextNode | null,\n      closeMenu?: () => void,\n    ) => {\n      if (!trigger) {\n        return;\n      }\n      onMenuItemSelect?.({\n        trigger,\n        value: selectedOption.value,\n        displayValue: selectedOption.displayValue,\n        data: selectedOption.data,\n      });\n      handleSelectOption(selectedOption, nodeToReplace, closeMenu);\n    },\n    [handleSelectOption, onMenuItemSelect, trigger],\n  );\n\n  const checkForMentionMatch = useCallback(\n    (text: string) => {\n      const queryMatch = checkForMentions(\n        text,\n        triggers,\n        preTriggerChars,\n        punctuation,\n        allowSpaces,\n      );\n\n      if (queryMatch) {\n        const { replaceableString, matchingString } = queryMatch;\n        const index = replaceableString.lastIndexOf(matchingString);\n        const trigger =\n          index === -1\n            ? replaceableString\n            : replaceableString.substring(0, index) +\n              replaceableString.substring(index + matchingString.length);\n        setTrigger(trigger || null);\n        if (queryMatch.replaceableString) {\n          return queryMatch;\n        }\n      } else {\n        setTrigger(null);\n      }\n\n      return null;\n    },\n    [preTriggerChars, allowSpaces, punctuation, triggers],\n  );\n\n  const insertSpaceIfNecessary = useCallback(\n    (startsWithTriggerChar = false) => {\n      if (!autoSpace) {\n        return;\n      }\n\n      const selectionInfo = $getSelectionInfo(triggers, punctuation);\n      if (!selectionInfo) {\n        return;\n      }\n\n      const {\n        node,\n        offset,\n        type,\n        parentNode,\n        isTextNode,\n        textContent,\n        prevNode,\n        nextNode,\n        wordCharAfterCursor,\n        cursorAtStartOfNode,\n        cursorAtEndOfNode,\n      } = selectionInfo;\n\n      // [Mention][|][ Text]\n      if (\n        isTextNode &&\n        cursorAtStartOfNode &&\n        $isBeautifulMentionNode(prevNode)\n      ) {\n        node.insertBefore($createTextNode(\" \"));\n        return;\n      }\n\n      // ^[|][Mention]\n      if (\n        $isBeautifulMentionNode(node) &&\n        prevNode === null &&\n        $isParagraphNode(parentNode) &&\n        type === \"element\" &&\n        offset === 0\n      ) {\n        const textNode = $createTextNode(\" \");\n        node.insertBefore(textNode);\n        textNode.selectStart();\n        return;\n      }\n\n      // [Text ][|][Mention]\n      if (\n        isTextNode &&\n        cursorAtEndOfNode &&\n        $isBeautifulMentionNode(nextNode)\n      ) {\n        node.insertAfter($createTextNode(\" \"));\n        return;\n      }\n\n      // [Text ][|][Text]\n      if (isTextNode && startsWithTriggerChar && wordCharAfterCursor) {\n        const content =\n          textContent.substring(0, offset) +\n          \" \" +\n          textContent.substring(offset);\n        node.setTextContent(content);\n        return;\n      }\n\n      // [Mention][|]\n      if ($isBeautifulMentionNode(node) && nextNode === null) {\n        node.insertAfter($createTextNode(\" \"));\n      }\n    },\n    [punctuation, triggers, autoSpace],\n  );\n\n  const convertTextToMention = useCallback(\n    (refocusAfterInsert = false) => {\n      const selectedMenuIndex = selectedMenuIndexRef.current;\n      let option =\n        typeof selectedMenuIndex === \"number\"\n          ? options[selectedMenuIndex]\n          : undefined;\n      const newMention = options.find((o) => o.value !== o.displayValue);\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (newMention && (IS_MOBILE || option === null)) {\n        option = newMention;\n      }\n      if (!option) {\n        return false;\n      }\n      const selectionInfo = $getSelectionInfo(triggers, punctuation);\n      if (!trigger || !selectionInfo?.isTextNode) {\n        return false;\n      }\n      const node = selectionInfo.node;\n      const textContent = getTextContent(node);\n      const queryMatch = checkForMentions(\n        textContent,\n        triggers,\n        preTriggerChars,\n        punctuation,\n        allowSpaces,\n      );\n      if (queryMatch === null) {\n        return false;\n      }\n      const textEndIndex = textContent.search(\n        new RegExp(`${queryMatch.replaceableString}\\\\s?$`),\n      );\n      if (textEndIndex === -1) {\n        return false;\n      }\n      const mentionNode = $createBeautifulMentionNode(\n        trigger,\n        option.value,\n        option.data,\n      );\n      editor.update(\n        () => {\n          node.setTextContent(textContent.substring(0, textEndIndex));\n          node.insertAfter(mentionNode);\n          mentionNode.selectNext();\n        },\n        { tag: \"history-merge\" },\n      );\n      if (refocusAfterInsert) {\n        const selection = $getSelection();\n        setTimeout(() => {\n          editor.update(() => {\n            if (selection) {\n              $setSelection(selection.clone());\n            }\n          });\n        });\n      }\n      return true;\n    },\n    [\n      options,\n      triggers,\n      punctuation,\n      trigger,\n      preTriggerChars,\n      allowSpaces,\n      editor,\n    ],\n  );\n\n  const restoreSelection = useCallback(() => {\n    const selection = $getSelection();\n    if ((!selection || $isNodeSelection(selection)) && oldSelection.current) {\n      const newSelection = oldSelection.current.clone();\n      $setSelection(newSelection);\n    } else if (!selection) {\n      $selectEnd();\n    }\n    if (oldSelection.current) {\n      oldSelection.current = null;\n    }\n  }, []);\n\n  const handleDeleteMention = useCallback(\n    (event: KeyboardEvent) => {\n      if (!showMentionsOnDelete) {\n        return false;\n      }\n      const selectionInfo = $getSelectionInfo(triggers, punctuation);\n      if (selectionInfo) {\n        const { node, prevNode, offset } = selectionInfo;\n        const mentionNode = $isBeautifulMentionNode(node)\n          ? node\n          : $isBeautifulMentionNode(prevNode) && offset === 0\n            ? prevNode\n            : null;\n        if (mentionNode) {\n          const trigger = mentionNode.getTrigger();\n          mentionNode.replace($createTextNode(trigger));\n          event.preventDefault();\n          return true;\n        }\n      }\n      return false;\n    },\n    [showMentionsOnDelete, triggers, punctuation],\n  );\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      const { key, metaKey, ctrlKey } = event;\n      const simpleKey = key.length === 1;\n      const wordChar = isWordChar(key, triggers, punctuation);\n      const isSpace = allowSpaces && /^\\s$/.test(key);\n      if (!simpleKey || metaKey || ctrlKey) {\n        return false;\n      }\n\n      // since the key must not be the same as the trigger, we try to build the trigger\n      // by combining the key with the last word before the cursor\n      let combinedKey = key;\n      const selectionInfo = $getSelectionInfo(triggers, punctuation);\n      if (selectionInfo?.isTextNode) {\n        const { textContent, offset } = selectionInfo;\n        const last = textContent.substring(0, offset).split(/\\s+/).at(-1) ?? \"\";\n        combinedKey = (last + key).trim();\n      }\n\n      const isTrigger = triggers.some((trigger) => combinedKey === trigger);\n\n      if (!wordChar && !isTrigger && !isSpace) {\n        return false;\n      }\n\n      insertSpaceIfNecessary(isTrigger);\n      return false;\n    },\n    [insertSpaceIfNecessary, punctuation, triggers, allowSpaces],\n  );\n\n  const handlePaste = useCallback(\n    (event: ClipboardEvent) => {\n      const text = event.clipboardData?.getData(\"text/plain\");\n      const firstChar = text?.charAt(0);\n      const isTrigger = triggers.some((trigger) => firstChar === trigger);\n      const isPunctuation =\n        firstChar && new RegExp(`[\\\\s${punctuation}]`).test(firstChar);\n      if (isTrigger || !isPunctuation) {\n        // insert space before pasting if the content starts with a trigger character\n        insertSpaceIfNecessary();\n      }\n      return false; // will be handled by the lexical clipboard module\n    },\n    [insertSpaceIfNecessary, triggers, punctuation],\n  );\n\n  useEffect(() => {\n    if (!editor.hasNodes([BeautifulMentionNode])) {\n      throw new Error(\n        \"BeautifulMentionsPlugin: BeautifulMentionNode not registered on editor\",\n      );\n    }\n    return mergeRegister(\n      editor.registerCommand(\n        SELECTION_CHANGE_COMMAND,\n        () => {\n          const selection = $getSelection();\n          if (selection && !$isNodeSelection(selection)) {\n            oldSelection.current = selection;\n          } else if (!selection) {\n            oldSelection.current = null;\n          }\n          return false;\n        },\n        COMMAND_PRIORITY_LOW,\n      ),\n      editor.registerCommand(\n        KEY_DOWN_COMMAND,\n        handleKeyDown,\n        COMMAND_PRIORITY_LOW,\n      ),\n      editor.registerCommand(\n        KEY_BACKSPACE_COMMAND,\n        handleDeleteMention,\n        COMMAND_PRIORITY_LOW,\n      ),\n      editor.registerCommand(\n        BLUR_COMMAND,\n        () => {\n          if (insertOnBlur) {\n            return convertTextToMention(true);\n          }\n          return false;\n        },\n        COMMAND_PRIORITY_LOW,\n      ),\n      editor.registerCommand(\n        KEY_SPACE_COMMAND,\n        () => {\n          if (!allowSpaces && creatable) {\n            return convertTextToMention();\n          } else {\n            return false;\n          }\n        },\n        COMMAND_PRIORITY_LOW,\n      ),\n      editor.registerCommand(\n        INSERT_MENTION_COMMAND,\n        ({ trigger, value, data, focus = true }) => {\n          restoreSelection();\n          const inserted = $insertMentionAtSelection(\n            triggers,\n            punctuation,\n            trigger,\n            value,\n            data,\n            autoSpace,\n          );\n          if (!focus) {\n            $setSelection(null);\n          }\n          return inserted;\n        },\n        COMMAND_PRIORITY_LOW,\n      ),\n      editor.registerCommand(\n        REMOVE_MENTIONS_COMMAND,\n        ({ trigger, value, focus }) => {\n          const removed = $removeMention(trigger, value, focus);\n          if (!focus) {\n            // remove oldSelection manually because the SELECTION_CHANGE_COMMAND\n            // listener is not called in this case.\n            oldSelection.current = null;\n          }\n          return removed;\n        },\n        COMMAND_PRIORITY_LOW,\n      ),\n      editor.registerCommand(\n        RENAME_MENTIONS_COMMAND,\n        ({ trigger, newValue, value, focus }) =>\n          $renameMention(trigger, newValue, value, focus),\n        COMMAND_PRIORITY_LOW,\n      ),\n      editor.registerCommand(\n        OPEN_MENTION_MENU_COMMAND,\n        ({ trigger }) => {\n          restoreSelection();\n          return $insertTriggerAtSelection(\n            triggers,\n            punctuation,\n            trigger,\n            autoSpace,\n          );\n        },\n        COMMAND_PRIORITY_LOW,\n      ),\n      editor.registerCommand(PASTE_COMMAND, handlePaste, COMMAND_PRIORITY_LOW),\n    );\n  }, [\n    editor,\n    triggers,\n    punctuation,\n    autoSpace,\n    allowSpaces,\n    insertOnBlur,\n    creatable,\n    isEditorFocused,\n    convertTextToMention,\n    handleKeyDown,\n    handleDeleteMention,\n    handlePaste,\n    restoreSelection,\n  ]);\n\n  useEffect(() => {\n    if (open && isEditorFocused) {\n      onMenuOpen?.();\n    } else {\n      onMenuClose?.();\n    }\n    if (open && !isEditorFocused) {\n      handleClose();\n    }\n  }, [onMenuOpen, onMenuClose, open, isEditorFocused, handleClose]);\n\n  if (!CAN_USE_DOM) {\n    return null;\n  }\n\n  if (props.combobox) {\n    return (\n      <ComboboxPlugin\n        options={options}\n        loading={loading}\n        onQueryChange={setQueryString}\n        onSelectOption={handleSelectOption}\n        onReset={() => {\n          setTrigger(null);\n        }}\n        triggerFn={checkForMentionMatch}\n        triggers={triggers}\n        punctuation={punctuation}\n        creatable={creatable}\n        comboboxOpen={props.comboboxOpen}\n        comboboxAnchor={props.comboboxAnchor}\n        comboboxAnchorClassName={props.comboboxAnchorClassName}\n        comboboxComponent={props.comboboxComponent}\n        comboboxItemComponent={props.comboboxItemComponent}\n        comboboxAdditionalItems={props.comboboxAdditionalItems}\n        onComboboxOpen={props.onComboboxOpen}\n        onComboboxClose={props.onComboboxClose}\n        onComboboxFocusChange={props.onComboboxFocusChange}\n        onComboboxItemSelect={props.onComboboxItemSelect}\n      />\n    );\n  }\n\n  return (\n    <LexicalTypeaheadMenuPlugin<MenuOption>\n      commandPriority={COMMAND_PRIORITY_NORMAL}\n      onQueryChange={setQueryString}\n      onSelectOption={handleSelectMenuItem}\n      triggerFn={checkForMentionMatch}\n      options={options}\n      anchorClassName={menuAnchorClassName}\n      onClose={handleClose}\n      menuRenderFn={(\n        anchorElementRef,\n        { selectedIndex, selectOptionAndCleanUp, setHighlightedIndex },\n      ) => {\n        selectedMenuIndexRef.current = selectedIndex;\n        if (\n          anchorElementRef.current &&\n          options.length === 0 &&\n          query &&\n          !loading &&\n          isEditorFocused &&\n          EmptyComponent\n        ) {\n          return ReactDOM.createPortal(\n            <EmptyComponent />,\n            anchorElementRef.current,\n          );\n        }\n        return anchorElementRef.current && open\n          ? ReactDOM.createPortal(\n              <MenuComponent\n                loading={loading}\n                role=\"menu\"\n                aria-label=\"Choose a mention\"\n                aria-hidden={!open}\n                aria-activedescendant={\n                  !IS_MOBILE &&\n                  selectedIndex !== null &&\n                  !!options[selectedIndex]\n                    ? options[selectedIndex].displayValue\n                    : \"\"\n                }\n              >\n                {options.map((option, i) => (\n                  <MenuItemComponent\n                    key={option.key}\n                    tabIndex={-1}\n                    selected={!IS_MOBILE && selectedIndex === i}\n                    ref={option.setRefElement}\n                    role=\"menuitem\"\n                    aria-selected={!IS_MOBILE && selectedIndex === i}\n                    aria-label={`Choose ${option.value}`}\n                    item={option.menuItem}\n                    itemValue={option.value}\n                    label={option.displayValue}\n                    {...option.data}\n                    onClick={() => {\n                      setHighlightedIndex(i);\n                      selectOptionAndCleanUp(option);\n                    }}\n                    onMouseDown={(event) => {\n                      event.preventDefault();\n                    }}\n                    onMouseEnter={() => {\n                      setHighlightedIndex(i);\n                    }}\n                  >\n                    {option.displayValue}\n                  </MenuItemComponent>\n                ))}\n              </MenuComponent>,\n              anchorElementRef.current,\n            )\n          : null;\n      }}\n    />\n  );\n}\n"]}