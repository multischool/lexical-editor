{"version":3,"file":"mention-utils.js","sourceRoot":"","sources":["mention-utils.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,qBAAqB,EACrB,UAAU,EACV,QAAQ,EACR,aAAa,EACb,gBAAgB,EAChB,cAAc,EACd,iBAAiB,EACjB,WAAW,EACX,YAAY,EACZ,aAAa,GAOd,MAAM,SAAS,CAAC;AAEjB,OAAO,EAAE,oBAAoB,EAAE,MAAM,eAAe,CAAC;AACrD,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,EAAE,0BAA0B,EAAE,MAAM,qBAAqB,CAAC;AAiCjE,MAAM,CAAC,MAAM,mBAAmB,GAC9B,qDAAqD,CAAC;AAExD,mEAAmE;AACnE,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,CAAC;AAEvC,6CAA6C;AAC7C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,QAAkB,EAAE,EAAE,CAC7C,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AAEnC,oEAAoE;AACpE,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,QAAkB,EAAE,WAAmB,EAAE,EAAE;IACrE,MAAM,SAAS,GACb,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IAChE,OAAO,SAAS,GAAG,OAAO,GAAG,WAAW,GAAG,GAAG,CAAC;AACjD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG,EAAE,CAAC;AAE/B,MAAM,UAAU,UAAU,CACxB,IAAY,EACZ,QAAkB,EAClB,WAAmB;IAEnB,OAAO,IAAI,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnE,CAAC;AAED,MAAM,UAAU,iBAAiB,CAC/B,QAAkB,EAClB,WAAmB;IAEnB,MAAM,SAAS,GAAG,aAAa,EAAE,CAAC;IAClC,IAAI,CAAC,SAAS,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,EAAE,CAAC;QAChD,OAAO;IACT,CAAC;IAED,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;IAChC,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;IAC9B,MAAM,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;IACpC,uEAAuE;IACvE,IAAI,MAAM,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QACxE,OAAO;IACT,CAAC;IAED,MAAM,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;IAC5D,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IACzB,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC7B,MAAM,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;IACzC,MAAM,mBAAmB,GAAG,MAAM,KAAK,CAAC,CAAC;IACzC,MAAM,iBAAiB,GAAG,WAAW,CAAC,MAAM,KAAK,MAAM,CAAC;IACxD,MAAM,gBAAgB,GAAG,WAAW,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACxD,MAAM,eAAe,GAAG,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACnD,MAAM,oBAAoB,GAAG,UAAU,CACrC,gBAAgB,EAChB,QAAQ,EACR,WAAW,CACZ,CAAC;IACF,MAAM,mBAAmB,GAAG,UAAU,CACpC,eAAe,EACf,QAAQ,EACR,WAAW,CACZ,CAAC;IACF,MAAM,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACtD,MAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACpD,MAAM,QAAQ,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC1C,MAAM,QAAQ,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;IACtC,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;IAEpC,MAAM,KAAK,GAAG;QACZ,IAAI;QACJ,IAAI;QACJ,MAAM;QACN,UAAU;QACV,WAAW;QACX,SAAS;QACT,QAAQ;QACR,QAAQ;QACR,UAAU;QACV,mBAAmB;QACnB,iBAAiB;QACjB,oBAAoB;QACpB,mBAAmB;QACnB,iBAAiB;QACjB,gBAAgB;KACjB,CAAC;IAEF,IAAI,UAAU,EAAE,CAAC;QACf,uCACK,KAAK,KACR,UAAU,EAAE,IAAI,EAChB,IAAI,IACJ;IACJ,CAAC;SAAM,CAAC;QACN,uCACK,KAAK,KACR,UAAU,EAAE,KAAK,EACjB,IAAI,IACJ;IACJ,CAAC;AACH,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,cAAc,CAAC,IAAiB;IAC9C,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IACxC,OAAO,WAAW,KAAK,IAAI,IAAI,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC;QAC7D,WAAW,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IACD,OAAO,WAAW,CAAC;AACrB,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,kBAAkB,CAAC,IAAiB;IAClD,IAAI,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAChD,OAAO,eAAe,KAAK,IAAI,IAAI,gBAAgB,CAAC,eAAe,CAAC,EAAE,CAAC;QACrE,eAAe,GAAG,eAAe,CAAC,kBAAkB,EAAE,CAAC;IACzD,CAAC;IACD,OAAO,eAAe,CAAC;AACzB,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,cAAc,CAAC,IAAiB;IAC9C,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC;QAC3B,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;AAC/B,CAAC;AAED,MAAM,UAAU,gBAAgB,CAC9B,SAAoD,EACpD,OAAsB;IAEtB,IAAI,OAAO,SAAS,KAAK,QAAQ,IAAI,OAAO,SAAS,KAAK,SAAS,EAAE,CAAC;QACpE,OAAO,SAAS,CAAC;IACnB,CAAC;IACD,IAAI,OAAO,KAAK,IAAI,EAAE,CAAC;QACrB,OAAO,KAAK,CAAC;IACf,CAAC;IACD,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE,CAAC;QAClC,OAAO,SAAS,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,UAAU,oBAAoB,CAClC,aAA4D,EAC5D,OAAsB;IAEtB,IAAI,OAAO,aAAa,KAAK,QAAQ,IAAI,aAAa,KAAK,KAAK,EAAE,CAAC;QACjE,OAAO,aAAa,CAAC;IACvB,CAAC;IACD,IAAI,OAAO,aAAa,KAAK,WAAW,EAAE,CAAC;QACzC,OAAO,CAAC,CAAC;IACX,CAAC;IACD,IAAI,OAAO,KAAK,IAAI,EAAE,CAAC;QACrB,OAAO,KAAK,CAAC;IACf,CAAC;IACD,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE,CAAC;QACtC,OAAO,aAAa,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IACD,OAAO,CAAC,CAAC;AACX,CAAC;AAED,SAAS,WAAW,CAAC,IAAc;IACjC,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC5C,IAAI,cAAc,CAAC,UAAU,CAAC,IAAI,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;QAC1D,OAAO,UAAU,CAAC;IACpB,CAAC;IACD,IAAI,gBAAgB,CAAC,UAAU,CAAC,EAAE,CAAC;QACjC,OAAO,UAAU,CAAC,SAAS,EAAE,CAAC;IAChC,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,UAAU,UAAU;IACxB,MAAM,IAAI,GAAG,QAAQ,EAAE,CAAC;IACxB,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;IACnC,MAAM,GAAG,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,EAAE,CAAC;IAC/B,MAAM,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC;QACrC,CAAC,CAAC,QAAQ,CAAC,eAAe,EAAE;QAC5B,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC;YACrB,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,MAAM;YACjC,CAAC,CAAC,CAAC,CAAC;IACR,MAAM,IAAI,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC;IAC3D,IAAI,GAAG,EAAE,CAAC;QACR,MAAM,YAAY,GAAG,qBAAqB,EAAE,CAAC;QAC7C,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAC3C,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAC1C,aAAa,CAAC,YAAY,CAAC,CAAC;IAC9B,CAAC;AACH,CAAC;AAED,MAAM,UAAU,0BAA0B,CAAC,MAAsB;IAC/D,MAAM,GAAG,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,UAAU,EAAE,CAAC;IAChC;IACE,uEAAuE;IACvE,0BAA0B;QAC1B,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC,EAC7C,CAAC;QACD,4DAA4D;QAC5D,OAAO,YAAY,CAAC,0BAA0B,CAAC,CAAC;IAClD,CAAC;IACD,4DAA4D;IAC5D,OAAO,YAAY,CAAC,oBAAoB,CAAC,CAAC;AAC5C,CAAC","sourcesContent":["import {\n  $createRangeSelection,\n  $getEditor,\n  $getRoot,\n  $getSelection,\n  $isDecoratorNode,\n  $isElementNode,\n  $isRangeSelection,\n  $isTextNode,\n  $nodesOfType,\n  $setSelection,\n  ElementNode,\n  LexicalEditor,\n  LexicalNode,\n  RangeSelection,\n  RootNode,\n  TextNode,\n} from \"lexical\";\nimport { BeautifulMentionsPluginProps } from \"./BeautifulMentionsPluginProps\";\nimport { BeautifulMentionNode } from \"./MentionNode\";\nimport { $isZeroWidthNode } from \"./ZeroWidthNode\";\nimport { CustomBeautifulMentionNode } from \"./createMentionNode\";\n\ninterface SelectionInfoBase {\n  offset: number;\n  type: \"text\" | \"element\";\n  textContent: string;\n  selection: RangeSelection;\n  prevNode: LexicalNode | null;\n  nextNode: LexicalNode | null;\n  parentNode: ElementNode | null;\n  cursorAtStartOfNode: boolean;\n  cursorAtEndOfNode: boolean;\n  wordCharBeforeCursor: boolean;\n  wordCharAfterCursor: boolean;\n  spaceBeforeCursor: boolean;\n  spaceAfterCursor: boolean;\n}\n\ninterface TextNodeSelectionInfo extends SelectionInfoBase {\n  isTextNode: true;\n  node: TextNode;\n}\n\ninterface LexicalNodeSelectionInfo extends SelectionInfoBase {\n  isTextNode: false;\n  node: LexicalNode;\n}\n\ntype SelectionInfo =\n  | TextNodeSelectionInfo\n  | LexicalNodeSelectionInfo\n  | undefined;\n\nexport const DEFAULT_PUNCTUATION =\n  \"\\\\.,\\\\*\\\\?\\\\$\\\\|#{}\\\\(\\\\)\\\\^\\\\[\\\\]\\\\\\\\/!%'\\\"~=<>_:;\";\n\n// Makes it possible to use brackets before the trigger: (@mention)\nexport const PRE_TRIGGER_CHARS = \"\\\\(\";\n\n// Strings that can trigger the mention menu.\nexport const TRIGGERS = (triggers: string[]) =>\n  \"(?:\" + triggers.join(\"|\") + \")\";\n\n// Chars we expect to see in a mention (non-space, non-punctuation).\nexport const VALID_CHARS = (triggers: string[], punctuation: string) => {\n  const lookahead =\n    triggers.length === 0 ? \"\" : \"(?!\" + triggers.join(\"|\") + \")\";\n  return lookahead + \"[^\\\\s\" + punctuation + \"]\";\n};\n\nexport const LENGTH_LIMIT = 75;\n\nexport function isWordChar(\n  char: string,\n  triggers: string[],\n  punctuation: string,\n) {\n  return new RegExp(VALID_CHARS(triggers, punctuation)).test(char);\n}\n\nexport function $getSelectionInfo(\n  triggers: string[],\n  punctuation: string,\n): SelectionInfo {\n  const selection = $getSelection();\n  if (!selection || !$isRangeSelection(selection)) {\n    return;\n  }\n\n  const anchor = selection.anchor;\n  const focus = selection.focus;\n  const [node] = selection.getNodes();\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  if (anchor.key !== focus.key || anchor.offset !== focus.offset || !node) {\n    return;\n  }\n\n  const isTextNode = $isTextNode(node) && node.isSimpleText();\n  const type = anchor.type;\n  const offset = anchor.offset;\n  const textContent = getTextContent(node);\n  const cursorAtStartOfNode = offset === 0;\n  const cursorAtEndOfNode = textContent.length === offset;\n  const charBeforeCursor = textContent.charAt(offset - 1);\n  const charAfterCursor = textContent.charAt(offset);\n  const wordCharBeforeCursor = isWordChar(\n    charBeforeCursor,\n    triggers,\n    punctuation,\n  );\n  const wordCharAfterCursor = isWordChar(\n    charAfterCursor,\n    triggers,\n    punctuation,\n  );\n  const spaceBeforeCursor = /\\s/.test(charBeforeCursor);\n  const spaceAfterCursor = /\\s/.test(charAfterCursor);\n  const prevNode = getPreviousSibling(node);\n  const nextNode = getNextSibling(node);\n  const parentNode = node.getParent();\n\n  const props = {\n    node,\n    type,\n    offset,\n    isTextNode,\n    textContent,\n    selection,\n    prevNode,\n    nextNode,\n    parentNode,\n    cursorAtStartOfNode,\n    cursorAtEndOfNode,\n    wordCharBeforeCursor,\n    wordCharAfterCursor,\n    spaceBeforeCursor,\n    spaceAfterCursor,\n  };\n\n  if (isTextNode) {\n    return {\n      ...props,\n      isTextNode: true,\n      node,\n    };\n  } else {\n    return {\n      ...props,\n      isTextNode: false,\n      node,\n    };\n  }\n}\n\n/**\n * TODO replace with Node#getPreviousSibling after ZeroWidthNode was removed.\n */\nexport function getNextSibling(node: LexicalNode) {\n  let nextSibling = node.getNextSibling();\n  while (nextSibling !== null && $isZeroWidthNode(nextSibling)) {\n    nextSibling = nextSibling.getNextSibling();\n  }\n  return nextSibling;\n}\n\n/**\n * TODO replace with Node#getPreviousSibling after ZeroWidthNode was removed.\n */\nexport function getPreviousSibling(node: LexicalNode) {\n  let previousSibling = node.getPreviousSibling();\n  while (previousSibling !== null && $isZeroWidthNode(previousSibling)) {\n    previousSibling = previousSibling.getPreviousSibling();\n  }\n  return previousSibling;\n}\n\n/**\n * TODO replace with Node#getTextContent after ZeroWidthNode was removed.\n */\nexport function getTextContent(node: LexicalNode) {\n  if ($isZeroWidthNode(node)) {\n    return \"\";\n  }\n  return node.getTextContent();\n}\n\nexport function getCreatableProp(\n  creatable: BeautifulMentionsPluginProps[\"creatable\"],\n  trigger: string | null,\n) {\n  if (typeof creatable === \"string\" || typeof creatable === \"boolean\") {\n    return creatable;\n  }\n  if (trigger === null) {\n    return false;\n  }\n  if (typeof creatable === \"object\") {\n    return creatable[trigger];\n  }\n  return false;\n}\n\nexport function getMenuItemLimitProp(\n  menuItemLimit: BeautifulMentionsPluginProps[\"menuItemLimit\"],\n  trigger: string | null,\n) {\n  if (typeof menuItemLimit === \"number\" || menuItemLimit === false) {\n    return menuItemLimit;\n  }\n  if (typeof menuItemLimit === \"undefined\") {\n    return 5;\n  }\n  if (trigger === null) {\n    return false;\n  }\n  if (typeof menuItemLimit === \"object\") {\n    return menuItemLimit[trigger];\n  }\n  return 5;\n}\n\nfunction getLastNode(root: RootNode) {\n  const descendant = root.getLastDescendant();\n  if ($isElementNode(descendant) || $isTextNode(descendant)) {\n    return descendant;\n  }\n  if ($isDecoratorNode(descendant)) {\n    return descendant.getParent();\n  }\n  return root;\n}\n\nexport function $selectEnd() {\n  const root = $getRoot();\n  const lastNode = getLastNode(root);\n  const key = lastNode?.getKey();\n  const offset = $isElementNode(lastNode)\n    ? lastNode.getChildrenSize()\n    : $isTextNode(lastNode)\n      ? getTextContent(lastNode).length\n      : 0;\n  const type = $isElementNode(lastNode) ? \"element\" : \"text\";\n  if (key) {\n    const newSelection = $createRangeSelection();\n    newSelection.anchor.set(key, offset, type);\n    newSelection.focus.set(key, offset, type);\n    $setSelection(newSelection);\n  }\n}\n\nexport function $findBeautifulMentionNodes(editor?: LexicalEditor) {\n  editor = editor ?? $getEditor();\n  if (\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    CustomBeautifulMentionNode &&\n    editor.hasNodes([CustomBeautifulMentionNode])\n  ) {\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    return $nodesOfType(CustomBeautifulMentionNode);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  return $nodesOfType(BeautifulMentionNode);\n}\n"]}