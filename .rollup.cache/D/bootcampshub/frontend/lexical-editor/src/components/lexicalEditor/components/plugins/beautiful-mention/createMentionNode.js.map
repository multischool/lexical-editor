{"version":3,"file":"createMentionNode.js","sourceRoot":"","sources":["createMentionNode.ts"],"names":[],"mappings":"AAIA,OAAO,EACL,oBAAoB,GAErB,MAAM,eAAe,CAAC;AAIvB,MAAM,CAAC,IAAI,0BAA2D,CAAC;AAEvE,MAAM,UAAU,6BAA6B,CAC3C,yBAA0D;IAE1D,0BAA0B,GAAG,yBAAyB,CAAC;AACzD,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,0BAA0B,CACxC,gBAA6D;IAE7D,0BAA0B;QACxB,uEAAuE;QACvE,0BAA0B,IAAI,aAAa,CAAC,gBAAgB,CAAC,CAAC;IAChE,OAAO;QACL,0BAA0B;QAC1B;YACE,OAAO,EAAE,oBAAoB;YAC7B,IAAI,EAAE,CAAC,IAA0B,EAAE,EAAE;gBACnC,OAAO,IAAI,0BAA0B,CACnC,IAAI,CAAC,UAAU,EAAE,EACjB,IAAI,CAAC,QAAQ,EAAE,EACf,IAAI,CAAC,OAAO,EAAE,CACf,CAAC;YACJ,CAAC;SACF;KACF,CAAC;AACJ,CAAC;AAED,SAAS,aAAa,CACpB,gBAA6D;IAE7D,OAAO,MAAM,0BAA2B,SAAQ,oBAAoB;QAClE,MAAM,CAAC,OAAO;YACZ,OAAO,yBAAyB,CAAC;QACnC,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,IAAgC;YAC3C,OAAO,IAAI,0BAA0B,CACnC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,KAAK,CACX,CAAC;QACJ,CAAC;QACD,MAAM,CAAC,UAAU,CAAC,cAA8C;YAC9D,OAAO,IAAI,0BAA0B,CACnC,cAAc,CAAC,OAAO,EACtB,cAAc,CAAC,KAAK,EACpB,cAAc,CAAC,IAAI,CACpB,CAAC;QACJ,CAAC;QACD,UAAU;YACR,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;YACzB,qCACE,OAAO,EAAE,IAAI,CAAC,SAAS,EACvB,KAAK,EAAE,IAAI,CAAC,OAAO,IAChB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KACzB,IAAI,EAAE,yBAAyB,EAC/B,OAAO,EAAE,CAAC,IACV;QACJ,CAAC;QACD,SAAS;YACP,OAAO,gBAAgB,CAAC;QAC1B,CAAC;QACD,QAAQ,CAAC,MAAqB,EAAE,MAAoB;YAClD,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACxC,CAAC;KACF,CAAC;AACJ,CAAC","sourcesContent":["import { LexicalEditor, LexicalNodeReplacement } from \"lexical\";\nimport { EditorConfig } from \"lexical\";\nimport React, { ElementType } from \"react\";\nimport { BeautifulMentionComponentProps } from \"./BeautifulMentionsPluginProps\";\nimport {\n  BeautifulMentionNode,\n  SerializedBeautifulMentionNode,\n} from \"./MentionNode\";\n\nexport type CustomBeautifulMentionNodeClass = ReturnType<typeof generateClass>;\n\nexport let CustomBeautifulMentionNode: CustomBeautifulMentionNodeClass;\n\nexport function setCustomBeautifulMentionNode(\n  BeautifulMentionNodeClass: CustomBeautifulMentionNodeClass,\n) {\n  CustomBeautifulMentionNode = BeautifulMentionNodeClass;\n}\n\n/**\n * Instead of using the default `BeautifulMentionNode` class, you can\n * extend it and use the mention component of your choice.\n */\nexport function createBeautifulMentionNode(\n  mentionComponent: ElementType<BeautifulMentionComponentProps>,\n): [CustomBeautifulMentionNodeClass, LexicalNodeReplacement] {\n  CustomBeautifulMentionNode =\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    CustomBeautifulMentionNode || generateClass(mentionComponent);\n  return [\n    CustomBeautifulMentionNode,\n    {\n      replace: BeautifulMentionNode,\n      with: (node: BeautifulMentionNode) => {\n        return new CustomBeautifulMentionNode(\n          node.getTrigger(),\n          node.getValue(),\n          node.getData(),\n        );\n      },\n    },\n  ];\n}\n\nfunction generateClass(\n  mentionComponent: ElementType<BeautifulMentionComponentProps>,\n) {\n  return class CustomBeautifulMentionNode extends BeautifulMentionNode {\n    static getType() {\n      return \"custom-beautifulMention\";\n    }\n    static clone(node: CustomBeautifulMentionNode) {\n      return new CustomBeautifulMentionNode(\n        node.__trigger,\n        node.__value,\n        node.__data,\n        node.__key,\n      );\n    }\n    static importJSON(serializedNode: SerializedBeautifulMentionNode) {\n      return new CustomBeautifulMentionNode(\n        serializedNode.trigger,\n        serializedNode.value,\n        serializedNode.data,\n      );\n    }\n    exportJSON(): SerializedBeautifulMentionNode {\n      const data = this.__data;\n      return {\n        trigger: this.__trigger,\n        value: this.__value,\n        ...(data ? { data } : {}),\n        type: \"custom-beautifulMention\",\n        version: 1,\n      };\n    }\n    component(): ElementType<BeautifulMentionComponentProps> | null {\n      return mentionComponent;\n    }\n    decorate(editor: LexicalEditor, config: EditorConfig): React.JSX.Element {\n      return super.decorate(editor, config);\n    }\n  };\n}\n"]}