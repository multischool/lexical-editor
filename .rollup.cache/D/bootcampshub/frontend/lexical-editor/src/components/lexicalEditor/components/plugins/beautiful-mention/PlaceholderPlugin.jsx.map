{"version":3,"file":"PlaceholderPlugin.jsx","sourceRoot":"","sources":["PlaceholderPlugin.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\nimport { mergeRegister } from \"@lexical/utils\";\nimport {\n  $getSelection,\n  $isDecoratorNode,\n  $isRangeSelection,\n  $nodesOfType,\n  COMMAND_PRIORITY_HIGH,\n  KEY_DOWN_COMMAND,\n  ParagraphNode,\n  SELECTION_CHANGE_COMMAND,\n} from \"lexical\";\nimport { useEffect } from \"react\";\nimport {\n  $createPlaceholderNode,\n  $isPlaceholderNode,\n  PlaceholderNode,\n} from \"./PlaceholderNode\";\n\n/**\n * This plugin serves as a patch to fix an incorrect cursor position in Safari.\n * {@link https://github.com/facebook/lexical/issues/4487}.\n * @deprecated This plugin is no longer needed and will be removed in a future release.\n */\nexport function PlaceholderPlugin() {\n  const [editor] = useLexicalComposerContext();\n\n  useEffect(() => {\n    if (!editor.hasNodes([PlaceholderNode])) {\n      throw new Error(\n        \"BeautifulMentionsPlugin: PlaceholderNode not registered on editor\",\n      );\n    }\n    return mergeRegister(\n      editor.registerUpdateListener(() => {\n        editor.update(\n          () => {\n            // insert a placeholder node at the end of each paragraph if the\n            // last node is a decorator node.\n            // eslint-disable-next-line @typescript-eslint/no-deprecated\n            const placeholderNodes = $nodesOfType(PlaceholderNode);\n            // eslint-disable-next-line @typescript-eslint/no-deprecated\n            $nodesOfType(ParagraphNode).forEach((paragraph) => {\n              const paragraphPlaceholders = placeholderNodes.filter((p) =>\n                paragraph.isParentOf(p),\n              );\n              const lastNode = paragraph.getLastDescendant();\n              if ($isDecoratorNode(lastNode)) {\n                paragraphPlaceholders.forEach((p) => {\n                  p.remove();\n                });\n                lastNode.insertAfter($createPlaceholderNode());\n              } else if (\n                $isPlaceholderNode(lastNode) &&\n                !$isDecoratorNode(lastNode.getPreviousSibling())\n              ) {\n                paragraphPlaceholders.forEach((p) => {\n                  p.remove();\n                });\n              }\n            });\n          },\n          // merge with previous history entry to allow undoing\n          { tag: \"history-merge\" },\n        );\n      }),\n      editor.registerCommand(\n        KEY_DOWN_COMMAND,\n        (event) => {\n          // prevent unnecessary removal of the placeholder nodes, since this\n          // would lead to insertion of another placeholder node and thus break\n          // undo with Ctrl+z\n          if (\n            event.ctrlKey ||\n            event.metaKey ||\n            event.altKey ||\n            event.key === \"Shift\"\n          ) {\n            return false;\n          }\n          // if the user starts typing at the placeholder's position, remove\n          // the placeholder node. this makes the PlaceholderNode almost\n          // \"invisible\" and prevents issues when, for example, when checking\n          // for previous nodes in the code.\n          const selection = $getSelection();\n          if ($isRangeSelection(selection)) {\n            const [node] = selection.getNodes();\n            if ($isPlaceholderNode(node)) {\n              node.remove();\n            }\n          }\n          return false;\n        },\n        COMMAND_PRIORITY_HIGH,\n      ),\n      editor.registerCommand(\n        SELECTION_CHANGE_COMMAND,\n        () => {\n          // select the previous node to avoid an error that occurs when the\n          // user tries to insert a node directly after the PlaceholderNode\n          const selection = $getSelection();\n          if ($isRangeSelection(selection) && selection.isCollapsed()) {\n            const [node] = selection.getNodes();\n            if ($isPlaceholderNode(node)) {\n              node.selectPrevious();\n            }\n          }\n          return false;\n        },\n        COMMAND_PRIORITY_HIGH,\n      ),\n    );\n  }, [editor]);\n\n  return null;\n}\n"]}