{"version":3,"file":"index.js","sources":["../../../node_modules/decode-named-character-reference/index.js"],"sourcesContent":["import {characterEntities} from 'character-entities'\n\n// To do: next major: use `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when youâ€™re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n"],"names":["own","hasOwnProperty","decodeNamedCharacterReference","value","call","characterEntities"],"mappings":"mEAGA,MAAMA,EAAM,CAAE,EAACC,eAaR,SAASC,EAA8BC,GAC5C,QAAOH,EAAII,KAAKC,EAAmBF,IAASE,EAAkBF,EAChE"}