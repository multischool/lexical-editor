{"version":3,"file":"utils.js","sources":["../../../../../../../node_modules/lucide-react/dist/esm/shared/src/utils.js"],"sourcesContent":["/**\n * @license lucide-react v0.485.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string) => string.replace(\n  /^([A-Z])|[\\s-_]+(\\w)/g,\n  (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()\n);\nconst toPascalCase = (string) => {\n  const camelCase = toCamelCase(string);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\n\nexport { mergeClasses, toCamelCase, toKebabCase, toPascalCase };\n//# sourceMappingURL=utils.js.map\n"],"names":["toKebabCase","string","replace","toLowerCase","toCamelCase","match","p1","p2","toUpperCase","toPascalCase","camelCase","charAt","slice","mergeClasses","classes","filter","className","index","array","Boolean","trim","indexOf","join"],"mappings":";;;;;;AAOK,MAACA,EAAeC,GAAWA,EAAOC,QAAQ,qBAAsB,SAASC,cACxEC,EAAeH,GAAWA,EAAOC,QACrC,yBACA,CAACG,EAAOC,EAAIC,IAAOA,EAAKA,EAAGC,cAAgBF,EAAGH,gBAE1CM,EAAgBR,IACpB,MAAMS,EAAYN,EAAYH,GAC9B,OAAOS,EAAUC,OAAO,GAAGH,cAAgBE,EAAUE,MAAM,EAAE,EAEzDC,EAAe,IAAIC,IAAYA,EAAQC,QAAO,CAACC,EAAWC,EAAOC,IAC9DC,QAAQH,IAAmC,KAArBA,EAAUI,QAAiBF,EAAMG,QAAQL,KAAeC,IACpFK,KAAK,KAAKF"}