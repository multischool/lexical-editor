import{markdownLineEnding as e}from"../../micromark-util-character/index.js";import{push as n,splice as t}from"../../micromark-util-chunked/index.js";import{resolveAll as r}from"../../micromark-util-resolve-all/index.js";function i(i,o,u){let s=Object.assign(u?Object.assign({},u):{line:1,column:1,offset:0},{_index:0,_bufferIndex:-1});const c={},f=[];let l=[],a=[];const d={consume:function(n){e(n)?(s.line++,s.column=1,s.offset+=-3===n?2:1,I()):-1!==n&&(s.column++,s.offset++);s._bufferIndex<0?s._index++:(s._bufferIndex++,s._bufferIndex===l[s._index].length&&(s._bufferIndex=-1,s._index++));x.previous=n},enter:function(e,n){const t=n||{};return t.type=e,t.start=_(),x.events.push(["enter",t,x]),a.push(t),t},exit:function(e){const n=a.pop();return n.end=_(),x.events.push(["exit",n,x]),n},attempt:g((function(e,n){k(e,n.from)})),check:g(b),interrupt:g(b,{interrupt:!0})},x={previous:null,code:null,containerState:{},events:[],parser:i,sliceStream:p,sliceSerialize:function(e,n){return function(e,n){let t=-1;const r=[];let i;for(;++t<e.length;){const o=e[t];let u;if("string"==typeof o)u=o;else switch(o){case-5:u="\r";break;case-4:u="\n";break;case-3:u="\r\n";break;case-2:u=n?" ":"\t";break;case-1:if(!n&&i)continue;u=" ";break;default:u=String.fromCharCode(o)}i=-2===o,r.push(u)}return r.join("")}(p(e),n)},now:_,defineSkip:function(e){c[e.line]=e.column,I()},write:function(e){if(l=n(l,e),h(),null!==l[l.length-1])return[];return k(o,0),x.events=r(f,x.events,x),x.events}};let m=o.tokenize.call(x,d);return o.resolveAll&&f.push(o),x;function p(e){return function(e,n){const t=n.start._index,r=n.start._bufferIndex,i=n.end._index,o=n.end._bufferIndex;let u;if(t===i)u=[e[t].slice(r,o)];else{if(u=e.slice(t,i),r>-1){const e=u[0];"string"==typeof e?u[0]=e.slice(r):u.shift()}o>0&&u.push(e[i].slice(0,o))}return u}(l,e)}function _(){const{line:e,column:n,offset:t,_index:r,_bufferIndex:i}=s;return{line:e,column:n,offset:t,_index:r,_bufferIndex:i}}function h(){let e;for(;s._index<l.length;){const n=l[s._index];if("string"==typeof n)for(e=s._index,s._bufferIndex<0&&(s._bufferIndex=0);s._index===e&&s._bufferIndex<n.length;)v(n.charCodeAt(s._bufferIndex));else v(n)}}function v(e){m=m(e)}function b(e,n){n.restore()}function g(e,n){return function(t,r,i){let o,u,c,f;return Array.isArray(t)?l(t):"tokenize"in t?l([t]):function(e){return n;function n(n){const t=null!==n&&e[n],r=null!==n&&e.null;return l([...Array.isArray(t)?t:t?[t]:[],...Array.isArray(r)?r:r?[r]:[]])(n)}}(t);function l(e){return o=e,u=0,0===e.length?i:m(e[u])}function m(e){return function(t){f=function(){const e=_(),n=x.previous,t=x.currentConstruct,r=x.events.length,i=Array.from(a);return{restore:o,from:r};function o(){s=e,x.previous=n,x.currentConstruct=t,x.events.length=r,a=i,I()}}(),c=e,e.partial||(x.currentConstruct=e);if(e.name&&x.parser.constructs.disable.null.includes(e.name))return h();return e.tokenize.call(n?Object.assign(Object.create(x),n):x,d,p,h)(t)}}function p(n){return e(c,f),r}function h(e){return f.restore(),++u<o.length?m(o[u]):i}}}function k(e,n){e.resolveAll&&!f.includes(e)&&f.push(e),e.resolve&&t(x.events,n,x.events.length-n,e.resolve(x.events.slice(n),x)),e.resolveTo&&(x.events=e.resolveTo(x.events,x))}function I(){s.line in c&&s.column<2&&(s.column=c[s.line],s.offset+=c[s.line]-1)}}export{i as createTokenizer};
//# sourceMappingURL=create-tokenizer.js.map
