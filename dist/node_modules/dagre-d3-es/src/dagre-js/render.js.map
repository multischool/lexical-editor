{"version":3,"file":"render.js","sources":["../../../../../node_modules/dagre-d3-es/src/dagre-js/render.js"],"sourcesContent":["import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { layout } from '../dagre/index.js';\nimport { arrows, setArrows } from './arrows.js';\nimport { createClusters, setCreateClusters } from './create-clusters.js';\nimport { createEdgeLabels, setCreateEdgeLabels } from './create-edge-labels.js';\nimport { createEdgePaths, setCreateEdgePaths } from './create-edge-paths.js';\nimport { createNodes, setCreateNodes } from './create-nodes.js';\nimport { positionClusters } from './position-clusters.js';\nimport { positionEdgeLabels } from './position-edge-labels.js';\nimport { positionNodes } from './position-nodes.js';\nimport { shapes, setShapes } from './shapes.js';\n\nexport { render };\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var fn = function (svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, 'output');\n    var clustersGroup = createOrSelectGroup(outputGroup, 'clusters');\n    var edgePathsGroup = createOrSelectGroup(outputGroup, 'edgePaths');\n    var edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, 'edgeLabels'), g);\n    var nodes = createNodes(createOrSelectGroup(outputGroup, 'nodes'), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function (value) {\n    if (!arguments.length) return createNodes;\n    setCreateNodes(value);\n    return fn;\n  };\n\n  fn.createClusters = function (value) {\n    if (!arguments.length) return createClusters;\n    setCreateClusters(value);\n    return fn;\n  };\n\n  fn.createEdgeLabels = function (value) {\n    if (!arguments.length) return createEdgeLabels;\n    setCreateEdgeLabels(value);\n    return fn;\n  };\n\n  fn.createEdgePaths = function (value) {\n    if (!arguments.length) return createEdgePaths;\n    setCreateEdgePaths(value);\n    return fn;\n  };\n\n  fn.shapes = function (value) {\n    if (!arguments.length) return shapes;\n    setShapes(value);\n    return fn;\n  };\n\n  fn.arrows = function (value) {\n    if (!arguments.length) return arrows;\n    setArrows(value);\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect',\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: 'normal',\n  curve: d3.curveLinear,\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function (v) {\n    var node = g.node(v);\n    if (!_.has(node, 'label') && !g.children(v).length) {\n      node.label = v;\n    }\n\n    if (_.has(node, 'paddingX')) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX,\n      });\n    }\n\n    if (_.has(node, 'paddingY')) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY,\n      });\n    }\n\n    if (_.has(node, 'padding')) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding,\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each(['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'], function (k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, 'width')) {\n      node._prevWidth = node.width;\n    }\n    if (_.has(node, 'height')) {\n      node._prevHeight = node.height;\n    }\n  });\n\n  g.edges().forEach(function (e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, 'label')) {\n      edge.label = '';\n    }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, '_prevWidth')) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, '_prevHeight')) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select('g.' + name);\n  if (selection.empty()) {\n    selection = root.append('g').attr('class', name);\n  }\n  return selection;\n}\n"],"names":["render","fn","svg","g","nodes","forEach","v","node","_.has","children","length","label","_.defaults","paddingLeft","paddingX","paddingRight","paddingTop","paddingY","paddingBottom","padding","NODE_DEFAULT_ATTRS","_.each","k","Number","_prevWidth","width","_prevHeight","height","edges","e","edge","EDGE_DEFAULT_ATTRS","preProcessGraph","outputGroup","createOrSelectGroup","clustersGroup","edgePathsGroup","edgeLabels","createEdgeLabels","createNodes","shapes","layout","positionNodes","positionEdgeLabels","createEdgePaths","arrows","clusters","createClusters","positionClusters","postProcessGraph","value","arguments","setCreateNodes","setCreateClusters","setCreateEdgeLabels","setCreateEdgePaths","setShapes","setArrows","rx","ry","shape","arrowhead","curve","d3.curveLinear","root","name","selection","select","empty","append","attr"],"mappings":"s9BAgBA,SAASA,IACP,IAAIC,EAAK,SAAUC,EAAKC,IA2E1B,SAAyBA,GACvBA,EAAEC,QAAQC,SAAQ,SAAUC,GAC1B,IAAIC,EAAOJ,EAAEI,KAAKD,GACbE,EAAMD,EAAM,UAAaJ,EAAEM,SAASH,GAAGI,SAC1CH,EAAKI,MAAQL,GAGXE,EAAMD,EAAM,aACdK,EAAWL,EAAM,CACfM,YAAaN,EAAKO,SAClBC,aAAcR,EAAKO,WAInBN,EAAMD,EAAM,aACdK,EAAWL,EAAM,CACfS,WAAYT,EAAKU,SACjBC,cAAeX,EAAKU,WAIpBT,EAAMD,EAAM,YACdK,EAAWL,EAAM,CACfM,YAAaN,EAAKY,QAClBJ,aAAcR,EAAKY,QACnBH,WAAYT,EAAKY,QACjBD,cAAeX,EAAKY,UAIxBP,EAAWL,EAAMa,GAEjBC,EAAO,CAAC,cAAe,eAAgB,aAAc,kBAAkB,SAAUC,GAC/Ef,EAAKe,GAAKC,OAAOhB,EAAKe,GAC5B,IAGQd,EAAMD,EAAM,WACdA,EAAKiB,WAAajB,EAAKkB,OAErBjB,EAAMD,EAAM,YACdA,EAAKmB,YAAcnB,EAAKoB,OAE9B,IAEExB,EAAEyB,QAAQvB,SAAQ,SAAUwB,GAC1B,IAAIC,EAAO3B,EAAE2B,KAAKD,GACbrB,EAAMsB,EAAM,WACfA,EAAKnB,MAAQ,IAEfC,EAAWkB,EAAMC,EACrB,GACA,CA9HIC,CAAgB7B,GAEhB,IAAI8B,EAAcC,EAAoBhC,EAAK,UACvCiC,EAAgBD,EAAoBD,EAAa,YACjDG,EAAiBF,EAAoBD,EAAa,aAClDI,EAAaC,EAAiBJ,EAAoBD,EAAa,cAAe9B,GAC9EC,EAAQmC,EAAYL,EAAoBD,EAAa,SAAU9B,EAAGqC,GAEtEC,EAAOtC,GAEPuC,EAActC,EAAOD,GACrBwC,EAAmBN,EAAYlC,GAC/ByC,EAAgBR,EAAgBjC,EAAG0C,GAEnC,IAAIC,EAAWC,EAAeZ,EAAehC,GAC7C6C,EAAiBF,EAAU3C,GAiH/B,SAA0BA,GACxBkB,EAAOlB,EAAEC,SAAS,SAAUE,GAC1B,IAAIC,EAAOJ,EAAEI,KAAKD,GAGdE,EAAMD,EAAM,cACdA,EAAKkB,MAAQlB,EAAKiB,kBAEXjB,EAAKkB,MAGVjB,EAAMD,EAAM,eACdA,EAAKoB,OAASpB,EAAKmB,mBAEZnB,EAAKoB,cAGPpB,EAAKiB,kBACLjB,EAAKmB,WAChB,GACA,CAnIIuB,CAAiB9C,EACrB,EAsCE,OApCAF,EAAGsC,YAAc,SAAUW,GACzB,OAAKC,UAAUzC,QACf0C,EAAeF,GACRjD,GAFuBsC,CAGlC,EAEEtC,EAAG8C,eAAiB,SAAUG,GAC5B,OAAKC,UAAUzC,QACf2C,EAAkBH,GACXjD,GAFuB8C,CAGlC,EAEE9C,EAAGqC,iBAAmB,SAAUY,GAC9B,OAAKC,UAAUzC,QACf4C,EAAoBJ,GACbjD,GAFuBqC,CAGlC,EAEErC,EAAG2C,gBAAkB,SAAUM,GAC7B,OAAKC,UAAUzC,QACf6C,EAAmBL,GACZjD,GAFuB2C,CAGlC,EAEE3C,EAAGuC,OAAS,SAAUU,GACpB,OAAKC,UAAUzC,QACf8C,EAAUN,GACHjD,GAFuBuC,CAGlC,EAEEvC,EAAG4C,OAAS,SAAUK,GACpB,OAAKC,UAAUzC,QACf+C,EAAUP,GACHjD,GAFuB4C,CAGlC,EAES5C,CACT,CAEA,IAAImB,EAAqB,CACvBP,YAAa,GACbE,aAAc,GACdC,WAAY,GACZE,cAAe,GACfwC,GAAI,EACJC,GAAI,EACJC,MAAO,QAGL7B,EAAqB,CACvB8B,UAAW,SACXC,MAAOC,GA+ET,SAAS7B,EAAoB8B,EAAMC,GACjC,IAAIC,EAAYF,EAAKG,OAAO,KAAOF,GAInC,OAHIC,EAAUE,UACZF,EAAYF,EAAKK,OAAO,KAAKC,KAAK,QAASL,IAEtCC,CACT"}