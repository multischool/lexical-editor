{"version":3,"file":"create-edge-paths.js","sources":["../../../../../node_modules/dagre-d3-es/src/dagre-js/create-edge-paths.js"],"sourcesContent":["import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { intersectNode } from './intersect/intersect-node.js';\nimport * as util from './util.js';\n\nexport { createEdgePaths, setCreateEdgePaths };\n\nvar createEdgePaths = function (selection, g, arrows) {\n  var previousPaths = selection\n    .selectAll('g.edgePath')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  var newPaths = enter(previousPaths, g);\n  exit(previousPaths, g);\n\n  var svgPaths = previousPaths.merge !== undefined ? previousPaths.merge(newPaths) : previousPaths;\n  util.applyTransition(svgPaths, g).style('opacity', 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function (e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr('id', edge.id);\n    }\n\n    util.applyClass(\n      domEdge,\n      edge['class'],\n      (domEdge.classed('update') ? 'update ' : '') + 'edgePath'\n    );\n  });\n\n  svgPaths.selectAll('path.path').each(function (e) {\n    var edge = g.edge(e);\n    edge.arrowheadId = _.uniqueId('arrowhead');\n\n    var domEdge = d3\n      .select(this)\n      .attr('marker-end', function () {\n        return 'url(' + makeFragmentRef(location.href, edge.arrowheadId) + ')';\n      })\n      .style('fill', 'none');\n\n    util.applyTransition(domEdge, g).attr('d', function (e) {\n      return calcPoints(g, e);\n    });\n\n    util.applyStyle(domEdge, edge.style);\n  });\n\n  svgPaths.selectAll('defs *').remove();\n  svgPaths.selectAll('defs').each(function (e) {\n    var edge = g.edge(e);\n    var arrowhead = arrows[edge.arrowhead];\n    arrowhead(d3.select(this), edge.arrowheadId, edge, 'arrowhead');\n  });\n\n  return svgPaths;\n};\n\nfunction setCreateEdgePaths(value) {\n  createEdgePaths = value;\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split('#')[0];\n  return baseUrl + '#' + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e);\n  var tail = g.node(e.v);\n  var head = g.node(e.w);\n  var points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  // @ts-expect-error\n  var line = (d3.line || d3.svg.line)()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    });\n\n  (line.curve || line.interpolate)(edge.curve);\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox();\n  var matrix = elem.ownerSVGElement\n    .getScreenCTM()\n    .inverse()\n    .multiply(elem.getScreenCTM())\n    .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter().append('g').attr('class', 'edgePath').style('opacity', 0);\n  svgPathsEnter\n    .append('path')\n    .attr('class', 'path')\n    .attr('d', function (e) {\n      var edge = g.edge(e);\n      var sourceElem = g.node(e.v).elem;\n      var points = _.range(edge.points.length).map(function () {\n        return getCoords(sourceElem);\n      });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append('defs');\n  return svgPathsEnter;\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g).style('opacity', 0).remove();\n}\n"],"names":["createEdgePaths","selection","g","arrows","previousPaths","selectAll","data","edges","e","util.edgeToId","classed","newPaths","svgPaths","svgPathsEnter","enter","append","attr","style","edge","sourceElem","node","v","elem","createLine","_.range","points","length","map","bbox","getBBox","x","matrix","ownerSVGElement","getScreenCTM","inverse","multiply","translate","width","height","y","f","svgPathExit","exit","util.applyTransition","remove","undefined","merge","each","domEdge","d3.select","this","id","util.applyClass","arrowheadId","_.uniqueId","d3\n      .select","url","location","href","fragmentId","split","tail","head","w","slice","unshift","intersectNode","push","calcPoints","util.applyStyle","arrowhead","setCreateEdgePaths","value","line","d3.line","d3.svg","d","curve","interpolate"],"mappings":"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"}