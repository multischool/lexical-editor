import{intersectCircle as t}from"./intersect/intersect-circle.js";import{intersectEllipse as r}from"./intersect/intersect-ellipse.js";import{intersectPolygon as i}from"./intersect/intersect-polygon.js";import{intersectRect as e}from"./intersect/intersect-rect.js";var n={rect:function(t,r,i){var n=t.insert("rect",":first-child").attr("rx",i.rx).attr("ry",i.ry).attr("x",-r.width/2).attr("y",-r.height/2).attr("width",r.width).attr("height",r.height);return i.intersect=function(t){return e(i,t)},n},ellipse:function(t,i,e){var n=i.width/2,c=i.height/2,h=t.insert("ellipse",":first-child").attr("x",-i.width/2).attr("y",-i.height/2).attr("rx",n).attr("ry",c);return e.intersect=function(t){return r(e,n,c,t)},h},circle:function(r,i,e){var n=Math.max(i.width,i.height)/2,c=r.insert("circle",":first-child").attr("x",-i.width/2).attr("y",-i.height/2).attr("r",n);return e.intersect=function(r){return t(e,n,r)},c},diamond:function(t,r,e){var n=r.width*Math.SQRT2/2,c=r.height*Math.SQRT2/2,h=[{x:0,y:-c},{x:-n,y:0},{x:0,y:c},{x:n,y:0}],s=t.insert("polygon",":first-child").attr("points",h.map((function(t){return t.x+","+t.y})).join(" "));return e.intersect=function(t){return i(e,h,t)},s}};function c(t){n=t}export{c as setShapes,n as shapes};
//# sourceMappingURL=shapes.js.map
