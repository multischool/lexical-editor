import{simplify as s,pointsOnBezierCurves as t}from"../node_modules/points-on-curve/lib/index.js";import{parsePath as e}from"../../path-data-parser/lib/parser.js";import{absolutize as r}from"../../path-data-parser/lib/absolutize.js";import{normalize as o}from"../../path-data-parser/lib/normalize.js";function a(a,p,n){const h=e(a),i=o(r(h)),u=[];let c=[],l=[0,0],f=[];const m=()=>{f.length>=4&&c.push(...t(f,p)),f=[]},b=()=>{m(),c.length&&(u.push(c),c=[])};for(const{key:s,data:t}of i)switch(s){case"M":b(),l=[t[0],t[1]],c.push(l);break;case"L":m(),c.push([t[0],t[1]]);break;case"C":if(!f.length){const s=c.length?c[c.length-1]:l;f.push([s[0],s[1]])}f.push([t[0],t[1]]),f.push([t[2],t[3]]),f.push([t[4],t[5]]);break;case"Z":m(),c.push([l[0],l[1]])}if(b(),!n)return u;const d=[];for(const t of u){const e=s(t,n);e.length&&d.push(e)}return d}export{a as pointsOnPath};
//# sourceMappingURL=index.js.map
