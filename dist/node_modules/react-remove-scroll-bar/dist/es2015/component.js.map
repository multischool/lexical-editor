{"version":3,"file":"component.js","sources":["../../../../../node_modules/react-remove-scroll-bar/dist/es2015/component.js"],"sourcesContent":["import * as React from 'react';\nimport { styleSingleton } from 'react-style-singleton';\nimport { fullWidthClassName, zeroRightClassName, noScrollbarsClassName, removedBarSizeVariable } from './constants';\nimport { getGapWidth } from './utils';\nvar Style = styleSingleton();\nexport var lockAttribute = 'data-scroll-locked';\n// important tip - once we measure scrollBar width and remove them\n// we could not repeat this operation\n// thus we are using style-singleton - only the first \"yet correct\" style will be applied.\nvar getStyles = function (_a, allowRelative, gapMode, important) {\n    var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    return \"\\n  .\".concat(noScrollbarsClassName, \" {\\n   overflow: hidden \").concat(important, \";\\n   padding-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  body[\").concat(lockAttribute, \"] {\\n    overflow: hidden \").concat(important, \";\\n    overscroll-behavior: contain;\\n    \").concat([\n        allowRelative && \"position: relative \".concat(important, \";\"),\n        gapMode === 'margin' &&\n            \"\\n    padding-left: \".concat(left, \"px;\\n    padding-top: \").concat(top, \"px;\\n    padding-right: \").concat(right, \"px;\\n    margin-left:0;\\n    margin-top:0;\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n    \"),\n        gapMode === 'padding' && \"padding-right: \".concat(gap, \"px \").concat(important, \";\"),\n    ]\n        .filter(Boolean)\n        .join(''), \"\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" {\\n    right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" {\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" .\").concat(zeroRightClassName, \" {\\n    right: 0 \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" .\").concat(fullWidthClassName, \" {\\n    margin-right: 0 \").concat(important, \";\\n  }\\n  \\n  body[\").concat(lockAttribute, \"] {\\n    \").concat(removedBarSizeVariable, \": \").concat(gap, \"px;\\n  }\\n\");\n};\nvar getCurrentUseCounter = function () {\n    var counter = parseInt(document.body.getAttribute(lockAttribute) || '0', 10);\n    return isFinite(counter) ? counter : 0;\n};\nexport var useLockAttribute = function () {\n    React.useEffect(function () {\n        document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());\n        return function () {\n            var newCounter = getCurrentUseCounter() - 1;\n            if (newCounter <= 0) {\n                document.body.removeAttribute(lockAttribute);\n            }\n            else {\n                document.body.setAttribute(lockAttribute, newCounter.toString());\n            }\n        };\n    }, []);\n};\n/**\n * Removes page scrollbar and blocks page scroll when mounted\n */\nexport var RemoveScrollBar = function (_a) {\n    var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? 'margin' : _b;\n    useLockAttribute();\n    /*\n     gap will be measured on every component mount\n     however it will be used only by the \"first\" invocation\n     due to singleton nature of <Style\n     */\n    var gap = React.useMemo(function () { return getGapWidth(gapMode); }, [gapMode]);\n    return React.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? '!important' : '') });\n};\n"],"names":["Style","styleSingleton","lockAttribute","getStyles","_a","allowRelative","gapMode","important","left","top","right","gap","concat","noScrollbarsClassName","filter","Boolean","join","zeroRightClassName","fullWidthClassName","removedBarSizeVariable","getCurrentUseCounter","counter","parseInt","document","body","getAttribute","isFinite","useLockAttribute","React","useEffect","setAttribute","toString","newCounter","removeAttribute","RemoveScrollBar","noRelative","noImportant","_b","useMemo","getGapWidth","createElement","styles"],"mappings":"6RAIA,IAAIA,EAAQC,IACDC,EAAgB,qBAIvBC,EAAY,SAAUC,EAAIC,EAAeC,EAASC,GAClD,IAAIC,EAAOJ,EAAGI,KAAMC,EAAML,EAAGK,IAAKC,EAAQN,EAAGM,MAAOC,EAAMP,EAAGO,IAE7D,YADgB,IAAZL,IAAsBA,EAAU,UAC7B,QAAQM,OAAOC,EAAuB,4BAA4BD,OAAOL,EAAW,yBAAyBK,OAAOD,EAAK,OAAOC,OAAOL,EAAW,mBAAmBK,OAAOV,EAAe,8BAA8BU,OAAOL,EAAW,8CAA8CK,OAAO,CACnSP,GAAiB,sBAAsBO,OAAOL,EAAW,KAC7C,WAAZD,GACI,uBAAuBM,OAAOJ,EAAM,0BAA0BI,OAAOH,EAAK,4BAA4BG,OAAOF,EAAO,kEAAkEE,OAAOD,EAAK,OAAOC,OAAOL,EAAW,WACnN,YAAZD,GAAyB,kBAAkBM,OAAOD,EAAK,OAAOC,OAAOL,EAAW,MAE/EO,OAAOC,SACPC,KAAK,IAAK,kBAAkBJ,OAAOK,EAAoB,mBAAmBL,OAAOD,EAAK,OAAOC,OAAOL,EAAW,mBAAmBK,OAAOM,EAAoB,0BAA0BN,OAAOD,EAAK,OAAOC,OAAOL,EAAW,mBAAmBK,OAAOK,EAAoB,MAAML,OAAOK,EAAoB,qBAAqBL,OAAOL,EAAW,mBAAmBK,OAAOM,EAAoB,MAAMN,OAAOM,EAAoB,4BAA4BN,OAAOL,EAAW,uBAAuBK,OAAOV,EAAe,aAAaU,OAAOO,EAAwB,MAAMP,OAAOD,EAAK,aACnkB,EACIS,EAAuB,WACvB,IAAIC,EAAUC,SAASC,SAASC,KAAKC,aAAavB,IAAkB,IAAK,IACzE,OAAOwB,SAASL,GAAWA,EAAU,CACzC,EACWM,EAAmB,WAC1BC,EAAMC,WAAU,WAEZ,OADAN,SAASC,KAAKM,aAAa5B,GAAgBkB,IAAyB,GAAGW,YAChE,WACH,IAAIC,EAAaZ,IAAyB,EACtCY,GAAc,EACdT,SAASC,KAAKS,gBAAgB/B,GAG9BqB,SAASC,KAAKM,aAAa5B,EAAe8B,EAAWD,WAErE,CACK,GAAE,GACP,EAIWG,EAAkB,SAAU9B,GACnC,IAAI+B,EAAa/B,EAAG+B,WAAYC,EAAchC,EAAGgC,YAAaC,EAAKjC,EAAGE,QAASA,OAAiB,IAAP+B,EAAgB,SAAWA,EACpHV,IAMA,IAAIhB,EAAMiB,EAAMU,SAAQ,WAAc,OAAOC,EAAYjC,EAAS,GAAI,CAACA,IACvE,OAAOsB,EAAMY,cAAcxC,EAAO,CAAEyC,OAAQtC,EAAUQ,GAAMwB,EAAY7B,EAAU8B,EAA6B,GAAf,eACpG"}