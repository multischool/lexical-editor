{"version":3,"file":"encode.js","sources":["../../../node_modules/png-chunk-text/encode.js"],"sourcesContent":["module.exports = encode\n\nfunction encode (keyword, content) {\n  keyword = String(keyword)\n  content = String(content)\n\n  if (!/^[\\x00-\\xFF]+$/.test(keyword) || !/^[\\x00-\\xFF]+$/.test(content)) {\n    throw new Error('Only Latin-1 characters are permitted in PNG tEXt chunks. You might want to consider base64 encoding and/or zEXt compression')\n  }\n\n  if (keyword.length >= 80) {\n    throw new Error('Keyword \"' + keyword + '\" is longer than the 79-character limit imposed by the PNG specification')\n  }\n\n  var totalSize = keyword.length + content.length + 1\n  var output = new Uint8Array(totalSize)\n  var idx = 0\n  var code\n\n  for (var i = 0; i < keyword.length; i++) {\n    if (!(code = keyword.charCodeAt(i))) {\n      throw new Error('0x00 character is not permitted in tEXt keywords')\n    }\n\n    output[idx++] = code\n  }\n\n  output[idx++] = 0\n\n  for (var j = 0; j < content.length; j++) {\n    if (!(code = content.charCodeAt(j))) {\n      throw new Error('0x00 character is not permitted in tEXt content')\n    }\n\n    output[idx++] = code\n  }\n\n  return {\n    name: 'tEXt',\n    data: output\n  }\n}\n"],"names":["encode_1","keyword","content","String","test","Error","length","code","totalSize","output","Uint8Array","idx","i","charCodeAt","j","name","data"],"mappings":"AAAA,IAAAA,EAEA,SAAiBC,EAASC,GAIxB,GAHAD,EAAUE,OAAOF,GACjBC,EAAUC,OAAOD,IAEZ,iBAAiBE,KAAKH,KAAa,iBAAiBG,KAAKF,GAC5D,MAAM,IAAIG,MAAM,gIAGlB,GAAIJ,EAAQK,QAAU,GACpB,MAAM,IAAID,MAAM,YAAcJ,EAAU,4EAQ1C,IALA,IAGIM,EAHAC,EAAYP,EAAQK,OAASJ,EAAQI,OAAS,EAC9CG,EAAS,IAAIC,WAAWF,GACxBG,EAAM,EAGDC,EAAI,EAAGA,EAAIX,EAAQK,OAAQM,IAAK,CACvC,KAAML,EAAON,EAAQY,WAAWD,IAC9B,MAAM,IAAIP,MAAM,oDAGlBI,EAAOE,KAASJ,CACjB,CAEDE,EAAOE,KAAS,EAEhB,IAAK,IAAIG,EAAI,EAAGA,EAAIZ,EAAQI,OAAQQ,IAAK,CACvC,KAAMP,EAAOL,EAAQW,WAAWC,IAC9B,MAAM,IAAIT,MAAM,mDAGlBI,EAAOE,KAASJ,CACjB,CAED,MAAO,CACLQ,KAAM,OACNC,KAAMP,EAEV"}