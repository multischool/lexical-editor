{"version":3,"file":"layout-base.js","sources":["../../../node_modules/layout-base/layout-base.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"layoutBase\"] = factory();\n\telse\n\t\troot[\"layoutBase\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 26);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction LayoutConstants() {}\n\n/**\r\n * Layout Quality: 0:draft, 1:default, 2:proof\r\n */\nLayoutConstants.QUALITY = 1;\n\n/**\r\n * Default parameters\r\n */\nLayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED = false;\nLayoutConstants.DEFAULT_INCREMENTAL = false;\nLayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT = true;\nLayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT = false;\nLayoutConstants.DEFAULT_ANIMATION_PERIOD = 50;\nLayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES = false;\n\n// -----------------------------------------------------------------------------\n// Section: General other constants\n// -----------------------------------------------------------------------------\n/*\r\n * Margins of a graph to be applied on bouding rectangle of its contents. We\r\n * assume margins on all four sides to be uniform.\r\n */\nLayoutConstants.DEFAULT_GRAPH_MARGIN = 15;\n\n/*\r\n * Whether to consider labels in node dimensions or not\r\n */\nLayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = false;\n\n/*\r\n * Default dimension of a non-compound node.\r\n */\nLayoutConstants.SIMPLE_NODE_SIZE = 40;\n\n/*\r\n * Default dimension of a non-compound node.\r\n */\nLayoutConstants.SIMPLE_NODE_HALF_SIZE = LayoutConstants.SIMPLE_NODE_SIZE / 2;\n\n/*\r\n * Empty compound node size. When a compound node is empty, its both\r\n * dimensions should be of this value.\r\n */\nLayoutConstants.EMPTY_COMPOUND_NODE_SIZE = 40;\n\n/*\r\n * Minimum length that an edge should take during layout\r\n */\nLayoutConstants.MIN_EDGE_LENGTH = 1;\n\n/*\r\n * World boundaries that layout operates on\r\n */\nLayoutConstants.WORLD_BOUNDARY = 1000000;\n\n/*\r\n * World boundaries that random positioning can be performed with\r\n */\nLayoutConstants.INITIAL_WORLD_BOUNDARY = LayoutConstants.WORLD_BOUNDARY / 1000;\n\n/*\r\n * Coordinates of the world center\r\n */\nLayoutConstants.WORLD_CENTER_X = 1200;\nLayoutConstants.WORLD_CENTER_Y = 900;\n\nmodule.exports = LayoutConstants;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar IGeometry = __webpack_require__(8);\nvar IMath = __webpack_require__(9);\n\nfunction LEdge(source, target, vEdge) {\n  LGraphObject.call(this, vEdge);\n\n  this.isOverlapingSourceAndTarget = false;\n  this.vGraphObject = vEdge;\n  this.bendpoints = [];\n  this.source = source;\n  this.target = target;\n}\n\nLEdge.prototype = Object.create(LGraphObject.prototype);\n\nfor (var prop in LGraphObject) {\n  LEdge[prop] = LGraphObject[prop];\n}\n\nLEdge.prototype.getSource = function () {\n  return this.source;\n};\n\nLEdge.prototype.getTarget = function () {\n  return this.target;\n};\n\nLEdge.prototype.isInterGraph = function () {\n  return this.isInterGraph;\n};\n\nLEdge.prototype.getLength = function () {\n  return this.length;\n};\n\nLEdge.prototype.isOverlapingSourceAndTarget = function () {\n  return this.isOverlapingSourceAndTarget;\n};\n\nLEdge.prototype.getBendpoints = function () {\n  return this.bendpoints;\n};\n\nLEdge.prototype.getLca = function () {\n  return this.lca;\n};\n\nLEdge.prototype.getSourceInLca = function () {\n  return this.sourceInLca;\n};\n\nLEdge.prototype.getTargetInLca = function () {\n  return this.targetInLca;\n};\n\nLEdge.prototype.getOtherEnd = function (node) {\n  if (this.source === node) {\n    return this.target;\n  } else if (this.target === node) {\n    return this.source;\n  } else {\n    throw \"Node is not incident with this edge\";\n  }\n};\n\nLEdge.prototype.getOtherEndInGraph = function (node, graph) {\n  var otherEnd = this.getOtherEnd(node);\n  var root = graph.getGraphManager().getRoot();\n\n  while (true) {\n    if (otherEnd.getOwner() == graph) {\n      return otherEnd;\n    }\n\n    if (otherEnd.getOwner() == root) {\n      break;\n    }\n\n    otherEnd = otherEnd.getOwner().getParent();\n  }\n\n  return null;\n};\n\nLEdge.prototype.updateLength = function () {\n  var clipPointCoordinates = new Array(4);\n\n  this.isOverlapingSourceAndTarget = IGeometry.getIntersection(this.target.getRect(), this.source.getRect(), clipPointCoordinates);\n\n  if (!this.isOverlapingSourceAndTarget) {\n    this.lengthX = clipPointCoordinates[0] - clipPointCoordinates[2];\n    this.lengthY = clipPointCoordinates[1] - clipPointCoordinates[3];\n\n    if (Math.abs(this.lengthX) < 1.0) {\n      this.lengthX = IMath.sign(this.lengthX);\n    }\n\n    if (Math.abs(this.lengthY) < 1.0) {\n      this.lengthY = IMath.sign(this.lengthY);\n    }\n\n    this.length = Math.sqrt(this.lengthX * this.lengthX + this.lengthY * this.lengthY);\n  }\n};\n\nLEdge.prototype.updateLengthSimple = function () {\n  this.lengthX = this.target.getCenterX() - this.source.getCenterX();\n  this.lengthY = this.target.getCenterY() - this.source.getCenterY();\n\n  if (Math.abs(this.lengthX) < 1.0) {\n    this.lengthX = IMath.sign(this.lengthX);\n  }\n\n  if (Math.abs(this.lengthY) < 1.0) {\n    this.lengthY = IMath.sign(this.lengthY);\n  }\n\n  this.length = Math.sqrt(this.lengthX * this.lengthX + this.lengthY * this.lengthY);\n};\n\nmodule.exports = LEdge;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction LGraphObject(vGraphObject) {\n  this.vGraphObject = vGraphObject;\n}\n\nmodule.exports = LGraphObject;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar Integer = __webpack_require__(10);\nvar RectangleD = __webpack_require__(13);\nvar LayoutConstants = __webpack_require__(0);\nvar RandomSeed = __webpack_require__(16);\nvar PointD = __webpack_require__(4);\n\nfunction LNode(gm, loc, size, vNode) {\n  //Alternative constructor 1 : LNode(LGraphManager gm, Point loc, Dimension size, Object vNode)\n  if (size == null && vNode == null) {\n    vNode = loc;\n  }\n\n  LGraphObject.call(this, vNode);\n\n  //Alternative constructor 2 : LNode(Layout layout, Object vNode)\n  if (gm.graphManager != null) gm = gm.graphManager;\n\n  this.estimatedSize = Integer.MIN_VALUE;\n  this.inclusionTreeDepth = Integer.MAX_VALUE;\n  this.vGraphObject = vNode;\n  this.edges = [];\n  this.graphManager = gm;\n\n  if (size != null && loc != null) this.rect = new RectangleD(loc.x, loc.y, size.width, size.height);else this.rect = new RectangleD();\n}\n\nLNode.prototype = Object.create(LGraphObject.prototype);\nfor (var prop in LGraphObject) {\n  LNode[prop] = LGraphObject[prop];\n}\n\nLNode.prototype.getEdges = function () {\n  return this.edges;\n};\n\nLNode.prototype.getChild = function () {\n  return this.child;\n};\n\nLNode.prototype.getOwner = function () {\n  //  if (this.owner != null) {\n  //    if (!(this.owner == null || this.owner.getNodes().indexOf(this) > -1)) {\n  //      throw \"assert failed\";\n  //    }\n  //  }\n\n  return this.owner;\n};\n\nLNode.prototype.getWidth = function () {\n  return this.rect.width;\n};\n\nLNode.prototype.setWidth = function (width) {\n  this.rect.width = width;\n};\n\nLNode.prototype.getHeight = function () {\n  return this.rect.height;\n};\n\nLNode.prototype.setHeight = function (height) {\n  this.rect.height = height;\n};\n\nLNode.prototype.getCenterX = function () {\n  return this.rect.x + this.rect.width / 2;\n};\n\nLNode.prototype.getCenterY = function () {\n  return this.rect.y + this.rect.height / 2;\n};\n\nLNode.prototype.getCenter = function () {\n  return new PointD(this.rect.x + this.rect.width / 2, this.rect.y + this.rect.height / 2);\n};\n\nLNode.prototype.getLocation = function () {\n  return new PointD(this.rect.x, this.rect.y);\n};\n\nLNode.prototype.getRect = function () {\n  return this.rect;\n};\n\nLNode.prototype.getDiagonal = function () {\n  return Math.sqrt(this.rect.width * this.rect.width + this.rect.height * this.rect.height);\n};\n\n/**\n * This method returns half the diagonal length of this node.\n */\nLNode.prototype.getHalfTheDiagonal = function () {\n  return Math.sqrt(this.rect.height * this.rect.height + this.rect.width * this.rect.width) / 2;\n};\n\nLNode.prototype.setRect = function (upperLeft, dimension) {\n  this.rect.x = upperLeft.x;\n  this.rect.y = upperLeft.y;\n  this.rect.width = dimension.width;\n  this.rect.height = dimension.height;\n};\n\nLNode.prototype.setCenter = function (cx, cy) {\n  this.rect.x = cx - this.rect.width / 2;\n  this.rect.y = cy - this.rect.height / 2;\n};\n\nLNode.prototype.setLocation = function (x, y) {\n  this.rect.x = x;\n  this.rect.y = y;\n};\n\nLNode.prototype.moveBy = function (dx, dy) {\n  this.rect.x += dx;\n  this.rect.y += dy;\n};\n\nLNode.prototype.getEdgeListToNode = function (to) {\n  var edgeList = [];\n  var edge;\n  var self = this;\n\n  self.edges.forEach(function (edge) {\n\n    if (edge.target == to) {\n      if (edge.source != self) throw \"Incorrect edge source!\";\n\n      edgeList.push(edge);\n    }\n  });\n\n  return edgeList;\n};\n\nLNode.prototype.getEdgesBetween = function (other) {\n  var edgeList = [];\n  var edge;\n\n  var self = this;\n  self.edges.forEach(function (edge) {\n\n    if (!(edge.source == self || edge.target == self)) throw \"Incorrect edge source and/or target\";\n\n    if (edge.target == other || edge.source == other) {\n      edgeList.push(edge);\n    }\n  });\n\n  return edgeList;\n};\n\nLNode.prototype.getNeighborsList = function () {\n  var neighbors = new Set();\n\n  var self = this;\n  self.edges.forEach(function (edge) {\n\n    if (edge.source == self) {\n      neighbors.add(edge.target);\n    } else {\n      if (edge.target != self) {\n        throw \"Incorrect incidency!\";\n      }\n\n      neighbors.add(edge.source);\n    }\n  });\n\n  return neighbors;\n};\n\nLNode.prototype.withChildren = function () {\n  var withNeighborsList = new Set();\n  var childNode;\n  var children;\n\n  withNeighborsList.add(this);\n\n  if (this.child != null) {\n    var nodes = this.child.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      childNode = nodes[i];\n      children = childNode.withChildren();\n      children.forEach(function (node) {\n        withNeighborsList.add(node);\n      });\n    }\n  }\n\n  return withNeighborsList;\n};\n\nLNode.prototype.getNoOfChildren = function () {\n  var noOfChildren = 0;\n  var childNode;\n\n  if (this.child == null) {\n    noOfChildren = 1;\n  } else {\n    var nodes = this.child.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      childNode = nodes[i];\n\n      noOfChildren += childNode.getNoOfChildren();\n    }\n  }\n\n  if (noOfChildren == 0) {\n    noOfChildren = 1;\n  }\n  return noOfChildren;\n};\n\nLNode.prototype.getEstimatedSize = function () {\n  if (this.estimatedSize == Integer.MIN_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.estimatedSize;\n};\n\nLNode.prototype.calcEstimatedSize = function () {\n  if (this.child == null) {\n    return this.estimatedSize = (this.rect.width + this.rect.height) / 2;\n  } else {\n    this.estimatedSize = this.child.calcEstimatedSize();\n    this.rect.width = this.estimatedSize;\n    this.rect.height = this.estimatedSize;\n\n    return this.estimatedSize;\n  }\n};\n\nLNode.prototype.scatter = function () {\n  var randomCenterX;\n  var randomCenterY;\n\n  var minX = -LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  var maxX = LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  randomCenterX = LayoutConstants.WORLD_CENTER_X + RandomSeed.nextDouble() * (maxX - minX) + minX;\n\n  var minY = -LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  var maxY = LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  randomCenterY = LayoutConstants.WORLD_CENTER_Y + RandomSeed.nextDouble() * (maxY - minY) + minY;\n\n  this.rect.x = randomCenterX;\n  this.rect.y = randomCenterY;\n};\n\nLNode.prototype.updateBounds = function () {\n  if (this.getChild() == null) {\n    throw \"assert failed\";\n  }\n  if (this.getChild().getNodes().length != 0) {\n    // wrap the children nodes by re-arranging the boundaries\n    var childGraph = this.getChild();\n    childGraph.updateBounds(true);\n\n    this.rect.x = childGraph.getLeft();\n    this.rect.y = childGraph.getTop();\n\n    this.setWidth(childGraph.getRight() - childGraph.getLeft());\n    this.setHeight(childGraph.getBottom() - childGraph.getTop());\n\n    // Update compound bounds considering its label properties    \n    if (LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS) {\n\n      var width = childGraph.getRight() - childGraph.getLeft();\n      var height = childGraph.getBottom() - childGraph.getTop();\n\n      if (this.labelWidth > width) {\n        this.rect.x -= (this.labelWidth - width) / 2;\n        this.setWidth(this.labelWidth);\n      }\n\n      if (this.labelHeight > height) {\n        if (this.labelPos == \"center\") {\n          this.rect.y -= (this.labelHeight - height) / 2;\n        } else if (this.labelPos == \"top\") {\n          this.rect.y -= this.labelHeight - height;\n        }\n        this.setHeight(this.labelHeight);\n      }\n    }\n  }\n};\n\nLNode.prototype.getInclusionTreeDepth = function () {\n  if (this.inclusionTreeDepth == Integer.MAX_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.inclusionTreeDepth;\n};\n\nLNode.prototype.transform = function (trans) {\n  var left = this.rect.x;\n\n  if (left > LayoutConstants.WORLD_BOUNDARY) {\n    left = LayoutConstants.WORLD_BOUNDARY;\n  } else if (left < -LayoutConstants.WORLD_BOUNDARY) {\n    left = -LayoutConstants.WORLD_BOUNDARY;\n  }\n\n  var top = this.rect.y;\n\n  if (top > LayoutConstants.WORLD_BOUNDARY) {\n    top = LayoutConstants.WORLD_BOUNDARY;\n  } else if (top < -LayoutConstants.WORLD_BOUNDARY) {\n    top = -LayoutConstants.WORLD_BOUNDARY;\n  }\n\n  var leftTop = new PointD(left, top);\n  var vLeftTop = trans.inverseTransformPoint(leftTop);\n\n  this.setLocation(vLeftTop.x, vLeftTop.y);\n};\n\nLNode.prototype.getLeft = function () {\n  return this.rect.x;\n};\n\nLNode.prototype.getRight = function () {\n  return this.rect.x + this.rect.width;\n};\n\nLNode.prototype.getTop = function () {\n  return this.rect.y;\n};\n\nLNode.prototype.getBottom = function () {\n  return this.rect.y + this.rect.height;\n};\n\nLNode.prototype.getParent = function () {\n  if (this.owner == null) {\n    return null;\n  }\n\n  return this.owner.getParent();\n};\n\nmodule.exports = LNode;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction PointD(x, y) {\n  if (x == null && y == null) {\n    this.x = 0;\n    this.y = 0;\n  } else {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nPointD.prototype.getX = function () {\n  return this.x;\n};\n\nPointD.prototype.getY = function () {\n  return this.y;\n};\n\nPointD.prototype.setX = function (x) {\n  this.x = x;\n};\n\nPointD.prototype.setY = function (y) {\n  this.y = y;\n};\n\nPointD.prototype.getDifference = function (pt) {\n  return new DimensionD(this.x - pt.x, this.y - pt.y);\n};\n\nPointD.prototype.getCopy = function () {\n  return new PointD(this.x, this.y);\n};\n\nPointD.prototype.translate = function (dim) {\n  this.x += dim.width;\n  this.y += dim.height;\n  return this;\n};\n\nmodule.exports = PointD;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar Integer = __webpack_require__(10);\nvar LayoutConstants = __webpack_require__(0);\nvar LGraphManager = __webpack_require__(6);\nvar LNode = __webpack_require__(3);\nvar LEdge = __webpack_require__(1);\nvar RectangleD = __webpack_require__(13);\nvar Point = __webpack_require__(12);\nvar LinkedList = __webpack_require__(11);\n\nfunction LGraph(parent, obj2, vGraph) {\n  LGraphObject.call(this, vGraph);\n  this.estimatedSize = Integer.MIN_VALUE;\n  this.margin = LayoutConstants.DEFAULT_GRAPH_MARGIN;\n  this.edges = [];\n  this.nodes = [];\n  this.isConnected = false;\n  this.parent = parent;\n\n  if (obj2 != null && obj2 instanceof LGraphManager) {\n    this.graphManager = obj2;\n  } else if (obj2 != null && obj2 instanceof Layout) {\n    this.graphManager = obj2.graphManager;\n  }\n}\n\nLGraph.prototype = Object.create(LGraphObject.prototype);\nfor (var prop in LGraphObject) {\n  LGraph[prop] = LGraphObject[prop];\n}\n\nLGraph.prototype.getNodes = function () {\n  return this.nodes;\n};\n\nLGraph.prototype.getEdges = function () {\n  return this.edges;\n};\n\nLGraph.prototype.getGraphManager = function () {\n  return this.graphManager;\n};\n\nLGraph.prototype.getParent = function () {\n  return this.parent;\n};\n\nLGraph.prototype.getLeft = function () {\n  return this.left;\n};\n\nLGraph.prototype.getRight = function () {\n  return this.right;\n};\n\nLGraph.prototype.getTop = function () {\n  return this.top;\n};\n\nLGraph.prototype.getBottom = function () {\n  return this.bottom;\n};\n\nLGraph.prototype.isConnected = function () {\n  return this.isConnected;\n};\n\nLGraph.prototype.add = function (obj1, sourceNode, targetNode) {\n  if (sourceNode == null && targetNode == null) {\n    var newNode = obj1;\n    if (this.graphManager == null) {\n      throw \"Graph has no graph mgr!\";\n    }\n    if (this.getNodes().indexOf(newNode) > -1) {\n      throw \"Node already in graph!\";\n    }\n    newNode.owner = this;\n    this.getNodes().push(newNode);\n\n    return newNode;\n  } else {\n    var newEdge = obj1;\n    if (!(this.getNodes().indexOf(sourceNode) > -1 && this.getNodes().indexOf(targetNode) > -1)) {\n      throw \"Source or target not in graph!\";\n    }\n\n    if (!(sourceNode.owner == targetNode.owner && sourceNode.owner == this)) {\n      throw \"Both owners must be this graph!\";\n    }\n\n    if (sourceNode.owner != targetNode.owner) {\n      return null;\n    }\n\n    // set source and target\n    newEdge.source = sourceNode;\n    newEdge.target = targetNode;\n\n    // set as intra-graph edge\n    newEdge.isInterGraph = false;\n\n    // add to graph edge list\n    this.getEdges().push(newEdge);\n\n    // add to incidency lists\n    sourceNode.edges.push(newEdge);\n\n    if (targetNode != sourceNode) {\n      targetNode.edges.push(newEdge);\n    }\n\n    return newEdge;\n  }\n};\n\nLGraph.prototype.remove = function (obj) {\n  var node = obj;\n  if (obj instanceof LNode) {\n    if (node == null) {\n      throw \"Node is null!\";\n    }\n    if (!(node.owner != null && node.owner == this)) {\n      throw \"Owner graph is invalid!\";\n    }\n    if (this.graphManager == null) {\n      throw \"Owner graph manager is invalid!\";\n    }\n    // remove incident edges first (make a copy to do it safely)\n    var edgesToBeRemoved = node.edges.slice();\n    var edge;\n    var s = edgesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      edge = edgesToBeRemoved[i];\n\n      if (edge.isInterGraph) {\n        this.graphManager.remove(edge);\n      } else {\n        edge.source.owner.remove(edge);\n      }\n    }\n\n    // now the node itself\n    var index = this.nodes.indexOf(node);\n    if (index == -1) {\n      throw \"Node not in owner node list!\";\n    }\n\n    this.nodes.splice(index, 1);\n  } else if (obj instanceof LEdge) {\n    var edge = obj;\n    if (edge == null) {\n      throw \"Edge is null!\";\n    }\n    if (!(edge.source != null && edge.target != null)) {\n      throw \"Source and/or target is null!\";\n    }\n    if (!(edge.source.owner != null && edge.target.owner != null && edge.source.owner == this && edge.target.owner == this)) {\n      throw \"Source and/or target owner is invalid!\";\n    }\n\n    var sourceIndex = edge.source.edges.indexOf(edge);\n    var targetIndex = edge.target.edges.indexOf(edge);\n    if (!(sourceIndex > -1 && targetIndex > -1)) {\n      throw \"Source and/or target doesn't know this edge!\";\n    }\n\n    edge.source.edges.splice(sourceIndex, 1);\n\n    if (edge.target != edge.source) {\n      edge.target.edges.splice(targetIndex, 1);\n    }\n\n    var index = edge.source.owner.getEdges().indexOf(edge);\n    if (index == -1) {\n      throw \"Not in owner's edge list!\";\n    }\n\n    edge.source.owner.getEdges().splice(index, 1);\n  }\n};\n\nLGraph.prototype.updateLeftTop = function () {\n  var top = Integer.MAX_VALUE;\n  var left = Integer.MAX_VALUE;\n  var nodeTop;\n  var nodeLeft;\n  var margin;\n\n  var nodes = this.getNodes();\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    nodeTop = lNode.getTop();\n    nodeLeft = lNode.getLeft();\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n  }\n\n  // Do we have any nodes in this graph?\n  if (top == Integer.MAX_VALUE) {\n    return null;\n  }\n\n  if (nodes[0].getParent().paddingLeft != undefined) {\n    margin = nodes[0].getParent().paddingLeft;\n  } else {\n    margin = this.margin;\n  }\n\n  this.left = left - margin;\n  this.top = top - margin;\n\n  // Apply the margins and return the result\n  return new Point(this.left, this.top);\n};\n\nLGraph.prototype.updateBounds = function (recursive) {\n  // calculate bounds\n  var left = Integer.MAX_VALUE;\n  var right = -Integer.MAX_VALUE;\n  var top = Integer.MAX_VALUE;\n  var bottom = -Integer.MAX_VALUE;\n  var nodeLeft;\n  var nodeRight;\n  var nodeTop;\n  var nodeBottom;\n  var margin;\n\n  var nodes = this.nodes;\n  var s = nodes.length;\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n\n    if (recursive && lNode.child != null) {\n      lNode.updateBounds();\n    }\n    nodeLeft = lNode.getLeft();\n    nodeRight = lNode.getRight();\n    nodeTop = lNode.getTop();\n    nodeBottom = lNode.getBottom();\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n\n    if (right < nodeRight) {\n      right = nodeRight;\n    }\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (bottom < nodeBottom) {\n      bottom = nodeBottom;\n    }\n  }\n\n  var boundingRect = new RectangleD(left, top, right - left, bottom - top);\n  if (left == Integer.MAX_VALUE) {\n    this.left = this.parent.getLeft();\n    this.right = this.parent.getRight();\n    this.top = this.parent.getTop();\n    this.bottom = this.parent.getBottom();\n  }\n\n  if (nodes[0].getParent().paddingLeft != undefined) {\n    margin = nodes[0].getParent().paddingLeft;\n  } else {\n    margin = this.margin;\n  }\n\n  this.left = boundingRect.x - margin;\n  this.right = boundingRect.x + boundingRect.width + margin;\n  this.top = boundingRect.y - margin;\n  this.bottom = boundingRect.y + boundingRect.height + margin;\n};\n\nLGraph.calculateBounds = function (nodes) {\n  var left = Integer.MAX_VALUE;\n  var right = -Integer.MAX_VALUE;\n  var top = Integer.MAX_VALUE;\n  var bottom = -Integer.MAX_VALUE;\n  var nodeLeft;\n  var nodeRight;\n  var nodeTop;\n  var nodeBottom;\n\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    nodeLeft = lNode.getLeft();\n    nodeRight = lNode.getRight();\n    nodeTop = lNode.getTop();\n    nodeBottom = lNode.getBottom();\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n\n    if (right < nodeRight) {\n      right = nodeRight;\n    }\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (bottom < nodeBottom) {\n      bottom = nodeBottom;\n    }\n  }\n\n  var boundingRect = new RectangleD(left, top, right - left, bottom - top);\n\n  return boundingRect;\n};\n\nLGraph.prototype.getInclusionTreeDepth = function () {\n  if (this == this.graphManager.getRoot()) {\n    return 1;\n  } else {\n    return this.parent.getInclusionTreeDepth();\n  }\n};\n\nLGraph.prototype.getEstimatedSize = function () {\n  if (this.estimatedSize == Integer.MIN_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.estimatedSize;\n};\n\nLGraph.prototype.calcEstimatedSize = function () {\n  var size = 0;\n  var nodes = this.nodes;\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    size += lNode.calcEstimatedSize();\n  }\n\n  if (size == 0) {\n    this.estimatedSize = LayoutConstants.EMPTY_COMPOUND_NODE_SIZE;\n  } else {\n    this.estimatedSize = size / Math.sqrt(this.nodes.length);\n  }\n\n  return this.estimatedSize;\n};\n\nLGraph.prototype.updateConnected = function () {\n  var self = this;\n  if (this.nodes.length == 0) {\n    this.isConnected = true;\n    return;\n  }\n\n  var queue = new LinkedList();\n  var visited = new Set();\n  var currentNode = this.nodes[0];\n  var neighborEdges;\n  var currentNeighbor;\n  var childrenOfNode = currentNode.withChildren();\n  childrenOfNode.forEach(function (node) {\n    queue.push(node);\n    visited.add(node);\n  });\n\n  while (queue.length !== 0) {\n    currentNode = queue.shift();\n\n    // Traverse all neighbors of this node\n    neighborEdges = currentNode.getEdges();\n    var size = neighborEdges.length;\n    for (var i = 0; i < size; i++) {\n      var neighborEdge = neighborEdges[i];\n      currentNeighbor = neighborEdge.getOtherEndInGraph(currentNode, this);\n\n      // Add unvisited neighbors to the list to visit\n      if (currentNeighbor != null && !visited.has(currentNeighbor)) {\n        var childrenOfNeighbor = currentNeighbor.withChildren();\n\n        childrenOfNeighbor.forEach(function (node) {\n          queue.push(node);\n          visited.add(node);\n        });\n      }\n    }\n  }\n\n  this.isConnected = false;\n\n  if (visited.size >= this.nodes.length) {\n    var noOfVisitedInThisGraph = 0;\n\n    visited.forEach(function (visitedNode) {\n      if (visitedNode.owner == self) {\n        noOfVisitedInThisGraph++;\n      }\n    });\n\n    if (noOfVisitedInThisGraph == this.nodes.length) {\n      this.isConnected = true;\n    }\n  }\n};\n\nmodule.exports = LGraph;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraph;\nvar LEdge = __webpack_require__(1);\n\nfunction LGraphManager(layout) {\n  LGraph = __webpack_require__(5); // It may be better to initilize this out of this function but it gives an error (Right-hand side of 'instanceof' is not callable) now.\n  this.layout = layout;\n\n  this.graphs = [];\n  this.edges = [];\n}\n\nLGraphManager.prototype.addRoot = function () {\n  var ngraph = this.layout.newGraph();\n  var nnode = this.layout.newNode(null);\n  var root = this.add(ngraph, nnode);\n  this.setRootGraph(root);\n  return this.rootGraph;\n};\n\nLGraphManager.prototype.add = function (newGraph, parentNode, newEdge, sourceNode, targetNode) {\n  //there are just 2 parameters are passed then it adds an LGraph else it adds an LEdge\n  if (newEdge == null && sourceNode == null && targetNode == null) {\n    if (newGraph == null) {\n      throw \"Graph is null!\";\n    }\n    if (parentNode == null) {\n      throw \"Parent node is null!\";\n    }\n    if (this.graphs.indexOf(newGraph) > -1) {\n      throw \"Graph already in this graph mgr!\";\n    }\n\n    this.graphs.push(newGraph);\n\n    if (newGraph.parent != null) {\n      throw \"Already has a parent!\";\n    }\n    if (parentNode.child != null) {\n      throw \"Already has a child!\";\n    }\n\n    newGraph.parent = parentNode;\n    parentNode.child = newGraph;\n\n    return newGraph;\n  } else {\n    //change the order of the parameters\n    targetNode = newEdge;\n    sourceNode = parentNode;\n    newEdge = newGraph;\n    var sourceGraph = sourceNode.getOwner();\n    var targetGraph = targetNode.getOwner();\n\n    if (!(sourceGraph != null && sourceGraph.getGraphManager() == this)) {\n      throw \"Source not in this graph mgr!\";\n    }\n    if (!(targetGraph != null && targetGraph.getGraphManager() == this)) {\n      throw \"Target not in this graph mgr!\";\n    }\n\n    if (sourceGraph == targetGraph) {\n      newEdge.isInterGraph = false;\n      return sourceGraph.add(newEdge, sourceNode, targetNode);\n    } else {\n      newEdge.isInterGraph = true;\n\n      // set source and target\n      newEdge.source = sourceNode;\n      newEdge.target = targetNode;\n\n      // add edge to inter-graph edge list\n      if (this.edges.indexOf(newEdge) > -1) {\n        throw \"Edge already in inter-graph edge list!\";\n      }\n\n      this.edges.push(newEdge);\n\n      // add edge to source and target incidency lists\n      if (!(newEdge.source != null && newEdge.target != null)) {\n        throw \"Edge source and/or target is null!\";\n      }\n\n      if (!(newEdge.source.edges.indexOf(newEdge) == -1 && newEdge.target.edges.indexOf(newEdge) == -1)) {\n        throw \"Edge already in source and/or target incidency list!\";\n      }\n\n      newEdge.source.edges.push(newEdge);\n      newEdge.target.edges.push(newEdge);\n\n      return newEdge;\n    }\n  }\n};\n\nLGraphManager.prototype.remove = function (lObj) {\n  if (lObj instanceof LGraph) {\n    var graph = lObj;\n    if (graph.getGraphManager() != this) {\n      throw \"Graph not in this graph mgr\";\n    }\n    if (!(graph == this.rootGraph || graph.parent != null && graph.parent.graphManager == this)) {\n      throw \"Invalid parent node!\";\n    }\n\n    // first the edges (make a copy to do it safely)\n    var edgesToBeRemoved = [];\n\n    edgesToBeRemoved = edgesToBeRemoved.concat(graph.getEdges());\n\n    var edge;\n    var s = edgesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      edge = edgesToBeRemoved[i];\n      graph.remove(edge);\n    }\n\n    // then the nodes (make a copy to do it safely)\n    var nodesToBeRemoved = [];\n\n    nodesToBeRemoved = nodesToBeRemoved.concat(graph.getNodes());\n\n    var node;\n    s = nodesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      node = nodesToBeRemoved[i];\n      graph.remove(node);\n    }\n\n    // check if graph is the root\n    if (graph == this.rootGraph) {\n      this.setRootGraph(null);\n    }\n\n    // now remove the graph itself\n    var index = this.graphs.indexOf(graph);\n    this.graphs.splice(index, 1);\n\n    // also reset the parent of the graph\n    graph.parent = null;\n  } else if (lObj instanceof LEdge) {\n    edge = lObj;\n    if (edge == null) {\n      throw \"Edge is null!\";\n    }\n    if (!edge.isInterGraph) {\n      throw \"Not an inter-graph edge!\";\n    }\n    if (!(edge.source != null && edge.target != null)) {\n      throw \"Source and/or target is null!\";\n    }\n\n    // remove edge from source and target nodes' incidency lists\n\n    if (!(edge.source.edges.indexOf(edge) != -1 && edge.target.edges.indexOf(edge) != -1)) {\n      throw \"Source and/or target doesn't know this edge!\";\n    }\n\n    var index = edge.source.edges.indexOf(edge);\n    edge.source.edges.splice(index, 1);\n    index = edge.target.edges.indexOf(edge);\n    edge.target.edges.splice(index, 1);\n\n    // remove edge from owner graph manager's inter-graph edge list\n\n    if (!(edge.source.owner != null && edge.source.owner.getGraphManager() != null)) {\n      throw \"Edge owner graph or owner graph manager is null!\";\n    }\n    if (edge.source.owner.getGraphManager().edges.indexOf(edge) == -1) {\n      throw \"Not in owner graph manager's edge list!\";\n    }\n\n    var index = edge.source.owner.getGraphManager().edges.indexOf(edge);\n    edge.source.owner.getGraphManager().edges.splice(index, 1);\n  }\n};\n\nLGraphManager.prototype.updateBounds = function () {\n  this.rootGraph.updateBounds(true);\n};\n\nLGraphManager.prototype.getGraphs = function () {\n  return this.graphs;\n};\n\nLGraphManager.prototype.getAllNodes = function () {\n  if (this.allNodes == null) {\n    var nodeList = [];\n    var graphs = this.getGraphs();\n    var s = graphs.length;\n    for (var i = 0; i < s; i++) {\n      nodeList = nodeList.concat(graphs[i].getNodes());\n    }\n    this.allNodes = nodeList;\n  }\n  return this.allNodes;\n};\n\nLGraphManager.prototype.resetAllNodes = function () {\n  this.allNodes = null;\n};\n\nLGraphManager.prototype.resetAllEdges = function () {\n  this.allEdges = null;\n};\n\nLGraphManager.prototype.resetAllNodesToApplyGravitation = function () {\n  this.allNodesToApplyGravitation = null;\n};\n\nLGraphManager.prototype.getAllEdges = function () {\n  if (this.allEdges == null) {\n    var edgeList = [];\n    var graphs = this.getGraphs();\n    var s = graphs.length;\n    for (var i = 0; i < graphs.length; i++) {\n      edgeList = edgeList.concat(graphs[i].getEdges());\n    }\n\n    edgeList = edgeList.concat(this.edges);\n\n    this.allEdges = edgeList;\n  }\n  return this.allEdges;\n};\n\nLGraphManager.prototype.getAllNodesToApplyGravitation = function () {\n  return this.allNodesToApplyGravitation;\n};\n\nLGraphManager.prototype.setAllNodesToApplyGravitation = function (nodeList) {\n  if (this.allNodesToApplyGravitation != null) {\n    throw \"assert failed\";\n  }\n\n  this.allNodesToApplyGravitation = nodeList;\n};\n\nLGraphManager.prototype.getRoot = function () {\n  return this.rootGraph;\n};\n\nLGraphManager.prototype.setRootGraph = function (graph) {\n  if (graph.getGraphManager() != this) {\n    throw \"Root not in this graph mgr!\";\n  }\n\n  this.rootGraph = graph;\n  // root graph must have a root node associated with it for convenience\n  if (graph.parent == null) {\n    graph.parent = this.layout.newNode(\"Root node\");\n  }\n};\n\nLGraphManager.prototype.getLayout = function () {\n  return this.layout;\n};\n\nLGraphManager.prototype.isOneAncestorOfOther = function (firstNode, secondNode) {\n  if (!(firstNode != null && secondNode != null)) {\n    throw \"assert failed\";\n  }\n\n  if (firstNode == secondNode) {\n    return true;\n  }\n  // Is second node an ancestor of the first one?\n  var ownerGraph = firstNode.getOwner();\n  var parentNode;\n\n  do {\n    parentNode = ownerGraph.getParent();\n\n    if (parentNode == null) {\n      break;\n    }\n\n    if (parentNode == secondNode) {\n      return true;\n    }\n\n    ownerGraph = parentNode.getOwner();\n    if (ownerGraph == null) {\n      break;\n    }\n  } while (true);\n  // Is first node an ancestor of the second one?\n  ownerGraph = secondNode.getOwner();\n\n  do {\n    parentNode = ownerGraph.getParent();\n\n    if (parentNode == null) {\n      break;\n    }\n\n    if (parentNode == firstNode) {\n      return true;\n    }\n\n    ownerGraph = parentNode.getOwner();\n    if (ownerGraph == null) {\n      break;\n    }\n  } while (true);\n\n  return false;\n};\n\nLGraphManager.prototype.calcLowestCommonAncestors = function () {\n  var edge;\n  var sourceNode;\n  var targetNode;\n  var sourceAncestorGraph;\n  var targetAncestorGraph;\n\n  var edges = this.getAllEdges();\n  var s = edges.length;\n  for (var i = 0; i < s; i++) {\n    edge = edges[i];\n\n    sourceNode = edge.source;\n    targetNode = edge.target;\n    edge.lca = null;\n    edge.sourceInLca = sourceNode;\n    edge.targetInLca = targetNode;\n\n    if (sourceNode == targetNode) {\n      edge.lca = sourceNode.getOwner();\n      continue;\n    }\n\n    sourceAncestorGraph = sourceNode.getOwner();\n\n    while (edge.lca == null) {\n      edge.targetInLca = targetNode;\n      targetAncestorGraph = targetNode.getOwner();\n\n      while (edge.lca == null) {\n        if (targetAncestorGraph == sourceAncestorGraph) {\n          edge.lca = targetAncestorGraph;\n          break;\n        }\n\n        if (targetAncestorGraph == this.rootGraph) {\n          break;\n        }\n\n        if (edge.lca != null) {\n          throw \"assert failed\";\n        }\n        edge.targetInLca = targetAncestorGraph.getParent();\n        targetAncestorGraph = edge.targetInLca.getOwner();\n      }\n\n      if (sourceAncestorGraph == this.rootGraph) {\n        break;\n      }\n\n      if (edge.lca == null) {\n        edge.sourceInLca = sourceAncestorGraph.getParent();\n        sourceAncestorGraph = edge.sourceInLca.getOwner();\n      }\n    }\n\n    if (edge.lca == null) {\n      throw \"assert failed\";\n    }\n  }\n};\n\nLGraphManager.prototype.calcLowestCommonAncestor = function (firstNode, secondNode) {\n  if (firstNode == secondNode) {\n    return firstNode.getOwner();\n  }\n  var firstOwnerGraph = firstNode.getOwner();\n\n  do {\n    if (firstOwnerGraph == null) {\n      break;\n    }\n    var secondOwnerGraph = secondNode.getOwner();\n\n    do {\n      if (secondOwnerGraph == null) {\n        break;\n      }\n\n      if (secondOwnerGraph == firstOwnerGraph) {\n        return secondOwnerGraph;\n      }\n      secondOwnerGraph = secondOwnerGraph.getParent().getOwner();\n    } while (true);\n\n    firstOwnerGraph = firstOwnerGraph.getParent().getOwner();\n  } while (true);\n\n  return firstOwnerGraph;\n};\n\nLGraphManager.prototype.calcInclusionTreeDepths = function (graph, depth) {\n  if (graph == null && depth == null) {\n    graph = this.rootGraph;\n    depth = 1;\n  }\n  var node;\n\n  var nodes = graph.getNodes();\n  var s = nodes.length;\n  for (var i = 0; i < s; i++) {\n    node = nodes[i];\n    node.inclusionTreeDepth = depth;\n\n    if (node.child != null) {\n      this.calcInclusionTreeDepths(node.child, depth + 1);\n    }\n  }\n};\n\nLGraphManager.prototype.includesInvalidEdge = function () {\n  var edge;\n\n  var s = this.edges.length;\n  for (var i = 0; i < s; i++) {\n    edge = this.edges[i];\n\n    if (this.isOneAncestorOfOther(edge.source, edge.target)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = LGraphManager;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LayoutConstants = __webpack_require__(0);\n\nfunction FDLayoutConstants() {}\n\n//FDLayoutConstants inherits static props in LayoutConstants\nfor (var prop in LayoutConstants) {\n  FDLayoutConstants[prop] = LayoutConstants[prop];\n}\n\nFDLayoutConstants.MAX_ITERATIONS = 2500;\n\nFDLayoutConstants.DEFAULT_EDGE_LENGTH = 50;\nFDLayoutConstants.DEFAULT_SPRING_STRENGTH = 0.45;\nFDLayoutConstants.DEFAULT_REPULSION_STRENGTH = 4500.0;\nFDLayoutConstants.DEFAULT_GRAVITY_STRENGTH = 0.4;\nFDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = 1.0;\nFDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR = 3.8;\nFDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = 1.5;\nFDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION = true;\nFDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION = true;\nFDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = 0.3;\nFDLayoutConstants.COOLING_ADAPTATION_FACTOR = 0.33;\nFDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT = 1000;\nFDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT = 5000;\nFDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL = 100.0;\nFDLayoutConstants.MAX_NODE_DISPLACEMENT = FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL * 3;\nFDLayoutConstants.MIN_REPULSION_DIST = FDLayoutConstants.DEFAULT_EDGE_LENGTH / 10.0;\nFDLayoutConstants.CONVERGENCE_CHECK_PERIOD = 100;\nFDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = 0.1;\nFDLayoutConstants.MIN_EDGE_LENGTH = 1;\nFDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD = 10;\n\nmodule.exports = FDLayoutConstants;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * This class maintains a list of static geometry related utility methods.\n *\n *\n * Copyright: i-Vis Research Group, Bilkent University, 2007 - present\n */\n\nvar Point = __webpack_require__(12);\n\nfunction IGeometry() {}\n\n/**\n * This method calculates *half* the amount in x and y directions of the two\n * input rectangles needed to separate them keeping their respective\n * positioning, and returns the result in the input array. An input\n * separation buffer added to the amount in both directions. We assume that\n * the two rectangles do intersect.\n */\nIGeometry.calcSeparationAmount = function (rectA, rectB, overlapAmount, separationBuffer) {\n  if (!rectA.intersects(rectB)) {\n    throw \"assert failed\";\n  }\n\n  var directions = new Array(2);\n\n  this.decideDirectionsForOverlappingNodes(rectA, rectB, directions);\n\n  overlapAmount[0] = Math.min(rectA.getRight(), rectB.getRight()) - Math.max(rectA.x, rectB.x);\n  overlapAmount[1] = Math.min(rectA.getBottom(), rectB.getBottom()) - Math.max(rectA.y, rectB.y);\n\n  // update the overlapping amounts for the following cases:\n  if (rectA.getX() <= rectB.getX() && rectA.getRight() >= rectB.getRight()) {\n    /* Case x.1:\n    *\n    * rectA\n    * \t|                       |\n    * \t|        _________      |\n    * \t|        |       |      |\n    * \t|________|_______|______|\n    * \t\t\t |       |\n    *           |       |\n    *        rectB\n    */\n    overlapAmount[0] += Math.min(rectB.getX() - rectA.getX(), rectA.getRight() - rectB.getRight());\n  } else if (rectB.getX() <= rectA.getX() && rectB.getRight() >= rectA.getRight()) {\n    /* Case x.2:\n    *\n    * rectB\n    * \t|                       |\n    * \t|        _________      |\n    * \t|        |       |      |\n    * \t|________|_______|______|\n    * \t\t\t |       |\n    *           |       |\n    *        rectA\n    */\n    overlapAmount[0] += Math.min(rectA.getX() - rectB.getX(), rectB.getRight() - rectA.getRight());\n  }\n  if (rectA.getY() <= rectB.getY() && rectA.getBottom() >= rectB.getBottom()) {\n    /* Case y.1:\n     *          ________ rectA\n     *         |\n     *         |\n     *   ______|____  rectB\n     *         |    |\n     *         |    |\n     *   ______|____|\n     *         |\n     *         |\n     *         |________\n     *\n     */\n    overlapAmount[1] += Math.min(rectB.getY() - rectA.getY(), rectA.getBottom() - rectB.getBottom());\n  } else if (rectB.getY() <= rectA.getY() && rectB.getBottom() >= rectA.getBottom()) {\n    /* Case y.2:\n    *          ________ rectB\n    *         |\n    *         |\n    *   ______|____  rectA\n    *         |    |\n    *         |    |\n    *   ______|____|\n    *         |\n    *         |\n    *         |________\n    *\n    */\n    overlapAmount[1] += Math.min(rectA.getY() - rectB.getY(), rectB.getBottom() - rectA.getBottom());\n  }\n\n  // find slope of the line passes two centers\n  var slope = Math.abs((rectB.getCenterY() - rectA.getCenterY()) / (rectB.getCenterX() - rectA.getCenterX()));\n  // if centers are overlapped\n  if (rectB.getCenterY() === rectA.getCenterY() && rectB.getCenterX() === rectA.getCenterX()) {\n    // assume the slope is 1 (45 degree)\n    slope = 1.0;\n  }\n\n  var moveByY = slope * overlapAmount[0];\n  var moveByX = overlapAmount[1] / slope;\n  if (overlapAmount[0] < moveByX) {\n    moveByX = overlapAmount[0];\n  } else {\n    moveByY = overlapAmount[1];\n  }\n  // return half the amount so that if each rectangle is moved by these\n  // amounts in opposite directions, overlap will be resolved\n  overlapAmount[0] = -1 * directions[0] * (moveByX / 2 + separationBuffer);\n  overlapAmount[1] = -1 * directions[1] * (moveByY / 2 + separationBuffer);\n};\n\n/**\n * This method decides the separation direction of overlapping nodes\n *\n * if directions[0] = -1, then rectA goes left\n * if directions[0] = 1,  then rectA goes right\n * if directions[1] = -1, then rectA goes up\n * if directions[1] = 1,  then rectA goes down\n */\nIGeometry.decideDirectionsForOverlappingNodes = function (rectA, rectB, directions) {\n  if (rectA.getCenterX() < rectB.getCenterX()) {\n    directions[0] = -1;\n  } else {\n    directions[0] = 1;\n  }\n\n  if (rectA.getCenterY() < rectB.getCenterY()) {\n    directions[1] = -1;\n  } else {\n    directions[1] = 1;\n  }\n};\n\n/**\n * This method calculates the intersection (clipping) points of the two\n * input rectangles with line segment defined by the centers of these two\n * rectangles. The clipping points are saved in the input double array and\n * whether or not the two rectangles overlap is returned.\n */\nIGeometry.getIntersection2 = function (rectA, rectB, result) {\n  //result[0-1] will contain clipPoint of rectA, result[2-3] will contain clipPoint of rectB\n  var p1x = rectA.getCenterX();\n  var p1y = rectA.getCenterY();\n  var p2x = rectB.getCenterX();\n  var p2y = rectB.getCenterY();\n\n  //if two rectangles intersect, then clipping points are centers\n  if (rectA.intersects(rectB)) {\n    result[0] = p1x;\n    result[1] = p1y;\n    result[2] = p2x;\n    result[3] = p2y;\n    return true;\n  }\n  //variables for rectA\n  var topLeftAx = rectA.getX();\n  var topLeftAy = rectA.getY();\n  var topRightAx = rectA.getRight();\n  var bottomLeftAx = rectA.getX();\n  var bottomLeftAy = rectA.getBottom();\n  var bottomRightAx = rectA.getRight();\n  var halfWidthA = rectA.getWidthHalf();\n  var halfHeightA = rectA.getHeightHalf();\n  //variables for rectB\n  var topLeftBx = rectB.getX();\n  var topLeftBy = rectB.getY();\n  var topRightBx = rectB.getRight();\n  var bottomLeftBx = rectB.getX();\n  var bottomLeftBy = rectB.getBottom();\n  var bottomRightBx = rectB.getRight();\n  var halfWidthB = rectB.getWidthHalf();\n  var halfHeightB = rectB.getHeightHalf();\n\n  //flag whether clipping points are found\n  var clipPointAFound = false;\n  var clipPointBFound = false;\n\n  // line is vertical\n  if (p1x === p2x) {\n    if (p1y > p2y) {\n      result[0] = p1x;\n      result[1] = topLeftAy;\n      result[2] = p2x;\n      result[3] = bottomLeftBy;\n      return false;\n    } else if (p1y < p2y) {\n      result[0] = p1x;\n      result[1] = bottomLeftAy;\n      result[2] = p2x;\n      result[3] = topLeftBy;\n      return false;\n    } else {\n      //not line, return null;\n    }\n  }\n  // line is horizontal\n  else if (p1y === p2y) {\n      if (p1x > p2x) {\n        result[0] = topLeftAx;\n        result[1] = p1y;\n        result[2] = topRightBx;\n        result[3] = p2y;\n        return false;\n      } else if (p1x < p2x) {\n        result[0] = topRightAx;\n        result[1] = p1y;\n        result[2] = topLeftBx;\n        result[3] = p2y;\n        return false;\n      } else {\n        //not valid line, return null;\n      }\n    } else {\n      //slopes of rectA's and rectB's diagonals\n      var slopeA = rectA.height / rectA.width;\n      var slopeB = rectB.height / rectB.width;\n\n      //slope of line between center of rectA and center of rectB\n      var slopePrime = (p2y - p1y) / (p2x - p1x);\n      var cardinalDirectionA = void 0;\n      var cardinalDirectionB = void 0;\n      var tempPointAx = void 0;\n      var tempPointAy = void 0;\n      var tempPointBx = void 0;\n      var tempPointBy = void 0;\n\n      //determine whether clipping point is the corner of nodeA\n      if (-slopeA === slopePrime) {\n        if (p1x > p2x) {\n          result[0] = bottomLeftAx;\n          result[1] = bottomLeftAy;\n          clipPointAFound = true;\n        } else {\n          result[0] = topRightAx;\n          result[1] = topLeftAy;\n          clipPointAFound = true;\n        }\n      } else if (slopeA === slopePrime) {\n        if (p1x > p2x) {\n          result[0] = topLeftAx;\n          result[1] = topLeftAy;\n          clipPointAFound = true;\n        } else {\n          result[0] = bottomRightAx;\n          result[1] = bottomLeftAy;\n          clipPointAFound = true;\n        }\n      }\n\n      //determine whether clipping point is the corner of nodeB\n      if (-slopeB === slopePrime) {\n        if (p2x > p1x) {\n          result[2] = bottomLeftBx;\n          result[3] = bottomLeftBy;\n          clipPointBFound = true;\n        } else {\n          result[2] = topRightBx;\n          result[3] = topLeftBy;\n          clipPointBFound = true;\n        }\n      } else if (slopeB === slopePrime) {\n        if (p2x > p1x) {\n          result[2] = topLeftBx;\n          result[3] = topLeftBy;\n          clipPointBFound = true;\n        } else {\n          result[2] = bottomRightBx;\n          result[3] = bottomLeftBy;\n          clipPointBFound = true;\n        }\n      }\n\n      //if both clipping points are corners\n      if (clipPointAFound && clipPointBFound) {\n        return false;\n      }\n\n      //determine Cardinal Direction of rectangles\n      if (p1x > p2x) {\n        if (p1y > p2y) {\n          cardinalDirectionA = this.getCardinalDirection(slopeA, slopePrime, 4);\n          cardinalDirectionB = this.getCardinalDirection(slopeB, slopePrime, 2);\n        } else {\n          cardinalDirectionA = this.getCardinalDirection(-slopeA, slopePrime, 3);\n          cardinalDirectionB = this.getCardinalDirection(-slopeB, slopePrime, 1);\n        }\n      } else {\n        if (p1y > p2y) {\n          cardinalDirectionA = this.getCardinalDirection(-slopeA, slopePrime, 1);\n          cardinalDirectionB = this.getCardinalDirection(-slopeB, slopePrime, 3);\n        } else {\n          cardinalDirectionA = this.getCardinalDirection(slopeA, slopePrime, 2);\n          cardinalDirectionB = this.getCardinalDirection(slopeB, slopePrime, 4);\n        }\n      }\n      //calculate clipping Point if it is not found before\n      if (!clipPointAFound) {\n        switch (cardinalDirectionA) {\n          case 1:\n            tempPointAy = topLeftAy;\n            tempPointAx = p1x + -halfHeightA / slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 2:\n            tempPointAx = bottomRightAx;\n            tempPointAy = p1y + halfWidthA * slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 3:\n            tempPointAy = bottomLeftAy;\n            tempPointAx = p1x + halfHeightA / slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 4:\n            tempPointAx = bottomLeftAx;\n            tempPointAy = p1y + -halfWidthA * slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n        }\n      }\n      if (!clipPointBFound) {\n        switch (cardinalDirectionB) {\n          case 1:\n            tempPointBy = topLeftBy;\n            tempPointBx = p2x + -halfHeightB / slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 2:\n            tempPointBx = bottomRightBx;\n            tempPointBy = p2y + halfWidthB * slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 3:\n            tempPointBy = bottomLeftBy;\n            tempPointBx = p2x + halfHeightB / slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 4:\n            tempPointBx = bottomLeftBx;\n            tempPointBy = p2y + -halfWidthB * slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n        }\n      }\n    }\n  return false;\n};\n\n/**\n * This method returns in which cardinal direction does input point stays\n * 1: North\n * 2: East\n * 3: South\n * 4: West\n */\nIGeometry.getCardinalDirection = function (slope, slopePrime, line) {\n  if (slope > slopePrime) {\n    return line;\n  } else {\n    return 1 + line % 4;\n  }\n};\n\n/**\n * This method calculates the intersection of the two lines defined by\n * point pairs (s1,s2) and (f1,f2).\n */\nIGeometry.getIntersection = function (s1, s2, f1, f2) {\n  if (f2 == null) {\n    return this.getIntersection2(s1, s2, f1);\n  }\n\n  var x1 = s1.x;\n  var y1 = s1.y;\n  var x2 = s2.x;\n  var y2 = s2.y;\n  var x3 = f1.x;\n  var y3 = f1.y;\n  var x4 = f2.x;\n  var y4 = f2.y;\n  var x = void 0,\n      y = void 0; // intersection point\n  var a1 = void 0,\n      a2 = void 0,\n      b1 = void 0,\n      b2 = void 0,\n      c1 = void 0,\n      c2 = void 0; // coefficients of line eqns.\n  var denom = void 0;\n\n  a1 = y2 - y1;\n  b1 = x1 - x2;\n  c1 = x2 * y1 - x1 * y2; // { a1*x + b1*y + c1 = 0 is line 1 }\n\n  a2 = y4 - y3;\n  b2 = x3 - x4;\n  c2 = x4 * y3 - x3 * y4; // { a2*x + b2*y + c2 = 0 is line 2 }\n\n  denom = a1 * b2 - a2 * b1;\n\n  if (denom === 0) {\n    return null;\n  }\n\n  x = (b1 * c2 - b2 * c1) / denom;\n  y = (a2 * c1 - a1 * c2) / denom;\n\n  return new Point(x, y);\n};\n\n/**\n * This method finds and returns the angle of the vector from the + x-axis\n * in clockwise direction (compatible w/ Java coordinate system!).\n */\nIGeometry.angleOfVector = function (Cx, Cy, Nx, Ny) {\n  var C_angle = void 0;\n\n  if (Cx !== Nx) {\n    C_angle = Math.atan((Ny - Cy) / (Nx - Cx));\n\n    if (Nx < Cx) {\n      C_angle += Math.PI;\n    } else if (Ny < Cy) {\n      C_angle += this.TWO_PI;\n    }\n  } else if (Ny < Cy) {\n    C_angle = this.ONE_AND_HALF_PI; // 270 degrees\n  } else {\n    C_angle = this.HALF_PI; // 90 degrees\n  }\n\n  return C_angle;\n};\n\n/**\n * This method checks whether the given two line segments (one with point\n * p1 and p2, the other with point p3 and p4) intersect at a point other\n * than these points.\n */\nIGeometry.doIntersect = function (p1, p2, p3, p4) {\n  var a = p1.x;\n  var b = p1.y;\n  var c = p2.x;\n  var d = p2.y;\n  var p = p3.x;\n  var q = p3.y;\n  var r = p4.x;\n  var s = p4.y;\n  var det = (c - a) * (s - q) - (r - p) * (d - b);\n\n  if (det === 0) {\n    return false;\n  } else {\n    var lambda = ((s - q) * (r - a) + (p - r) * (s - b)) / det;\n    var gamma = ((b - d) * (r - a) + (c - a) * (s - b)) / det;\n    return 0 < lambda && lambda < 1 && 0 < gamma && gamma < 1;\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Section: Class Constants\n// -----------------------------------------------------------------------------\n/**\n * Some useful pre-calculated constants\n */\nIGeometry.HALF_PI = 0.5 * Math.PI;\nIGeometry.ONE_AND_HALF_PI = 1.5 * Math.PI;\nIGeometry.TWO_PI = 2.0 * Math.PI;\nIGeometry.THREE_PI = 3.0 * Math.PI;\n\nmodule.exports = IGeometry;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction IMath() {}\n\n/**\n * This method returns the sign of the input value.\n */\nIMath.sign = function (value) {\n  if (value > 0) {\n    return 1;\n  } else if (value < 0) {\n    return -1;\n  } else {\n    return 0;\n  }\n};\n\nIMath.floor = function (value) {\n  return value < 0 ? Math.ceil(value) : Math.floor(value);\n};\n\nIMath.ceil = function (value) {\n  return value < 0 ? Math.floor(value) : Math.ceil(value);\n};\n\nmodule.exports = IMath;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction Integer() {}\n\nInteger.MAX_VALUE = 2147483647;\nInteger.MIN_VALUE = -2147483648;\n\nmodule.exports = Integer;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar nodeFrom = function nodeFrom(value) {\n  return { value: value, next: null, prev: null };\n};\n\nvar add = function add(prev, node, next, list) {\n  if (prev !== null) {\n    prev.next = node;\n  } else {\n    list.head = node;\n  }\n\n  if (next !== null) {\n    next.prev = node;\n  } else {\n    list.tail = node;\n  }\n\n  node.prev = prev;\n  node.next = next;\n\n  list.length++;\n\n  return node;\n};\n\nvar _remove = function _remove(node, list) {\n  var prev = node.prev,\n      next = node.next;\n\n\n  if (prev !== null) {\n    prev.next = next;\n  } else {\n    list.head = next;\n  }\n\n  if (next !== null) {\n    next.prev = prev;\n  } else {\n    list.tail = prev;\n  }\n\n  node.prev = node.next = null;\n\n  list.length--;\n\n  return node;\n};\n\nvar LinkedList = function () {\n  function LinkedList(vals) {\n    var _this = this;\n\n    _classCallCheck(this, LinkedList);\n\n    this.length = 0;\n    this.head = null;\n    this.tail = null;\n\n    if (vals != null) {\n      vals.forEach(function (v) {\n        return _this.push(v);\n      });\n    }\n  }\n\n  _createClass(LinkedList, [{\n    key: \"size\",\n    value: function size() {\n      return this.length;\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(val, otherNode) {\n      return add(otherNode.prev, nodeFrom(val), otherNode, this);\n    }\n  }, {\n    key: \"insertAfter\",\n    value: function insertAfter(val, otherNode) {\n      return add(otherNode, nodeFrom(val), otherNode.next, this);\n    }\n  }, {\n    key: \"insertNodeBefore\",\n    value: function insertNodeBefore(newNode, otherNode) {\n      return add(otherNode.prev, newNode, otherNode, this);\n    }\n  }, {\n    key: \"insertNodeAfter\",\n    value: function insertNodeAfter(newNode, otherNode) {\n      return add(otherNode, newNode, otherNode.next, this);\n    }\n  }, {\n    key: \"push\",\n    value: function push(val) {\n      return add(this.tail, nodeFrom(val), null, this);\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(val) {\n      return add(null, nodeFrom(val), this.head, this);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(node) {\n      return _remove(node, this);\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      return _remove(this.tail, this).value;\n    }\n  }, {\n    key: \"popNode\",\n    value: function popNode() {\n      return _remove(this.tail, this);\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      return _remove(this.head, this).value;\n    }\n  }, {\n    key: \"shiftNode\",\n    value: function shiftNode() {\n      return _remove(this.head, this);\n    }\n  }, {\n    key: \"get_object_at\",\n    value: function get_object_at(index) {\n      if (index <= this.length()) {\n        var i = 1;\n        var current = this.head;\n        while (i < index) {\n          current = current.next;\n          i++;\n        }\n        return current.value;\n      }\n    }\n  }, {\n    key: \"set_object_at\",\n    value: function set_object_at(index, value) {\n      if (index <= this.length()) {\n        var i = 1;\n        var current = this.head;\n        while (i < index) {\n          current = current.next;\n          i++;\n        }\n        current.value = value;\n      }\n    }\n  }]);\n\n  return LinkedList;\n}();\n\nmodule.exports = LinkedList;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*\r\n *This class is the javascript implementation of the Point.java class in jdk\r\n */\nfunction Point(x, y, p) {\n  this.x = null;\n  this.y = null;\n  if (x == null && y == null && p == null) {\n    this.x = 0;\n    this.y = 0;\n  } else if (typeof x == 'number' && typeof y == 'number' && p == null) {\n    this.x = x;\n    this.y = y;\n  } else if (x.constructor.name == 'Point' && y == null && p == null) {\n    p = x;\n    this.x = p.x;\n    this.y = p.y;\n  }\n}\n\nPoint.prototype.getX = function () {\n  return this.x;\n};\n\nPoint.prototype.getY = function () {\n  return this.y;\n};\n\nPoint.prototype.getLocation = function () {\n  return new Point(this.x, this.y);\n};\n\nPoint.prototype.setLocation = function (x, y, p) {\n  if (x.constructor.name == 'Point' && y == null && p == null) {\n    p = x;\n    this.setLocation(p.x, p.y);\n  } else if (typeof x == 'number' && typeof y == 'number' && p == null) {\n    //if both parameters are integer just move (x,y) location\n    if (parseInt(x) == x && parseInt(y) == y) {\n      this.move(x, y);\n    } else {\n      this.x = Math.floor(x + 0.5);\n      this.y = Math.floor(y + 0.5);\n    }\n  }\n};\n\nPoint.prototype.move = function (x, y) {\n  this.x = x;\n  this.y = y;\n};\n\nPoint.prototype.translate = function (dx, dy) {\n  this.x += dx;\n  this.y += dy;\n};\n\nPoint.prototype.equals = function (obj) {\n  if (obj.constructor.name == \"Point\") {\n    var pt = obj;\n    return this.x == pt.x && this.y == pt.y;\n  }\n  return this == obj;\n};\n\nPoint.prototype.toString = function () {\n  return new Point().constructor.name + \"[x=\" + this.x + \",y=\" + this.y + \"]\";\n};\n\nmodule.exports = Point;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction RectangleD(x, y, width, height) {\n  this.x = 0;\n  this.y = 0;\n  this.width = 0;\n  this.height = 0;\n\n  if (x != null && y != null && width != null && height != null) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n}\n\nRectangleD.prototype.getX = function () {\n  return this.x;\n};\n\nRectangleD.prototype.setX = function (x) {\n  this.x = x;\n};\n\nRectangleD.prototype.getY = function () {\n  return this.y;\n};\n\nRectangleD.prototype.setY = function (y) {\n  this.y = y;\n};\n\nRectangleD.prototype.getWidth = function () {\n  return this.width;\n};\n\nRectangleD.prototype.setWidth = function (width) {\n  this.width = width;\n};\n\nRectangleD.prototype.getHeight = function () {\n  return this.height;\n};\n\nRectangleD.prototype.setHeight = function (height) {\n  this.height = height;\n};\n\nRectangleD.prototype.getRight = function () {\n  return this.x + this.width;\n};\n\nRectangleD.prototype.getBottom = function () {\n  return this.y + this.height;\n};\n\nRectangleD.prototype.intersects = function (a) {\n  if (this.getRight() < a.x) {\n    return false;\n  }\n\n  if (this.getBottom() < a.y) {\n    return false;\n  }\n\n  if (a.getRight() < this.x) {\n    return false;\n  }\n\n  if (a.getBottom() < this.y) {\n    return false;\n  }\n\n  return true;\n};\n\nRectangleD.prototype.getCenterX = function () {\n  return this.x + this.width / 2;\n};\n\nRectangleD.prototype.getMinX = function () {\n  return this.getX();\n};\n\nRectangleD.prototype.getMaxX = function () {\n  return this.getX() + this.width;\n};\n\nRectangleD.prototype.getCenterY = function () {\n  return this.y + this.height / 2;\n};\n\nRectangleD.prototype.getMinY = function () {\n  return this.getY();\n};\n\nRectangleD.prototype.getMaxY = function () {\n  return this.getY() + this.height;\n};\n\nRectangleD.prototype.getWidthHalf = function () {\n  return this.width / 2;\n};\n\nRectangleD.prototype.getHeightHalf = function () {\n  return this.height / 2;\n};\n\nmodule.exports = RectangleD;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction UniqueIDGeneretor() {}\n\nUniqueIDGeneretor.lastID = 0;\n\nUniqueIDGeneretor.createID = function (obj) {\n  if (UniqueIDGeneretor.isPrimitive(obj)) {\n    return obj;\n  }\n  if (obj.uniqueID != null) {\n    return obj.uniqueID;\n  }\n  obj.uniqueID = UniqueIDGeneretor.getString();\n  UniqueIDGeneretor.lastID++;\n  return obj.uniqueID;\n};\n\nUniqueIDGeneretor.getString = function (id) {\n  if (id == null) id = UniqueIDGeneretor.lastID;\n  return \"Object#\" + id + \"\";\n};\n\nUniqueIDGeneretor.isPrimitive = function (arg) {\n  var type = typeof arg === \"undefined\" ? \"undefined\" : _typeof(arg);\n  return arg == null || type != \"object\" && type != \"function\";\n};\n\nmodule.exports = UniqueIDGeneretor;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar LayoutConstants = __webpack_require__(0);\nvar LGraphManager = __webpack_require__(6);\nvar LNode = __webpack_require__(3);\nvar LEdge = __webpack_require__(1);\nvar LGraph = __webpack_require__(5);\nvar PointD = __webpack_require__(4);\nvar Transform = __webpack_require__(17);\nvar Emitter = __webpack_require__(27);\n\nfunction Layout(isRemoteUse) {\n  Emitter.call(this);\n\n  //Layout Quality: 0:draft, 1:default, 2:proof\n  this.layoutQuality = LayoutConstants.QUALITY;\n  //Whether layout should create bendpoints as needed or not\n  this.createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n  //Whether layout should be incremental or not\n  this.incremental = LayoutConstants.DEFAULT_INCREMENTAL;\n  //Whether we animate from before to after layout node positions\n  this.animationOnLayout = LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;\n  //Whether we animate the layout process or not\n  this.animationDuringLayout = LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;\n  //Number iterations that should be done between two successive animations\n  this.animationPeriod = LayoutConstants.DEFAULT_ANIMATION_PERIOD;\n  /**\r\n   * Whether or not leaf nodes (non-compound nodes) are of uniform sizes. When\r\n   * they are, both spring and repulsion forces between two leaf nodes can be\r\n   * calculated without the expensive clipping point calculations, resulting\r\n   * in major speed-up.\r\n   */\n  this.uniformLeafNodeSizes = LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;\n  /**\r\n   * This is used for creation of bendpoints by using dummy nodes and edges.\r\n   * Maps an LEdge to its dummy bendpoint path.\r\n   */\n  this.edgeToDummyNodes = new Map();\n  this.graphManager = new LGraphManager(this);\n  this.isLayoutFinished = false;\n  this.isSubLayout = false;\n  this.isRemoteUse = false;\n\n  if (isRemoteUse != null) {\n    this.isRemoteUse = isRemoteUse;\n  }\n}\n\nLayout.RANDOM_SEED = 1;\n\nLayout.prototype = Object.create(Emitter.prototype);\n\nLayout.prototype.getGraphManager = function () {\n  return this.graphManager;\n};\n\nLayout.prototype.getAllNodes = function () {\n  return this.graphManager.getAllNodes();\n};\n\nLayout.prototype.getAllEdges = function () {\n  return this.graphManager.getAllEdges();\n};\n\nLayout.prototype.getAllNodesToApplyGravitation = function () {\n  return this.graphManager.getAllNodesToApplyGravitation();\n};\n\nLayout.prototype.newGraphManager = function () {\n  var gm = new LGraphManager(this);\n  this.graphManager = gm;\n  return gm;\n};\n\nLayout.prototype.newGraph = function (vGraph) {\n  return new LGraph(null, this.graphManager, vGraph);\n};\n\nLayout.prototype.newNode = function (vNode) {\n  return new LNode(this.graphManager, vNode);\n};\n\nLayout.prototype.newEdge = function (vEdge) {\n  return new LEdge(null, null, vEdge);\n};\n\nLayout.prototype.checkLayoutSuccess = function () {\n  return this.graphManager.getRoot() == null || this.graphManager.getRoot().getNodes().length == 0 || this.graphManager.includesInvalidEdge();\n};\n\nLayout.prototype.runLayout = function () {\n  this.isLayoutFinished = false;\n\n  if (this.tilingPreLayout) {\n    this.tilingPreLayout();\n  }\n\n  this.initParameters();\n  var isLayoutSuccessfull;\n\n  if (this.checkLayoutSuccess()) {\n    isLayoutSuccessfull = false;\n  } else {\n    isLayoutSuccessfull = this.layout();\n  }\n\n  if (LayoutConstants.ANIMATE === 'during') {\n    // If this is a 'during' layout animation. Layout is not finished yet. \n    // We need to perform these in index.js when layout is really finished.\n    return false;\n  }\n\n  if (isLayoutSuccessfull) {\n    if (!this.isSubLayout) {\n      this.doPostLayout();\n    }\n  }\n\n  if (this.tilingPostLayout) {\n    this.tilingPostLayout();\n  }\n\n  this.isLayoutFinished = true;\n\n  return isLayoutSuccessfull;\n};\n\n/**\r\n * This method performs the operations required after layout.\r\n */\nLayout.prototype.doPostLayout = function () {\n  //assert !isSubLayout : \"Should not be called on sub-layout!\";\n  // Propagate geometric changes to v-level objects\n  if (!this.incremental) {\n    this.transform();\n  }\n  this.update();\n};\n\n/**\r\n * This method updates the geometry of the target graph according to\r\n * calculated layout.\r\n */\nLayout.prototype.update2 = function () {\n  // update bend points\n  if (this.createBendsAsNeeded) {\n    this.createBendpointsFromDummyNodes();\n\n    // reset all edges, since the topology has changed\n    this.graphManager.resetAllEdges();\n  }\n\n  // perform edge, node and root updates if layout is not called\n  // remotely\n  if (!this.isRemoteUse) {\n    // update all edges\n    var edge;\n    var allEdges = this.graphManager.getAllEdges();\n    for (var i = 0; i < allEdges.length; i++) {\n      edge = allEdges[i];\n      //      this.update(edge);\n    }\n\n    // recursively update nodes\n    var node;\n    var nodes = this.graphManager.getRoot().getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      node = nodes[i];\n      //      this.update(node);\n    }\n\n    // update root graph\n    this.update(this.graphManager.getRoot());\n  }\n};\n\nLayout.prototype.update = function (obj) {\n  if (obj == null) {\n    this.update2();\n  } else if (obj instanceof LNode) {\n    var node = obj;\n    if (node.getChild() != null) {\n      // since node is compound, recursively update child nodes\n      var nodes = node.getChild().getNodes();\n      for (var i = 0; i < nodes.length; i++) {\n        update(nodes[i]);\n      }\n    }\n\n    // if the l-level node is associated with a v-level graph object,\n    // then it is assumed that the v-level node implements the\n    // interface Updatable.\n    if (node.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vNode = node.vGraphObject;\n\n      // call the update method of the interface\n      vNode.update(node);\n    }\n  } else if (obj instanceof LEdge) {\n    var edge = obj;\n    // if the l-level edge is associated with a v-level graph object,\n    // then it is assumed that the v-level edge implements the\n    // interface Updatable.\n\n    if (edge.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vEdge = edge.vGraphObject;\n\n      // call the update method of the interface\n      vEdge.update(edge);\n    }\n  } else if (obj instanceof LGraph) {\n    var graph = obj;\n    // if the l-level graph is associated with a v-level graph object,\n    // then it is assumed that the v-level object implements the\n    // interface Updatable.\n\n    if (graph.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vGraph = graph.vGraphObject;\n\n      // call the update method of the interface\n      vGraph.update(graph);\n    }\n  }\n};\n\n/**\r\n * This method is used to set all layout parameters to default values\r\n * determined at compile time.\r\n */\nLayout.prototype.initParameters = function () {\n  if (!this.isSubLayout) {\n    this.layoutQuality = LayoutConstants.QUALITY;\n    this.animationDuringLayout = LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;\n    this.animationPeriod = LayoutConstants.DEFAULT_ANIMATION_PERIOD;\n    this.animationOnLayout = LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;\n    this.incremental = LayoutConstants.DEFAULT_INCREMENTAL;\n    this.createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n    this.uniformLeafNodeSizes = LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;\n  }\n\n  if (this.animationDuringLayout) {\n    this.animationOnLayout = false;\n  }\n};\n\nLayout.prototype.transform = function (newLeftTop) {\n  if (newLeftTop == undefined) {\n    this.transform(new PointD(0, 0));\n  } else {\n    // create a transformation object (from Eclipse to layout). When an\n    // inverse transform is applied, we get upper-left coordinate of the\n    // drawing or the root graph at given input coordinate (some margins\n    // already included in calculation of left-top).\n\n    var trans = new Transform();\n    var leftTop = this.graphManager.getRoot().updateLeftTop();\n\n    if (leftTop != null) {\n      trans.setWorldOrgX(newLeftTop.x);\n      trans.setWorldOrgY(newLeftTop.y);\n\n      trans.setDeviceOrgX(leftTop.x);\n      trans.setDeviceOrgY(leftTop.y);\n\n      var nodes = this.getAllNodes();\n      var node;\n\n      for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        node.transform(trans);\n      }\n    }\n  }\n};\n\nLayout.prototype.positionNodesRandomly = function (graph) {\n\n  if (graph == undefined) {\n    //assert !this.incremental;\n    this.positionNodesRandomly(this.getGraphManager().getRoot());\n    this.getGraphManager().getRoot().updateBounds(true);\n  } else {\n    var lNode;\n    var childGraph;\n\n    var nodes = graph.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      lNode = nodes[i];\n      childGraph = lNode.getChild();\n\n      if (childGraph == null) {\n        lNode.scatter();\n      } else if (childGraph.getNodes().length == 0) {\n        lNode.scatter();\n      } else {\n        this.positionNodesRandomly(childGraph);\n        lNode.updateBounds();\n      }\n    }\n  }\n};\n\n/**\r\n * This method returns a list of trees where each tree is represented as a\r\n * list of l-nodes. The method returns a list of size 0 when:\r\n * - The graph is not flat or\r\n * - One of the component(s) of the graph is not a tree.\r\n */\nLayout.prototype.getFlatForest = function () {\n  var flatForest = [];\n  var isForest = true;\n\n  // Quick reference for all nodes in the graph manager associated with\n  // this layout. The list should not be changed.\n  var allNodes = this.graphManager.getRoot().getNodes();\n\n  // First be sure that the graph is flat\n  var isFlat = true;\n\n  for (var i = 0; i < allNodes.length; i++) {\n    if (allNodes[i].getChild() != null) {\n      isFlat = false;\n    }\n  }\n\n  // Return empty forest if the graph is not flat.\n  if (!isFlat) {\n    return flatForest;\n  }\n\n  // Run BFS for each component of the graph.\n\n  var visited = new Set();\n  var toBeVisited = [];\n  var parents = new Map();\n  var unProcessedNodes = [];\n\n  unProcessedNodes = unProcessedNodes.concat(allNodes);\n\n  // Each iteration of this loop finds a component of the graph and\n  // decides whether it is a tree or not. If it is a tree, adds it to the\n  // forest and continued with the next component.\n\n  while (unProcessedNodes.length > 0 && isForest) {\n    toBeVisited.push(unProcessedNodes[0]);\n\n    // Start the BFS. Each iteration of this loop visits a node in a\n    // BFS manner.\n    while (toBeVisited.length > 0 && isForest) {\n      //pool operation\n      var currentNode = toBeVisited[0];\n      toBeVisited.splice(0, 1);\n      visited.add(currentNode);\n\n      // Traverse all neighbors of this node\n      var neighborEdges = currentNode.getEdges();\n\n      for (var i = 0; i < neighborEdges.length; i++) {\n        var currentNeighbor = neighborEdges[i].getOtherEnd(currentNode);\n\n        // If BFS is not growing from this neighbor.\n        if (parents.get(currentNode) != currentNeighbor) {\n          // We haven't previously visited this neighbor.\n          if (!visited.has(currentNeighbor)) {\n            toBeVisited.push(currentNeighbor);\n            parents.set(currentNeighbor, currentNode);\n          }\n          // Since we have previously visited this neighbor and\n          // this neighbor is not parent of currentNode, given\n          // graph contains a component that is not tree, hence\n          // it is not a forest.\n          else {\n              isForest = false;\n              break;\n            }\n        }\n      }\n    }\n\n    // The graph contains a component that is not a tree. Empty\n    // previously found trees. The method will end.\n    if (!isForest) {\n      flatForest = [];\n    }\n    // Save currently visited nodes as a tree in our forest. Reset\n    // visited and parents lists. Continue with the next component of\n    // the graph, if any.\n    else {\n        var temp = [].concat(_toConsumableArray(visited));\n        flatForest.push(temp);\n        //flatForest = flatForest.concat(temp);\n        //unProcessedNodes.removeAll(visited);\n        for (var i = 0; i < temp.length; i++) {\n          var value = temp[i];\n          var index = unProcessedNodes.indexOf(value);\n          if (index > -1) {\n            unProcessedNodes.splice(index, 1);\n          }\n        }\n        visited = new Set();\n        parents = new Map();\n      }\n  }\n\n  return flatForest;\n};\n\n/**\r\n * This method creates dummy nodes (an l-level node with minimal dimensions)\r\n * for the given edge (one per bendpoint). The existing l-level structure\r\n * is updated accordingly.\r\n */\nLayout.prototype.createDummyNodesForBendpoints = function (edge) {\n  var dummyNodes = [];\n  var prev = edge.source;\n\n  var graph = this.graphManager.calcLowestCommonAncestor(edge.source, edge.target);\n\n  for (var i = 0; i < edge.bendpoints.length; i++) {\n    // create new dummy node\n    var dummyNode = this.newNode(null);\n    dummyNode.setRect(new Point(0, 0), new Dimension(1, 1));\n\n    graph.add(dummyNode);\n\n    // create new dummy edge between prev and dummy node\n    var dummyEdge = this.newEdge(null);\n    this.graphManager.add(dummyEdge, prev, dummyNode);\n\n    dummyNodes.add(dummyNode);\n    prev = dummyNode;\n  }\n\n  var dummyEdge = this.newEdge(null);\n  this.graphManager.add(dummyEdge, prev, edge.target);\n\n  this.edgeToDummyNodes.set(edge, dummyNodes);\n\n  // remove real edge from graph manager if it is inter-graph\n  if (edge.isInterGraph()) {\n    this.graphManager.remove(edge);\n  }\n  // else, remove the edge from the current graph\n  else {\n      graph.remove(edge);\n    }\n\n  return dummyNodes;\n};\n\n/**\r\n * This method creates bendpoints for edges from the dummy nodes\r\n * at l-level.\r\n */\nLayout.prototype.createBendpointsFromDummyNodes = function () {\n  var edges = [];\n  edges = edges.concat(this.graphManager.getAllEdges());\n  edges = [].concat(_toConsumableArray(this.edgeToDummyNodes.keys())).concat(edges);\n\n  for (var k = 0; k < edges.length; k++) {\n    var lEdge = edges[k];\n\n    if (lEdge.bendpoints.length > 0) {\n      var path = this.edgeToDummyNodes.get(lEdge);\n\n      for (var i = 0; i < path.length; i++) {\n        var dummyNode = path[i];\n        var p = new PointD(dummyNode.getCenterX(), dummyNode.getCenterY());\n\n        // update bendpoint's location according to dummy node\n        var ebp = lEdge.bendpoints.get(i);\n        ebp.x = p.x;\n        ebp.y = p.y;\n\n        // remove the dummy node, dummy edges incident with this\n        // dummy node is also removed (within the remove method)\n        dummyNode.getOwner().remove(dummyNode);\n      }\n\n      // add the real edge to graph\n      this.graphManager.add(lEdge, lEdge.source, lEdge.target);\n    }\n  }\n};\n\nLayout.transform = function (sliderValue, defaultValue, minDiv, maxMul) {\n  if (minDiv != undefined && maxMul != undefined) {\n    var value = defaultValue;\n\n    if (sliderValue <= 50) {\n      var minValue = defaultValue / minDiv;\n      value -= (defaultValue - minValue) / 50 * (50 - sliderValue);\n    } else {\n      var maxValue = defaultValue * maxMul;\n      value += (maxValue - defaultValue) / 50 * (sliderValue - 50);\n    }\n\n    return value;\n  } else {\n    var a, b;\n\n    if (sliderValue <= 50) {\n      a = 9.0 * defaultValue / 500.0;\n      b = defaultValue / 10.0;\n    } else {\n      a = 9.0 * defaultValue / 50.0;\n      b = -8 * defaultValue;\n    }\n\n    return a * sliderValue + b;\n  }\n};\n\n/**\r\n * This method finds and returns the center of the given nodes, assuming\r\n * that the given nodes form a tree in themselves.\r\n */\nLayout.findCenterOfTree = function (nodes) {\n  var list = [];\n  list = list.concat(nodes);\n\n  var removedNodes = [];\n  var remainingDegrees = new Map();\n  var foundCenter = false;\n  var centerNode = null;\n\n  if (list.length == 1 || list.length == 2) {\n    foundCenter = true;\n    centerNode = list[0];\n  }\n\n  for (var i = 0; i < list.length; i++) {\n    var node = list[i];\n    var degree = node.getNeighborsList().size;\n    remainingDegrees.set(node, node.getNeighborsList().size);\n\n    if (degree == 1) {\n      removedNodes.push(node);\n    }\n  }\n\n  var tempList = [];\n  tempList = tempList.concat(removedNodes);\n\n  while (!foundCenter) {\n    var tempList2 = [];\n    tempList2 = tempList2.concat(tempList);\n    tempList = [];\n\n    for (var i = 0; i < list.length; i++) {\n      var node = list[i];\n\n      var index = list.indexOf(node);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n\n      var neighbours = node.getNeighborsList();\n\n      neighbours.forEach(function (neighbour) {\n        if (removedNodes.indexOf(neighbour) < 0) {\n          var otherDegree = remainingDegrees.get(neighbour);\n          var newDegree = otherDegree - 1;\n\n          if (newDegree == 1) {\n            tempList.push(neighbour);\n          }\n\n          remainingDegrees.set(neighbour, newDegree);\n        }\n      });\n    }\n\n    removedNodes = removedNodes.concat(tempList);\n\n    if (list.length == 1 || list.length == 2) {\n      foundCenter = true;\n      centerNode = list[0];\n    }\n  }\n\n  return centerNode;\n};\n\n/**\r\n * During the coarsening process, this layout may be referenced by two graph managers\r\n * this setter function grants access to change the currently being used graph manager\r\n */\nLayout.prototype.setGraphManager = function (gm) {\n  this.graphManager = gm;\n};\n\nmodule.exports = Layout;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction RandomSeed() {}\n// adapted from: https://stackoverflow.com/a/19303725\nRandomSeed.seed = 1;\nRandomSeed.x = 0;\n\nRandomSeed.nextDouble = function () {\n  RandomSeed.x = Math.sin(RandomSeed.seed++) * 10000;\n  return RandomSeed.x - Math.floor(RandomSeed.x);\n};\n\nmodule.exports = RandomSeed;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar PointD = __webpack_require__(4);\n\nfunction Transform(x, y) {\n  this.lworldOrgX = 0.0;\n  this.lworldOrgY = 0.0;\n  this.ldeviceOrgX = 0.0;\n  this.ldeviceOrgY = 0.0;\n  this.lworldExtX = 1.0;\n  this.lworldExtY = 1.0;\n  this.ldeviceExtX = 1.0;\n  this.ldeviceExtY = 1.0;\n}\n\nTransform.prototype.getWorldOrgX = function () {\n  return this.lworldOrgX;\n};\n\nTransform.prototype.setWorldOrgX = function (wox) {\n  this.lworldOrgX = wox;\n};\n\nTransform.prototype.getWorldOrgY = function () {\n  return this.lworldOrgY;\n};\n\nTransform.prototype.setWorldOrgY = function (woy) {\n  this.lworldOrgY = woy;\n};\n\nTransform.prototype.getWorldExtX = function () {\n  return this.lworldExtX;\n};\n\nTransform.prototype.setWorldExtX = function (wex) {\n  this.lworldExtX = wex;\n};\n\nTransform.prototype.getWorldExtY = function () {\n  return this.lworldExtY;\n};\n\nTransform.prototype.setWorldExtY = function (wey) {\n  this.lworldExtY = wey;\n};\n\n/* Device related */\n\nTransform.prototype.getDeviceOrgX = function () {\n  return this.ldeviceOrgX;\n};\n\nTransform.prototype.setDeviceOrgX = function (dox) {\n  this.ldeviceOrgX = dox;\n};\n\nTransform.prototype.getDeviceOrgY = function () {\n  return this.ldeviceOrgY;\n};\n\nTransform.prototype.setDeviceOrgY = function (doy) {\n  this.ldeviceOrgY = doy;\n};\n\nTransform.prototype.getDeviceExtX = function () {\n  return this.ldeviceExtX;\n};\n\nTransform.prototype.setDeviceExtX = function (dex) {\n  this.ldeviceExtX = dex;\n};\n\nTransform.prototype.getDeviceExtY = function () {\n  return this.ldeviceExtY;\n};\n\nTransform.prototype.setDeviceExtY = function (dey) {\n  this.ldeviceExtY = dey;\n};\n\nTransform.prototype.transformX = function (x) {\n  var xDevice = 0.0;\n  var worldExtX = this.lworldExtX;\n  if (worldExtX != 0.0) {\n    xDevice = this.ldeviceOrgX + (x - this.lworldOrgX) * this.ldeviceExtX / worldExtX;\n  }\n\n  return xDevice;\n};\n\nTransform.prototype.transformY = function (y) {\n  var yDevice = 0.0;\n  var worldExtY = this.lworldExtY;\n  if (worldExtY != 0.0) {\n    yDevice = this.ldeviceOrgY + (y - this.lworldOrgY) * this.ldeviceExtY / worldExtY;\n  }\n\n  return yDevice;\n};\n\nTransform.prototype.inverseTransformX = function (x) {\n  var xWorld = 0.0;\n  var deviceExtX = this.ldeviceExtX;\n  if (deviceExtX != 0.0) {\n    xWorld = this.lworldOrgX + (x - this.ldeviceOrgX) * this.lworldExtX / deviceExtX;\n  }\n\n  return xWorld;\n};\n\nTransform.prototype.inverseTransformY = function (y) {\n  var yWorld = 0.0;\n  var deviceExtY = this.ldeviceExtY;\n  if (deviceExtY != 0.0) {\n    yWorld = this.lworldOrgY + (y - this.ldeviceOrgY) * this.lworldExtY / deviceExtY;\n  }\n  return yWorld;\n};\n\nTransform.prototype.inverseTransformPoint = function (inPoint) {\n  var outPoint = new PointD(this.inverseTransformX(inPoint.x), this.inverseTransformY(inPoint.y));\n  return outPoint;\n};\n\nmodule.exports = Transform;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar Layout = __webpack_require__(15);\nvar FDLayoutConstants = __webpack_require__(7);\nvar LayoutConstants = __webpack_require__(0);\nvar IGeometry = __webpack_require__(8);\nvar IMath = __webpack_require__(9);\n\nfunction FDLayout() {\n  Layout.call(this);\n\n  this.useSmartIdealEdgeLengthCalculation = FDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;\n  this.idealEdgeLength = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n  this.springConstant = FDLayoutConstants.DEFAULT_SPRING_STRENGTH;\n  this.repulsionConstant = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;\n  this.gravityConstant = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;\n  this.compoundGravityConstant = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;\n  this.gravityRangeFactor = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;\n  this.compoundGravityRangeFactor = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;\n  this.displacementThresholdPerNode = 3.0 * FDLayoutConstants.DEFAULT_EDGE_LENGTH / 100;\n  this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n  this.initialCoolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n  this.totalDisplacement = 0.0;\n  this.oldTotalDisplacement = 0.0;\n  this.maxIterations = FDLayoutConstants.MAX_ITERATIONS;\n}\n\nFDLayout.prototype = Object.create(Layout.prototype);\n\nfor (var prop in Layout) {\n  FDLayout[prop] = Layout[prop];\n}\n\nFDLayout.prototype.initParameters = function () {\n  Layout.prototype.initParameters.call(this, arguments);\n\n  this.totalIterations = 0;\n  this.notAnimatedIterations = 0;\n\n  this.useFRGridVariant = FDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION;\n\n  this.grid = [];\n};\n\nFDLayout.prototype.calcIdealEdgeLengths = function () {\n  var edge;\n  var lcaDepth;\n  var source;\n  var target;\n  var sizeOfSourceInLca;\n  var sizeOfTargetInLca;\n\n  var allEdges = this.getGraphManager().getAllEdges();\n  for (var i = 0; i < allEdges.length; i++) {\n    edge = allEdges[i];\n\n    edge.idealLength = this.idealEdgeLength;\n\n    if (edge.isInterGraph) {\n      source = edge.getSource();\n      target = edge.getTarget();\n\n      sizeOfSourceInLca = edge.getSourceInLca().getEstimatedSize();\n      sizeOfTargetInLca = edge.getTargetInLca().getEstimatedSize();\n\n      if (this.useSmartIdealEdgeLengthCalculation) {\n        edge.idealLength += sizeOfSourceInLca + sizeOfTargetInLca - 2 * LayoutConstants.SIMPLE_NODE_SIZE;\n      }\n\n      lcaDepth = edge.getLca().getInclusionTreeDepth();\n\n      edge.idealLength += FDLayoutConstants.DEFAULT_EDGE_LENGTH * FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR * (source.getInclusionTreeDepth() + target.getInclusionTreeDepth() - 2 * lcaDepth);\n    }\n  }\n};\n\nFDLayout.prototype.initSpringEmbedder = function () {\n\n  var s = this.getAllNodes().length;\n  if (this.incremental) {\n    if (s > FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) {\n      this.coolingFactor = Math.max(this.coolingFactor * FDLayoutConstants.COOLING_ADAPTATION_FACTOR, this.coolingFactor - (s - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) / (FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) * this.coolingFactor * (1 - FDLayoutConstants.COOLING_ADAPTATION_FACTOR));\n    }\n    this.maxNodeDisplacement = FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL;\n  } else {\n    if (s > FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) {\n      this.coolingFactor = Math.max(FDLayoutConstants.COOLING_ADAPTATION_FACTOR, 1.0 - (s - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) / (FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) * (1 - FDLayoutConstants.COOLING_ADAPTATION_FACTOR));\n    } else {\n      this.coolingFactor = 1.0;\n    }\n    this.initialCoolingFactor = this.coolingFactor;\n    this.maxNodeDisplacement = FDLayoutConstants.MAX_NODE_DISPLACEMENT;\n  }\n\n  this.maxIterations = Math.max(this.getAllNodes().length * 5, this.maxIterations);\n\n  this.totalDisplacementThreshold = this.displacementThresholdPerNode * this.getAllNodes().length;\n\n  this.repulsionRange = this.calcRepulsionRange();\n};\n\nFDLayout.prototype.calcSpringForces = function () {\n  var lEdges = this.getAllEdges();\n  var edge;\n\n  for (var i = 0; i < lEdges.length; i++) {\n    edge = lEdges[i];\n\n    this.calcSpringForce(edge, edge.idealLength);\n  }\n};\n\nFDLayout.prototype.calcRepulsionForces = function () {\n  var gridUpdateAllowed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var forceToNodeSurroundingUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var i, j;\n  var nodeA, nodeB;\n  var lNodes = this.getAllNodes();\n  var processedNodeSet;\n\n  if (this.useFRGridVariant) {\n    if (this.totalIterations % FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD == 1 && gridUpdateAllowed) {\n      this.updateGrid();\n    }\n\n    processedNodeSet = new Set();\n\n    // calculate repulsion forces between each nodes and its surrounding\n    for (i = 0; i < lNodes.length; i++) {\n      nodeA = lNodes[i];\n      this.calculateRepulsionForceOfANode(nodeA, processedNodeSet, gridUpdateAllowed, forceToNodeSurroundingUpdate);\n      processedNodeSet.add(nodeA);\n    }\n  } else {\n    for (i = 0; i < lNodes.length; i++) {\n      nodeA = lNodes[i];\n\n      for (j = i + 1; j < lNodes.length; j++) {\n        nodeB = lNodes[j];\n\n        // If both nodes are not members of the same graph, skip.\n        if (nodeA.getOwner() != nodeB.getOwner()) {\n          continue;\n        }\n\n        this.calcRepulsionForce(nodeA, nodeB);\n      }\n    }\n  }\n};\n\nFDLayout.prototype.calcGravitationalForces = function () {\n  var node;\n  var lNodes = this.getAllNodesToApplyGravitation();\n\n  for (var i = 0; i < lNodes.length; i++) {\n    node = lNodes[i];\n    this.calcGravitationalForce(node);\n  }\n};\n\nFDLayout.prototype.moveNodes = function () {\n  var lNodes = this.getAllNodes();\n  var node;\n\n  for (var i = 0; i < lNodes.length; i++) {\n    node = lNodes[i];\n    node.move();\n  }\n};\n\nFDLayout.prototype.calcSpringForce = function (edge, idealLength) {\n  var sourceNode = edge.getSource();\n  var targetNode = edge.getTarget();\n\n  var length;\n  var springForce;\n  var springForceX;\n  var springForceY;\n\n  // Update edge length\n  if (this.uniformLeafNodeSizes && sourceNode.getChild() == null && targetNode.getChild() == null) {\n    edge.updateLengthSimple();\n  } else {\n    edge.updateLength();\n\n    if (edge.isOverlapingSourceAndTarget) {\n      return;\n    }\n  }\n\n  length = edge.getLength();\n\n  if (length == 0) return;\n\n  // Calculate spring forces\n  springForce = this.springConstant * (length - idealLength);\n\n  // Project force onto x and y axes\n  springForceX = springForce * (edge.lengthX / length);\n  springForceY = springForce * (edge.lengthY / length);\n\n  // Apply forces on the end nodes\n  sourceNode.springForceX += springForceX;\n  sourceNode.springForceY += springForceY;\n  targetNode.springForceX -= springForceX;\n  targetNode.springForceY -= springForceY;\n};\n\nFDLayout.prototype.calcRepulsionForce = function (nodeA, nodeB) {\n  var rectA = nodeA.getRect();\n  var rectB = nodeB.getRect();\n  var overlapAmount = new Array(2);\n  var clipPoints = new Array(4);\n  var distanceX;\n  var distanceY;\n  var distanceSquared;\n  var distance;\n  var repulsionForce;\n  var repulsionForceX;\n  var repulsionForceY;\n\n  if (rectA.intersects(rectB)) // two nodes overlap\n    {\n      // calculate separation amount in x and y directions\n      IGeometry.calcSeparationAmount(rectA, rectB, overlapAmount, FDLayoutConstants.DEFAULT_EDGE_LENGTH / 2.0);\n\n      repulsionForceX = 2 * overlapAmount[0];\n      repulsionForceY = 2 * overlapAmount[1];\n\n      var childrenConstant = nodeA.noOfChildren * nodeB.noOfChildren / (nodeA.noOfChildren + nodeB.noOfChildren);\n\n      // Apply forces on the two nodes\n      nodeA.repulsionForceX -= childrenConstant * repulsionForceX;\n      nodeA.repulsionForceY -= childrenConstant * repulsionForceY;\n      nodeB.repulsionForceX += childrenConstant * repulsionForceX;\n      nodeB.repulsionForceY += childrenConstant * repulsionForceY;\n    } else // no overlap\n    {\n      // calculate distance\n\n      if (this.uniformLeafNodeSizes && nodeA.getChild() == null && nodeB.getChild() == null) // simply base repulsion on distance of node centers\n        {\n          distanceX = rectB.getCenterX() - rectA.getCenterX();\n          distanceY = rectB.getCenterY() - rectA.getCenterY();\n        } else // use clipping points\n        {\n          IGeometry.getIntersection(rectA, rectB, clipPoints);\n\n          distanceX = clipPoints[2] - clipPoints[0];\n          distanceY = clipPoints[3] - clipPoints[1];\n        }\n\n      // No repulsion range. FR grid variant should take care of this.\n      if (Math.abs(distanceX) < FDLayoutConstants.MIN_REPULSION_DIST) {\n        distanceX = IMath.sign(distanceX) * FDLayoutConstants.MIN_REPULSION_DIST;\n      }\n\n      if (Math.abs(distanceY) < FDLayoutConstants.MIN_REPULSION_DIST) {\n        distanceY = IMath.sign(distanceY) * FDLayoutConstants.MIN_REPULSION_DIST;\n      }\n\n      distanceSquared = distanceX * distanceX + distanceY * distanceY;\n      distance = Math.sqrt(distanceSquared);\n\n      repulsionForce = this.repulsionConstant * nodeA.noOfChildren * nodeB.noOfChildren / distanceSquared;\n\n      // Project force onto x and y axes\n      repulsionForceX = repulsionForce * distanceX / distance;\n      repulsionForceY = repulsionForce * distanceY / distance;\n\n      // Apply forces on the two nodes    \n      nodeA.repulsionForceX -= repulsionForceX;\n      nodeA.repulsionForceY -= repulsionForceY;\n      nodeB.repulsionForceX += repulsionForceX;\n      nodeB.repulsionForceY += repulsionForceY;\n    }\n};\n\nFDLayout.prototype.calcGravitationalForce = function (node) {\n  var ownerGraph;\n  var ownerCenterX;\n  var ownerCenterY;\n  var distanceX;\n  var distanceY;\n  var absDistanceX;\n  var absDistanceY;\n  var estimatedSize;\n  ownerGraph = node.getOwner();\n\n  ownerCenterX = (ownerGraph.getRight() + ownerGraph.getLeft()) / 2;\n  ownerCenterY = (ownerGraph.getTop() + ownerGraph.getBottom()) / 2;\n  distanceX = node.getCenterX() - ownerCenterX;\n  distanceY = node.getCenterY() - ownerCenterY;\n  absDistanceX = Math.abs(distanceX) + node.getWidth() / 2;\n  absDistanceY = Math.abs(distanceY) + node.getHeight() / 2;\n\n  if (node.getOwner() == this.graphManager.getRoot()) // in the root graph\n    {\n      estimatedSize = ownerGraph.getEstimatedSize() * this.gravityRangeFactor;\n\n      if (absDistanceX > estimatedSize || absDistanceY > estimatedSize) {\n        node.gravitationForceX = -this.gravityConstant * distanceX;\n        node.gravitationForceY = -this.gravityConstant * distanceY;\n      }\n    } else // inside a compound\n    {\n      estimatedSize = ownerGraph.getEstimatedSize() * this.compoundGravityRangeFactor;\n\n      if (absDistanceX > estimatedSize || absDistanceY > estimatedSize) {\n        node.gravitationForceX = -this.gravityConstant * distanceX * this.compoundGravityConstant;\n        node.gravitationForceY = -this.gravityConstant * distanceY * this.compoundGravityConstant;\n      }\n    }\n};\n\nFDLayout.prototype.isConverged = function () {\n  var converged;\n  var oscilating = false;\n\n  if (this.totalIterations > this.maxIterations / 3) {\n    oscilating = Math.abs(this.totalDisplacement - this.oldTotalDisplacement) < 2;\n  }\n\n  converged = this.totalDisplacement < this.totalDisplacementThreshold;\n\n  this.oldTotalDisplacement = this.totalDisplacement;\n\n  return converged || oscilating;\n};\n\nFDLayout.prototype.animate = function () {\n  if (this.animationDuringLayout && !this.isSubLayout) {\n    if (this.notAnimatedIterations == this.animationPeriod) {\n      this.update();\n      this.notAnimatedIterations = 0;\n    } else {\n      this.notAnimatedIterations++;\n    }\n  }\n};\n\n//This method calculates the number of children (weight) for all nodes\nFDLayout.prototype.calcNoOfChildrenForAllNodes = function () {\n  var node;\n  var allNodes = this.graphManager.getAllNodes();\n\n  for (var i = 0; i < allNodes.length; i++) {\n    node = allNodes[i];\n    node.noOfChildren = node.getNoOfChildren();\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Section: FR-Grid Variant Repulsion Force Calculation\n// -----------------------------------------------------------------------------\n\nFDLayout.prototype.calcGrid = function (graph) {\n\n  var sizeX = 0;\n  var sizeY = 0;\n\n  sizeX = parseInt(Math.ceil((graph.getRight() - graph.getLeft()) / this.repulsionRange));\n  sizeY = parseInt(Math.ceil((graph.getBottom() - graph.getTop()) / this.repulsionRange));\n\n  var grid = new Array(sizeX);\n\n  for (var i = 0; i < sizeX; i++) {\n    grid[i] = new Array(sizeY);\n  }\n\n  for (var i = 0; i < sizeX; i++) {\n    for (var j = 0; j < sizeY; j++) {\n      grid[i][j] = new Array();\n    }\n  }\n\n  return grid;\n};\n\nFDLayout.prototype.addNodeToGrid = function (v, left, top) {\n\n  var startX = 0;\n  var finishX = 0;\n  var startY = 0;\n  var finishY = 0;\n\n  startX = parseInt(Math.floor((v.getRect().x - left) / this.repulsionRange));\n  finishX = parseInt(Math.floor((v.getRect().width + v.getRect().x - left) / this.repulsionRange));\n  startY = parseInt(Math.floor((v.getRect().y - top) / this.repulsionRange));\n  finishY = parseInt(Math.floor((v.getRect().height + v.getRect().y - top) / this.repulsionRange));\n\n  for (var i = startX; i <= finishX; i++) {\n    for (var j = startY; j <= finishY; j++) {\n      this.grid[i][j].push(v);\n      v.setGridCoordinates(startX, finishX, startY, finishY);\n    }\n  }\n};\n\nFDLayout.prototype.updateGrid = function () {\n  var i;\n  var nodeA;\n  var lNodes = this.getAllNodes();\n\n  this.grid = this.calcGrid(this.graphManager.getRoot());\n\n  // put all nodes to proper grid cells\n  for (i = 0; i < lNodes.length; i++) {\n    nodeA = lNodes[i];\n    this.addNodeToGrid(nodeA, this.graphManager.getRoot().getLeft(), this.graphManager.getRoot().getTop());\n  }\n};\n\nFDLayout.prototype.calculateRepulsionForceOfANode = function (nodeA, processedNodeSet, gridUpdateAllowed, forceToNodeSurroundingUpdate) {\n\n  if (this.totalIterations % FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD == 1 && gridUpdateAllowed || forceToNodeSurroundingUpdate) {\n    var surrounding = new Set();\n    nodeA.surrounding = new Array();\n    var nodeB;\n    var grid = this.grid;\n\n    for (var i = nodeA.startX - 1; i < nodeA.finishX + 2; i++) {\n      for (var j = nodeA.startY - 1; j < nodeA.finishY + 2; j++) {\n        if (!(i < 0 || j < 0 || i >= grid.length || j >= grid[0].length)) {\n          for (var k = 0; k < grid[i][j].length; k++) {\n            nodeB = grid[i][j][k];\n\n            // If both nodes are not members of the same graph, \n            // or both nodes are the same, skip.\n            if (nodeA.getOwner() != nodeB.getOwner() || nodeA == nodeB) {\n              continue;\n            }\n\n            // check if the repulsion force between\n            // nodeA and nodeB has already been calculated\n            if (!processedNodeSet.has(nodeB) && !surrounding.has(nodeB)) {\n              var distanceX = Math.abs(nodeA.getCenterX() - nodeB.getCenterX()) - (nodeA.getWidth() / 2 + nodeB.getWidth() / 2);\n              var distanceY = Math.abs(nodeA.getCenterY() - nodeB.getCenterY()) - (nodeA.getHeight() / 2 + nodeB.getHeight() / 2);\n\n              // if the distance between nodeA and nodeB \n              // is less then calculation range\n              if (distanceX <= this.repulsionRange && distanceY <= this.repulsionRange) {\n                //then add nodeB to surrounding of nodeA\n                surrounding.add(nodeB);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    nodeA.surrounding = [].concat(_toConsumableArray(surrounding));\n  }\n  for (i = 0; i < nodeA.surrounding.length; i++) {\n    this.calcRepulsionForce(nodeA, nodeA.surrounding[i]);\n  }\n};\n\nFDLayout.prototype.calcRepulsionRange = function () {\n  return 0.0;\n};\n\nmodule.exports = FDLayout;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LEdge = __webpack_require__(1);\nvar FDLayoutConstants = __webpack_require__(7);\n\nfunction FDLayoutEdge(source, target, vEdge) {\n  LEdge.call(this, source, target, vEdge);\n  this.idealLength = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n}\n\nFDLayoutEdge.prototype = Object.create(LEdge.prototype);\n\nfor (var prop in LEdge) {\n  FDLayoutEdge[prop] = LEdge[prop];\n}\n\nmodule.exports = FDLayoutEdge;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LNode = __webpack_require__(3);\n\nfunction FDLayoutNode(gm, loc, size, vNode) {\n  // alternative constructor is handled inside LNode\n  LNode.call(this, gm, loc, size, vNode);\n  //Spring, repulsion and gravitational forces acting on this node\n  this.springForceX = 0;\n  this.springForceY = 0;\n  this.repulsionForceX = 0;\n  this.repulsionForceY = 0;\n  this.gravitationForceX = 0;\n  this.gravitationForceY = 0;\n  //Amount by which this node is to be moved in this iteration\n  this.displacementX = 0;\n  this.displacementY = 0;\n\n  //Start and finish grid coordinates that this node is fallen into\n  this.startX = 0;\n  this.finishX = 0;\n  this.startY = 0;\n  this.finishY = 0;\n\n  //Geometric neighbors of this node\n  this.surrounding = [];\n}\n\nFDLayoutNode.prototype = Object.create(LNode.prototype);\n\nfor (var prop in LNode) {\n  FDLayoutNode[prop] = LNode[prop];\n}\n\nFDLayoutNode.prototype.setGridCoordinates = function (_startX, _finishX, _startY, _finishY) {\n  this.startX = _startX;\n  this.finishX = _finishX;\n  this.startY = _startY;\n  this.finishY = _finishY;\n};\n\nmodule.exports = FDLayoutNode;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction DimensionD(width, height) {\n  this.width = 0;\n  this.height = 0;\n  if (width !== null && height !== null) {\n    this.height = height;\n    this.width = width;\n  }\n}\n\nDimensionD.prototype.getWidth = function () {\n  return this.width;\n};\n\nDimensionD.prototype.setWidth = function (width) {\n  this.width = width;\n};\n\nDimensionD.prototype.getHeight = function () {\n  return this.height;\n};\n\nDimensionD.prototype.setHeight = function (height) {\n  this.height = height;\n};\n\nmodule.exports = DimensionD;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar UniqueIDGeneretor = __webpack_require__(14);\n\nfunction HashMap() {\n  this.map = {};\n  this.keys = [];\n}\n\nHashMap.prototype.put = function (key, value) {\n  var theId = UniqueIDGeneretor.createID(key);\n  if (!this.contains(theId)) {\n    this.map[theId] = value;\n    this.keys.push(key);\n  }\n};\n\nHashMap.prototype.contains = function (key) {\n  var theId = UniqueIDGeneretor.createID(key);\n  return this.map[key] != null;\n};\n\nHashMap.prototype.get = function (key) {\n  var theId = UniqueIDGeneretor.createID(key);\n  return this.map[theId];\n};\n\nHashMap.prototype.keySet = function () {\n  return this.keys;\n};\n\nmodule.exports = HashMap;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar UniqueIDGeneretor = __webpack_require__(14);\n\nfunction HashSet() {\n  this.set = {};\n}\n;\n\nHashSet.prototype.add = function (obj) {\n  var theId = UniqueIDGeneretor.createID(obj);\n  if (!this.contains(theId)) this.set[theId] = obj;\n};\n\nHashSet.prototype.remove = function (obj) {\n  delete this.set[UniqueIDGeneretor.createID(obj)];\n};\n\nHashSet.prototype.clear = function () {\n  this.set = {};\n};\n\nHashSet.prototype.contains = function (obj) {\n  return this.set[UniqueIDGeneretor.createID(obj)] == obj;\n};\n\nHashSet.prototype.isEmpty = function () {\n  return this.size() === 0;\n};\n\nHashSet.prototype.size = function () {\n  return Object.keys(this.set).length;\n};\n\n//concats this.set to the given list\nHashSet.prototype.addAllTo = function (list) {\n  var keys = Object.keys(this.set);\n  var length = keys.length;\n  for (var i = 0; i < length; i++) {\n    list.push(this.set[keys[i]]);\n  }\n};\n\nHashSet.prototype.size = function () {\n  return Object.keys(this.set).length;\n};\n\nHashSet.prototype.addAll = function (list) {\n  var s = list.length;\n  for (var i = 0; i < s; i++) {\n    var v = list[i];\n    this.add(v);\n  }\n};\n\nmodule.exports = HashSet;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A classic Quicksort algorithm with Hoare's partition\n * - Works also on LinkedList objects\n *\n * Copyright: i-Vis Research Group, Bilkent University, 2007 - present\n */\n\nvar LinkedList = __webpack_require__(11);\n\nvar Quicksort = function () {\n    function Quicksort(A, compareFunction) {\n        _classCallCheck(this, Quicksort);\n\n        if (compareFunction !== null || compareFunction !== undefined) this.compareFunction = this._defaultCompareFunction;\n\n        var length = void 0;\n        if (A instanceof LinkedList) length = A.size();else length = A.length;\n\n        this._quicksort(A, 0, length - 1);\n    }\n\n    _createClass(Quicksort, [{\n        key: '_quicksort',\n        value: function _quicksort(A, p, r) {\n            if (p < r) {\n                var q = this._partition(A, p, r);\n                this._quicksort(A, p, q);\n                this._quicksort(A, q + 1, r);\n            }\n        }\n    }, {\n        key: '_partition',\n        value: function _partition(A, p, r) {\n            var x = this._get(A, p);\n            var i = p;\n            var j = r;\n            while (true) {\n                while (this.compareFunction(x, this._get(A, j))) {\n                    j--;\n                }while (this.compareFunction(this._get(A, i), x)) {\n                    i++;\n                }if (i < j) {\n                    this._swap(A, i, j);\n                    i++;\n                    j--;\n                } else return j;\n            }\n        }\n    }, {\n        key: '_get',\n        value: function _get(object, index) {\n            if (object instanceof LinkedList) return object.get_object_at(index);else return object[index];\n        }\n    }, {\n        key: '_set',\n        value: function _set(object, index, value) {\n            if (object instanceof LinkedList) object.set_object_at(index, value);else object[index] = value;\n        }\n    }, {\n        key: '_swap',\n        value: function _swap(A, i, j) {\n            var temp = this._get(A, i);\n            this._set(A, i, this._get(A, j));\n            this._set(A, j, temp);\n        }\n    }, {\n        key: '_defaultCompareFunction',\n        value: function _defaultCompareFunction(a, b) {\n            return b > a;\n        }\n    }]);\n\n    return Quicksort;\n}();\n\nmodule.exports = Quicksort;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *   Needleman-Wunsch algorithm is an procedure to compute the optimal global alignment of two string\n *   sequences by S.B.Needleman and C.D.Wunsch (1970).\n *\n *   Aside from the inputs, you can assign the scores for,\n *   - Match: The two characters at the current index are same.\n *   - Mismatch: The two characters at the current index are different.\n *   - Insertion/Deletion(gaps): The best alignment involves one letter aligning to a gap in the other string.\n */\n\nvar NeedlemanWunsch = function () {\n    function NeedlemanWunsch(sequence1, sequence2) {\n        var match_score = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var mismatch_penalty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n        var gap_penalty = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n\n        _classCallCheck(this, NeedlemanWunsch);\n\n        this.sequence1 = sequence1;\n        this.sequence2 = sequence2;\n        this.match_score = match_score;\n        this.mismatch_penalty = mismatch_penalty;\n        this.gap_penalty = gap_penalty;\n\n        // Just the remove redundancy\n        this.iMax = sequence1.length + 1;\n        this.jMax = sequence2.length + 1;\n\n        // Grid matrix of scores\n        this.grid = new Array(this.iMax);\n        for (var i = 0; i < this.iMax; i++) {\n            this.grid[i] = new Array(this.jMax);\n\n            for (var j = 0; j < this.jMax; j++) {\n                this.grid[i][j] = 0;\n            }\n        }\n\n        // Traceback matrix (2D array, each cell is an array of boolean values for [`Diag`, `Up`, `Left`] positions)\n        this.tracebackGrid = new Array(this.iMax);\n        for (var _i = 0; _i < this.iMax; _i++) {\n            this.tracebackGrid[_i] = new Array(this.jMax);\n\n            for (var _j = 0; _j < this.jMax; _j++) {\n                this.tracebackGrid[_i][_j] = [null, null, null];\n            }\n        }\n\n        // The aligned sequences (return multiple possibilities)\n        this.alignments = [];\n\n        // Final alignment score\n        this.score = -1;\n\n        // Calculate scores and tracebacks\n        this.computeGrids();\n    }\n\n    _createClass(NeedlemanWunsch, [{\n        key: \"getScore\",\n        value: function getScore() {\n            return this.score;\n        }\n    }, {\n        key: \"getAlignments\",\n        value: function getAlignments() {\n            return this.alignments;\n        }\n\n        // Main dynamic programming procedure\n\n    }, {\n        key: \"computeGrids\",\n        value: function computeGrids() {\n            // Fill in the first row\n            for (var j = 1; j < this.jMax; j++) {\n                this.grid[0][j] = this.grid[0][j - 1] + this.gap_penalty;\n                this.tracebackGrid[0][j] = [false, false, true];\n            }\n\n            // Fill in the first column\n            for (var i = 1; i < this.iMax; i++) {\n                this.grid[i][0] = this.grid[i - 1][0] + this.gap_penalty;\n                this.tracebackGrid[i][0] = [false, true, false];\n            }\n\n            // Fill the rest of the grid\n            for (var _i2 = 1; _i2 < this.iMax; _i2++) {\n                for (var _j2 = 1; _j2 < this.jMax; _j2++) {\n                    // Find the max score(s) among [`Diag`, `Up`, `Left`]\n                    var diag = void 0;\n                    if (this.sequence1[_i2 - 1] === this.sequence2[_j2 - 1]) diag = this.grid[_i2 - 1][_j2 - 1] + this.match_score;else diag = this.grid[_i2 - 1][_j2 - 1] + this.mismatch_penalty;\n\n                    var up = this.grid[_i2 - 1][_j2] + this.gap_penalty;\n                    var left = this.grid[_i2][_j2 - 1] + this.gap_penalty;\n\n                    // If there exists multiple max values, capture them for multiple paths\n                    var maxOf = [diag, up, left];\n                    var indices = this.arrayAllMaxIndexes(maxOf);\n\n                    // Update Grids\n                    this.grid[_i2][_j2] = maxOf[indices[0]];\n                    this.tracebackGrid[_i2][_j2] = [indices.includes(0), indices.includes(1), indices.includes(2)];\n                }\n            }\n\n            // Update alignment score\n            this.score = this.grid[this.iMax - 1][this.jMax - 1];\n        }\n\n        // Gets all possible valid sequence combinations\n\n    }, {\n        key: \"alignmentTraceback\",\n        value: function alignmentTraceback() {\n            var inProcessAlignments = [];\n\n            inProcessAlignments.push({ pos: [this.sequence1.length, this.sequence2.length],\n                seq1: \"\",\n                seq2: \"\"\n            });\n\n            while (inProcessAlignments[0]) {\n                var current = inProcessAlignments[0];\n                var directions = this.tracebackGrid[current.pos[0]][current.pos[1]];\n\n                if (directions[0]) {\n                    inProcessAlignments.push({ pos: [current.pos[0] - 1, current.pos[1] - 1],\n                        seq1: this.sequence1[current.pos[0] - 1] + current.seq1,\n                        seq2: this.sequence2[current.pos[1] - 1] + current.seq2\n                    });\n                }\n                if (directions[1]) {\n                    inProcessAlignments.push({ pos: [current.pos[0] - 1, current.pos[1]],\n                        seq1: this.sequence1[current.pos[0] - 1] + current.seq1,\n                        seq2: '-' + current.seq2\n                    });\n                }\n                if (directions[2]) {\n                    inProcessAlignments.push({ pos: [current.pos[0], current.pos[1] - 1],\n                        seq1: '-' + current.seq1,\n                        seq2: this.sequence2[current.pos[1] - 1] + current.seq2\n                    });\n                }\n\n                if (current.pos[0] === 0 && current.pos[1] === 0) this.alignments.push({ sequence1: current.seq1,\n                    sequence2: current.seq2\n                });\n\n                inProcessAlignments.shift();\n            }\n\n            return this.alignments;\n        }\n\n        // Helper Functions\n\n    }, {\n        key: \"getAllIndexes\",\n        value: function getAllIndexes(arr, val) {\n            var indexes = [],\n                i = -1;\n            while ((i = arr.indexOf(val, i + 1)) !== -1) {\n                indexes.push(i);\n            }\n            return indexes;\n        }\n    }, {\n        key: \"arrayAllMaxIndexes\",\n        value: function arrayAllMaxIndexes(array) {\n            return this.getAllIndexes(array, Math.max.apply(null, array));\n        }\n    }]);\n\n    return NeedlemanWunsch;\n}();\n\nmodule.exports = NeedlemanWunsch;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar layoutBase = function layoutBase() {\n  return;\n};\n\nlayoutBase.FDLayout = __webpack_require__(18);\nlayoutBase.FDLayoutConstants = __webpack_require__(7);\nlayoutBase.FDLayoutEdge = __webpack_require__(19);\nlayoutBase.FDLayoutNode = __webpack_require__(20);\nlayoutBase.DimensionD = __webpack_require__(21);\nlayoutBase.HashMap = __webpack_require__(22);\nlayoutBase.HashSet = __webpack_require__(23);\nlayoutBase.IGeometry = __webpack_require__(8);\nlayoutBase.IMath = __webpack_require__(9);\nlayoutBase.Integer = __webpack_require__(10);\nlayoutBase.Point = __webpack_require__(12);\nlayoutBase.PointD = __webpack_require__(4);\nlayoutBase.RandomSeed = __webpack_require__(16);\nlayoutBase.RectangleD = __webpack_require__(13);\nlayoutBase.Transform = __webpack_require__(17);\nlayoutBase.UniqueIDGeneretor = __webpack_require__(14);\nlayoutBase.Quicksort = __webpack_require__(24);\nlayoutBase.LinkedList = __webpack_require__(11);\nlayoutBase.LGraphObject = __webpack_require__(2);\nlayoutBase.LGraph = __webpack_require__(5);\nlayoutBase.LEdge = __webpack_require__(1);\nlayoutBase.LGraphManager = __webpack_require__(6);\nlayoutBase.LNode = __webpack_require__(3);\nlayoutBase.Layout = __webpack_require__(15);\nlayoutBase.LayoutConstants = __webpack_require__(0);\nlayoutBase.NeedlemanWunsch = __webpack_require__(25);\n\nmodule.exports = layoutBase;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction Emitter() {\n  this.listeners = [];\n}\n\nvar p = Emitter.prototype;\n\np.addListener = function (event, callback) {\n  this.listeners.push({\n    event: event,\n    callback: callback\n  });\n};\n\np.removeListener = function (event, callback) {\n  for (var i = this.listeners.length; i >= 0; i--) {\n    var l = this.listeners[i];\n\n    if (l.event === event && l.callback === callback) {\n      this.listeners.splice(i, 1);\n    }\n  }\n};\n\np.emit = function (event, data) {\n  for (var i = 0; i < this.listeners.length; i++) {\n    var l = this.listeners[i];\n\n    if (event === l.event) {\n      l.callback(data);\n    }\n  }\n};\n\nmodule.exports = Emitter;\n\n/***/ })\n/******/ ]);\n});"],"names":["factory","modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","LayoutConstants","QUALITY","DEFAULT_CREATE_BENDS_AS_NEEDED","DEFAULT_INCREMENTAL","DEFAULT_ANIMATION_ON_LAYOUT","DEFAULT_ANIMATION_DURING_LAYOUT","DEFAULT_ANIMATION_PERIOD","DEFAULT_UNIFORM_LEAF_NODE_SIZES","DEFAULT_GRAPH_MARGIN","NODE_DIMENSIONS_INCLUDE_LABELS","SIMPLE_NODE_SIZE","SIMPLE_NODE_HALF_SIZE","EMPTY_COMPOUND_NODE_SIZE","MIN_EDGE_LENGTH","WORLD_BOUNDARY","INITIAL_WORLD_BOUNDARY","WORLD_CENTER_X","WORLD_CENTER_Y","LGraphObject","IGeometry","IMath","LEdge","source","target","vEdge","this","isOverlapingSourceAndTarget","vGraphObject","bendpoints","prop","create","getSource","getTarget","isInterGraph","getLength","length","getBendpoints","getLca","lca","getSourceInLca","sourceInLca","getTargetInLca","targetInLca","getOtherEnd","node","getOtherEndInGraph","graph","otherEnd","root","getGraphManager","getRoot","getOwner","getParent","updateLength","clipPointCoordinates","Array","getIntersection","getRect","lengthX","lengthY","Math","abs","sign","sqrt","updateLengthSimple","getCenterX","getCenterY","Integer","RectangleD","RandomSeed","PointD","LNode","gm","loc","size","vNode","graphManager","estimatedSize","MIN_VALUE","inclusionTreeDepth","MAX_VALUE","edges","rect","x","y","width","height","getEdges","getChild","child","owner","getWidth","setWidth","getHeight","setHeight","getCenter","getLocation","getDiagonal","getHalfTheDiagonal","setRect","upperLeft","dimension","setCenter","cx","cy","setLocation","moveBy","dx","dy","getEdgeListToNode","to","edgeList","self","forEach","edge","push","getEdgesBetween","other","getNeighborsList","neighbors","Set","add","withChildren","withNeighborsList","nodes","getNodes","getNoOfChildren","noOfChildren","getEstimatedSize","calcEstimatedSize","scatter","randomCenterX","randomCenterY","minX","maxX","nextDouble","minY","maxY","updateBounds","childGraph","getLeft","getTop","getRight","getBottom","labelWidth","labelHeight","labelPos","getInclusionTreeDepth","transform","trans","left","top","leftTop","vLeftTop","inverseTransformPoint","getX","getY","setX","setY","getDifference","pt","DimensionD","getCopy","translate","dim","LGraphManager","Point","LinkedList","LGraph","parent","obj2","vGraph","margin","isConnected","Layout","right","bottom","obj1","sourceNode","targetNode","newNode","indexOf","newEdge","remove","obj","edgesToBeRemoved","slice","index","splice","sourceIndex","targetIndex","updateLeftTop","nodeTop","nodeLeft","lNode","undefined","paddingLeft","recursive","nodeRight","nodeBottom","boundingRect","calculateBounds","updateConnected","neighborEdges","currentNeighbor","queue","visited","currentNode","shift","has","noOfVisitedInThisGraph","visitedNode","layout","graphs","addRoot","ngraph","newGraph","nnode","setRootGraph","rootGraph","parentNode","sourceGraph","targetGraph","lObj","concat","nodesToBeRemoved","getGraphs","getAllNodes","allNodes","nodeList","resetAllNodes","resetAllEdges","allEdges","resetAllNodesToApplyGravitation","allNodesToApplyGravitation","getAllEdges","getAllNodesToApplyGravitation","setAllNodesToApplyGravitation","getLayout","isOneAncestorOfOther","firstNode","secondNode","ownerGraph","calcLowestCommonAncestors","sourceAncestorGraph","targetAncestorGraph","calcLowestCommonAncestor","firstOwnerGraph","secondOwnerGraph","calcInclusionTreeDepths","depth","includesInvalidEdge","FDLayoutConstants","MAX_ITERATIONS","DEFAULT_EDGE_LENGTH","DEFAULT_SPRING_STRENGTH","DEFAULT_REPULSION_STRENGTH","DEFAULT_GRAVITY_STRENGTH","DEFAULT_COMPOUND_GRAVITY_STRENGTH","DEFAULT_GRAVITY_RANGE_FACTOR","DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR","DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION","DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION","DEFAULT_COOLING_FACTOR_INCREMENTAL","COOLING_ADAPTATION_FACTOR","ADAPTATION_LOWER_NODE_LIMIT","ADAPTATION_UPPER_NODE_LIMIT","MAX_NODE_DISPLACEMENT_INCREMENTAL","MAX_NODE_DISPLACEMENT","MIN_REPULSION_DIST","CONVERGENCE_CHECK_PERIOD","PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR","GRID_CALCULATION_CHECK_PERIOD","calcSeparationAmount","rectA","rectB","overlapAmount","separationBuffer","intersects","directions","decideDirectionsForOverlappingNodes","min","max","slope","moveByY","moveByX","getIntersection2","result","p1x","p1y","p2x","p2y","topLeftAx","topLeftAy","topRightAx","bottomLeftAx","bottomLeftAy","bottomRightAx","halfWidthA","getWidthHalf","halfHeightA","getHeightHalf","topLeftBx","topLeftBy","topRightBx","bottomLeftBx","bottomLeftBy","bottomRightBx","halfWidthB","halfHeightB","clipPointAFound","clipPointBFound","slopeA","slopeB","slopePrime","cardinalDirectionA","cardinalDirectionB","tempPointAx","tempPointAy","tempPointBx","tempPointBy","getCardinalDirection","line","s1","s2","f1","f2","a1","a2","b1","b2","c1","c2","denom","x1","y1","x2","y2","x3","y3","x4","y4","angleOfVector","Cx","Cy","Nx","Ny","C_angle","atan","PI","TWO_PI","ONE_AND_HALF_PI","HALF_PI","doIntersect","p1","p2","p3","p4","a","b","q","r","det","lambda","gamma","THREE_PI","floor","ceil","_createClass","defineProperties","props","descriptor","writable","key","Constructor","protoProps","staticProps","nodeFrom","next","prev","list","head","tail","_remove","vals","_this","instance","TypeError","_classCallCheck","v","val","otherNode","current","constructor","parseInt","move","equals","toString","getMinX","getMaxX","getMinY","getMaxY","_typeof","Symbol","iterator","UniqueIDGeneretor","lastID","createID","isPrimitive","uniqueID","getString","id","arg","type","_toConsumableArray","arr","isArray","arr2","from","Transform","Emitter","isRemoteUse","layoutQuality","createBendsAsNeeded","incremental","animationOnLayout","animationDuringLayout","animationPeriod","uniformLeafNodeSizes","edgeToDummyNodes","Map","isLayoutFinished","isSubLayout","RANDOM_SEED","newGraphManager","checkLayoutSuccess","runLayout","isLayoutSuccessfull","tilingPreLayout","initParameters","ANIMATE","doPostLayout","tilingPostLayout","update","update2","createBendpointsFromDummyNodes","newLeftTop","setWorldOrgX","setWorldOrgY","setDeviceOrgX","setDeviceOrgY","positionNodesRandomly","getFlatForest","flatForest","isForest","isFlat","toBeVisited","parents","unProcessedNodes","set","temp","createDummyNodesForBendpoints","dummyNodes","dummyNode","Dimension","dummyEdge","keys","k","lEdge","path","ebp","sliderValue","defaultValue","minDiv","maxMul","findCenterOfTree","removedNodes","remainingDegrees","foundCenter","centerNode","degree","tempList","tempList2","neighbour","newDegree","setGraphManager","seed","sin","lworldOrgX","lworldOrgY","ldeviceOrgX","ldeviceOrgY","lworldExtX","lworldExtY","ldeviceExtX","ldeviceExtY","getWorldOrgX","wox","getWorldOrgY","woy","getWorldExtX","setWorldExtX","wex","getWorldExtY","setWorldExtY","wey","getDeviceOrgX","dox","getDeviceOrgY","doy","getDeviceExtX","setDeviceExtX","dex","getDeviceExtY","setDeviceExtY","dey","transformX","xDevice","worldExtX","transformY","yDevice","worldExtY","inverseTransformX","xWorld","deviceExtX","inverseTransformY","yWorld","deviceExtY","inPoint","FDLayout","useSmartIdealEdgeLengthCalculation","idealEdgeLength","springConstant","repulsionConstant","gravityConstant","compoundGravityConstant","gravityRangeFactor","compoundGravityRangeFactor","displacementThresholdPerNode","coolingFactor","initialCoolingFactor","totalDisplacement","oldTotalDisplacement","maxIterations","arguments","totalIterations","notAnimatedIterations","useFRGridVariant","grid","calcIdealEdgeLengths","lcaDepth","sizeOfSourceInLca","sizeOfTargetInLca","idealLength","initSpringEmbedder","maxNodeDisplacement","totalDisplacementThreshold","repulsionRange","calcRepulsionRange","calcSpringForces","lEdges","calcSpringForce","calcRepulsionForces","j","nodeA","nodeB","processedNodeSet","gridUpdateAllowed","forceToNodeSurroundingUpdate","lNodes","updateGrid","calculateRepulsionForceOfANode","calcRepulsionForce","calcGravitationalForces","calcGravitationalForce","moveNodes","springForce","springForceX","springForceY","distanceX","distanceY","distanceSquared","distance","repulsionForce","repulsionForceX","repulsionForceY","clipPoints","childrenConstant","ownerCenterX","ownerCenterY","absDistanceX","absDistanceY","gravitationForceX","gravitationForceY","isConverged","converged","oscilating","animate","calcNoOfChildrenForAllNodes","calcGrid","sizeX","sizeY","addNodeToGrid","startX","finishX","startY","finishY","setGridCoordinates","surrounding","FDLayoutEdge","FDLayoutNode","displacementX","displacementY","_startX","_finishX","_startY","_finishY","HashMap","map","put","theId","contains","keySet","HashSet","clear","isEmpty","addAllTo","addAll","Quicksort","A","compareFunction","_defaultCompareFunction","_quicksort","_partition","_get","_swap","get_object_at","set_object_at","_set","NeedlemanWunsch","sequence1","sequence2","match_score","mismatch_penalty","gap_penalty","iMax","jMax","tracebackGrid","_i","_j","alignments","score","computeGrids","_i2","_j2","maxOf","indices","arrayAllMaxIndexes","includes","inProcessAlignments","pos","seq1","seq2","indexes","array","getAllIndexes","apply","layoutBase","listeners","addListener","event","callback","removeListener","emit","data"],"mappings":"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"}