{"version":3,"file":"index.js","sources":["../../../../../../../node_modules/d3-sankey/node_modules/d3-shape/src/link/index.js"],"sourcesContent":["import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n"],"names":["linkSource","d","source","linkTarget","target","curveHorizontal","context","x0","y0","x1","y1","moveTo","bezierCurveTo","linkHorizontal","curve","x","pointX","y","pointY","link","buffer","argv","slice","call","arguments","s","apply","this","t","path","_","length","constant"],"mappings":"qJAMA,SAASA,EAAWC,GAClB,OAAOA,EAAEC,MACX,CAEA,SAASC,EAAWF,GAClB,OAAOA,EAAEG,MACX,CAuCA,SAASC,EAAgBC,EAASC,EAAIC,EAAIC,EAAIC,GAC5CJ,EAAQK,OAAOJ,EAAIC,GACnBF,EAAQM,cAAcL,GAAMA,EAAKE,GAAM,EAAGD,EAAID,EAAIG,EAAID,EAAIC,EAC5D,CAgBO,SAASG,IACd,OAzDF,SAAcC,GACZ,IAAIZ,EAASF,EACTI,EAASD,EACTY,EAAIC,EACJC,EAAIC,EACJZ,EAAU,KAEd,SAASa,IACP,IAAIC,EAAQC,EAAOC,EAAMC,KAAKC,WAAYC,EAAIvB,EAAOwB,MAAMC,KAAMN,GAAOO,EAAIxB,EAAOsB,MAAMC,KAAMN,GAG/F,GAFKf,IAASA,EAAUc,EAASS,KACjCf,EAAMR,GAAUS,EAAEW,MAAMC,MAAON,EAAK,GAAKI,EAAGJ,KAASJ,EAAES,MAAMC,KAAMN,IAAQN,EAAEW,MAAMC,MAAON,EAAK,GAAKO,EAAGP,KAASJ,EAAES,MAAMC,KAAMN,IAC1HD,EAAQ,OAAOd,EAAU,KAAMc,EAAS,IAAM,IACnD,CAsBD,OApBAD,EAAKjB,OAAS,SAAS4B,GACrB,OAAON,UAAUO,QAAU7B,EAAS4B,EAAGX,GAAQjB,CACnD,EAEEiB,EAAKf,OAAS,SAAS0B,GACrB,OAAON,UAAUO,QAAU3B,EAAS0B,EAAGX,GAAQf,CACnD,EAEEe,EAAKJ,EAAI,SAASe,GAChB,OAAON,UAAUO,QAAUhB,EAAiB,mBAANe,EAAmBA,EAAIE,GAAUF,GAAIX,GAAQJ,CACvF,EAEEI,EAAKF,EAAI,SAASa,GAChB,OAAON,UAAUO,QAAUd,EAAiB,mBAANa,EAAmBA,EAAIE,GAAUF,GAAIX,GAAQF,CACvF,EAEEE,EAAKb,QAAU,SAASwB,GACtB,OAAON,UAAUO,QAAWzB,EAAe,MAALwB,EAAY,KAAOA,EAAIX,GAAQb,CACzE,EAESa,CACT,CAsBSA,CAAKd,EACd"}