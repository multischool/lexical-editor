{"version":3,"file":"index.js","sources":["../../../../node_modules/ts-dedent/esm/index.js"],"sourcesContent":["export function dedent(templ) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    var strings = Array.from(typeof templ === 'string' ? [templ] : templ);\n    strings[strings.length - 1] = strings[strings.length - 1].replace(/\\r?\\n([\\t ]*)$/, '');\n    var indentLengths = strings.reduce(function (arr, str) {\n        var matches = str.match(/\\n([\\t ]+|(?!\\s).)/g);\n        if (matches) {\n            return arr.concat(matches.map(function (match) { var _a, _b; return (_b = (_a = match.match(/[\\t ]/g)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0; }));\n        }\n        return arr;\n    }, []);\n    if (indentLengths.length) {\n        var pattern_1 = new RegExp(\"\\n[\\t ]{\" + Math.min.apply(Math, indentLengths) + \"}\", 'g');\n        strings = strings.map(function (str) { return str.replace(pattern_1, '\\n'); });\n    }\n    strings[0] = strings[0].replace(/^\\r?\\n/, '');\n    var string = strings[0];\n    values.forEach(function (value, i) {\n        var endentations = string.match(/(?:^|\\n)( *)$/);\n        var endentation = endentations ? endentations[1] : '';\n        var indentedValue = value;\n        if (typeof value === 'string' && value.includes('\\n')) {\n            indentedValue = String(value)\n                .split('\\n')\n                .map(function (str, i) {\n                return i === 0 ? str : \"\" + endentation + str;\n            })\n                .join('\\n');\n        }\n        string += indentedValue + strings[i + 1];\n    });\n    return string;\n}\nexport default dedent;\n//# sourceMappingURL=index.js.map"],"names":["dedent","templ","values","_i","arguments","length","strings","Array","from","replace","indentLengths","reduce","arr","str","matches","match","concat","map","_a","_b","pattern_1","RegExp","Math","min","apply","string","forEach","value","i","endentations","endentation","indentedValue","includes","String","split","join"],"mappings":"AAAO,SAASA,EAAOC,GAEnB,IADA,IAAIC,EAAS,GACJC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACpCD,EAAOC,EAAK,GAAKC,UAAUD,GAE/B,IAAIG,EAAUC,MAAMC,KAAsB,iBAAVP,EAAqB,CAACA,GAASA,GAC/DK,EAAQA,EAAQD,OAAS,GAAKC,EAAQA,EAAQD,OAAS,GAAGI,QAAQ,iBAAkB,IACpF,IAAIC,EAAgBJ,EAAQK,QAAO,SAAUC,EAAKC,GAC9C,IAAIC,EAAUD,EAAIE,MAAM,uBACxB,OAAID,EACOF,EAAII,OAAOF,EAAQG,KAAI,SAAUF,GAAS,IAAIG,EAAIC,EAAI,OAA8F,QAAtFA,EAAsC,QAAhCD,EAAKH,EAAMA,MAAM,iBAA8B,IAAPG,OAAgB,EAASA,EAAGb,cAA2B,IAAPc,EAAgBA,EAAK,CAAI,KAEzLP,CACV,GAAE,IACH,GAAIF,EAAcL,OAAQ,CACtB,IAAIe,EAAY,IAAIC,OAAO,WAAaC,KAAKC,IAAIC,MAAMF,KAAMZ,GAAiB,IAAK,KACnFJ,EAAUA,EAAQW,KAAI,SAAUJ,GAAO,OAAOA,EAAIJ,QAAQW,EAAW,KAAQ,GAChF,CACDd,EAAQ,GAAKA,EAAQ,GAAGG,QAAQ,SAAU,IAC1C,IAAIgB,EAASnB,EAAQ,GAerB,OAdAJ,EAAOwB,SAAQ,SAAUC,EAAOC,GAC5B,IAAIC,EAAeJ,EAAOV,MAAM,iBAC5Be,EAAcD,EAAeA,EAAa,GAAK,GAC/CE,EAAgBJ,EACC,iBAAVA,GAAsBA,EAAMK,SAAS,QAC5CD,EAAgBE,OAAON,GAClBO,MAAM,MACNjB,KAAI,SAAUJ,EAAKe,GACpB,OAAa,IAANA,EAAUf,EAAM,GAAKiB,EAAcjB,CAC1D,IACiBsB,KAAK,OAEdV,GAAUM,EAAgBzB,EAAQsB,EAAI,EAC9C,IACWH,CACX"}