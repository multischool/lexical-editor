const t=Math.sqrt(50),r=Math.sqrt(10),n=Math.sqrt(2);function o(e,a,f){const u=(a-e)/Math.max(0,f),h=Math.floor(Math.log10(u)),M=u/Math.pow(10,h),s=M>=t?10:M>=r?5:M>=n?2:1;let l,i,c;return h<0?(c=Math.pow(10,-h)/s,l=Math.round(e*c),i=Math.round(a*c),l/c<e&&++l,i/c>a&&--i,c=-c):(c=Math.pow(10,h)*s,l=Math.round(e/c),i=Math.round(a/c),l*c<e&&++l,i*c>a&&--i),i<l&&.5<=f&&f<2?o(e,a,2*f):[l,i,c]}function e(t,r,n){if(!((n=+n)>0))return[];if((t=+t)===(r=+r))return[t];const e=r<t,[a,f,u]=e?o(r,t,n):o(t,r,n);if(!(f>=a))return[];const h=f-a+1,M=new Array(h);if(e)if(u<0)for(let t=0;t<h;++t)M[t]=(f-t)/-u;else for(let t=0;t<h;++t)M[t]=(f-t)*u;else if(u<0)for(let t=0;t<h;++t)M[t]=(a+t)/-u;else for(let t=0;t<h;++t)M[t]=(a+t)*u;return M}function a(t,r,n){return o(t=+t,r=+r,n=+n)[2]}function f(t,r,n){n=+n;const o=(r=+r)<(t=+t),e=o?a(r,t,n):a(t,r,n);return(o?-1:1)*(e<0?1/-e:e)}export{e as default,a as tickIncrement,f as tickStep};
//# sourceMappingURL=ticks.js.map
