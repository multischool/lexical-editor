import{HachureFiller as e}from"./hachure-filler.js";import{polygonHachureLines as r}from"./scan-line-hachure.js";import{lineLength as t}from"../geometry.js";class s extends e{fillPolygons(e,s){let h=s.hachureGap;h<0&&(h=4*s.strokeWidth),h=Math.max(h,.1);const o=Object.assign({},s,{hachureGap:h}),a=r(e,o),c=Math.PI/180*s.hachureAngle,i=[],n=.5*h*Math.cos(c),l=.5*h*Math.sin(c);for(const[e,r]of a)t([e,r])&&i.push([[e[0]-n,e[1]+l],[...r]],[[e[0]+n,e[1]-l],[...r]]);return{type:"fillSketch",ops:this.renderLines(i,s)}}}export{s as ZigZagFiller};
//# sourceMappingURL=zigzag-filler.js.map
