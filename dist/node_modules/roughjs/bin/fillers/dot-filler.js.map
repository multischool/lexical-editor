{"version":3,"file":"dot-filler.js","sources":["../../../../../node_modules/roughjs/bin/fillers/dot-filler.js"],"sourcesContent":["import { lineLength } from '../geometry';\nimport { polygonHachureLines } from './scan-line-hachure';\nexport class DotFiller {\n    constructor(helper) {\n        this.helper = helper;\n    }\n    fillPolygons(polygonList, o) {\n        o = Object.assign({}, o, { hachureAngle: 0 });\n        const lines = polygonHachureLines(polygonList, o);\n        return this.dotsOnLines(lines, o);\n    }\n    dotsOnLines(lines, o) {\n        const ops = [];\n        let gap = o.hachureGap;\n        if (gap < 0) {\n            gap = o.strokeWidth * 4;\n        }\n        gap = Math.max(gap, 0.1);\n        let fweight = o.fillWeight;\n        if (fweight < 0) {\n            fweight = o.strokeWidth / 2;\n        }\n        const ro = gap / 4;\n        for (const line of lines) {\n            const length = lineLength(line);\n            const dl = length / gap;\n            const count = Math.ceil(dl) - 1;\n            const offset = length - (count * gap);\n            const x = ((line[0][0] + line[1][0]) / 2) - (gap / 4);\n            const minY = Math.min(line[0][1], line[1][1]);\n            for (let i = 0; i < count; i++) {\n                const y = minY + offset + (i * gap);\n                const cx = (x - ro) + Math.random() * 2 * ro;\n                const cy = (y - ro) + Math.random() * 2 * ro;\n                const el = this.helper.ellipse(cx, cy, fweight, fweight, o);\n                ops.push(...el.ops);\n            }\n        }\n        return { type: 'fillSketch', ops };\n    }\n}\n"],"names":["DotFiller","constructor","helper","this","fillPolygons","polygonList","o","Object","assign","hachureAngle","lines","polygonHachureLines","dotsOnLines","ops","gap","hachureGap","strokeWidth","Math","max","fweight","fillWeight","ro","line","length","lineLength","dl","count","ceil","offset","x","minY","min","i","y","cx","random","cy","el","ellipse","push","type"],"mappings":"yGAEO,MAAMA,EACT,WAAAC,CAAYC,GACRC,KAAKD,OAASA,CACjB,CACD,YAAAE,CAAaC,EAAaC,GACtBA,EAAIC,OAAOC,OAAO,CAAE,EAAEF,EAAG,CAAEG,aAAc,IACzC,MAAMC,EAAQC,EAAoBN,EAAaC,GAC/C,OAAOH,KAAKS,YAAYF,EAAOJ,EAClC,CACD,WAAAM,CAAYF,EAAOJ,GACf,MAAMO,EAAM,GACZ,IAAIC,EAAMR,EAAES,WACRD,EAAM,IACNA,EAAsB,EAAhBR,EAAEU,aAEZF,EAAMG,KAAKC,IAAIJ,EAAK,IACpB,IAAIK,EAAUb,EAAEc,WACZD,EAAU,IACVA,EAAUb,EAAEU,YAAc,GAE9B,MAAMK,EAAKP,EAAM,EACjB,IAAK,MAAMQ,KAAQZ,EAAO,CACtB,MAAMa,EAASC,EAAWF,GACpBG,EAAKF,EAAST,EACdY,EAAQT,KAAKU,KAAKF,GAAM,EACxBG,EAASL,EAAUG,EAAQZ,EAC3Be,GAAMP,EAAK,GAAG,GAAKA,EAAK,GAAG,IAAM,EAAMR,EAAM,EAC7CgB,EAAOb,KAAKc,IAAIT,EAAK,GAAG,GAAIA,EAAK,GAAG,IAC1C,IAAK,IAAIU,EAAI,EAAGA,EAAIN,EAAOM,IAAK,CAC5B,MAAMC,EAAIH,EAAOF,EAAUI,EAAIlB,EACzBoB,EAAML,EAAIR,EAAsB,EAAhBJ,KAAKkB,SAAed,EACpCe,EAAMH,EAAIZ,EAAsB,EAAhBJ,KAAKkB,SAAed,EACpCgB,EAAKlC,KAAKD,OAAOoC,QAAQJ,EAAIE,EAAIjB,EAASA,EAASb,GACzDO,EAAI0B,QAAQF,EAAGxB,IAClB,CACJ,CACD,MAAO,CAAE2B,KAAM,aAAc3B,MAChC"}