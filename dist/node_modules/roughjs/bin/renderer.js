import{getFiller as t}from"./fillers/filler.js";import{Random as s}from"./math.js";import{parsePath as n}from"../../path-data-parser/lib/parser.js";import{absolutize as o}from"../../path-data-parser/lib/absolutize.js";import{normalize as e}from"../../path-data-parser/lib/normalize.js";const a={randOffset:g,randOffsetWithRange:P,ellipse:p,doubleLineOps:I};function r(t,s,n,o,e){return{type:"path",ops:k(t,s,n,o,e)}}function h(t,s,n){const o=(t||[]).length;if(o>2){const e=[];for(let s=0;s<o-1;s++)e.push(...k(t[s][0],t[s][1],t[s+1][0],t[s+1][1],n));return s&&e.push(...k(t[o-1][0],t[o-1][1],t[0][0],t[0][1],n)),{type:"path",ops:e}}return 2===o?r(t[0][0],t[0][1],t[1][0],t[1][1],n):{type:"path",ops:[]}}function u(t,s){return h(t,!0,s)}function c(t,s,n,o,e){return u([[t,s],[t+n,s],[t+n,s+o],[t,s+o]],e)}function i(t,s){let n=T(t,1*(1+.2*s.roughness),s);if(!s.disableMultiStroke){const o=T(t,1.5*(1+.22*s.roughness),function(t){const s=Object.assign({},t);s.randomizer=void 0,t.seed&&(s.seed=t.seed+1);return s}(s));n=n.concat(o)}return{type:"path",ops:n}}function p(t,s,n,o,e){return M(t,s,e,f(n,o,e)).opset}function f(t,s,n){const o=Math.sqrt(2*Math.PI*Math.sqrt((Math.pow(t/2,2)+Math.pow(s/2,2))/2)),e=Math.ceil(Math.max(n.curveStepCount,n.curveStepCount/Math.sqrt(200)*o)),a=2*Math.PI/e;let r=Math.abs(t/2),h=Math.abs(s/2);const u=1-n.curveFitting;return r+=O(r*u,n),h+=O(h*u,n),{increment:a,rx:r,ry:h}}function M(t,s,n,o){const[e,a]=R(o.increment,t,s,o.rx,o.ry,1,o.increment*y(.1,y(.4,1,n),n),n);let r=w(e,null,n);if(!n.disableMultiStroke&&0!==n.roughness){const[e]=R(o.increment,t,s,o.rx,o.ry,1.5,0,n),a=w(e,null,n);r=r.concat(a)}return{estimatedPoints:a,opset:{type:"path",ops:r}}}function l(t,s,n,o,e,a,r,h,u){const c=t,i=s;let p=Math.abs(n/2),f=Math.abs(o/2);p+=O(.01*p,u),f+=O(.01*f,u);let M=e,l=a;for(;M<0;)M+=2*Math.PI,l+=2*Math.PI;l-M>2*Math.PI&&(M=0,l=2*Math.PI);const d=2*Math.PI/u.curveStepCount,m=Math.min(d/2,(l-M)/2),b=j(m,c,i,p,f,M,l,1,u);if(!u.disableMultiStroke){const t=j(m,c,i,p,f,M,l,1.5,u);b.push(...t)}return r&&(h?b.push(...k(c,i,c+p*Math.cos(M),i+f*Math.sin(M),u),...k(c,i,c+p*Math.cos(l),i+f*Math.sin(l),u)):b.push({op:"lineTo",data:[c,i]},{op:"lineTo",data:[c+p*Math.cos(M),i+f*Math.sin(M)]})),{type:"path",ops:b}}function d(t,s){const a=e(o(n(t))),r=[];let h=[0,0],u=[0,0];for(const{key:t,data:n}of a)switch(t){case"M":u=[n[0],n[1]],h=[n[0],n[1]];break;case"L":r.push(...k(u[0],u[1],n[0],n[1],s)),u=[n[0],n[1]];break;case"C":{const[t,o,e,a,h,c]=n;r.push(...z(t,o,e,a,h,c,u,s)),u=[h,c];break}case"Z":r.push(...k(u[0],u[1],h[0],h[1],s)),u=[h[0],h[1]]}return{type:"path",ops:r}}function m(t,s){const n=[];for(const o of t)if(o.length){const t=s.maxRandomnessOffset||0,e=o.length;if(e>2){n.push({op:"move",data:[o[0][0]+O(t,s),o[0][1]+O(t,s)]});for(let a=1;a<e;a++)n.push({op:"lineTo",data:[o[a][0]+O(t,s),o[a][1]+O(t,s)]})}}return{type:"fillPath",ops:n}}function b(s,n){return t(n,a).fillPolygons(s,n)}function v(t,s,n,o,e,a,r){const h=t,u=s;let c=Math.abs(n/2),i=Math.abs(o/2);c+=O(.01*c,r),i+=O(.01*i,r);let p=e,f=a;for(;p<0;)p+=2*Math.PI,f+=2*Math.PI;f-p>2*Math.PI&&(p=0,f=2*Math.PI);const M=(f-p)/r.curveStepCount,l=[];for(let t=p;t<=f;t+=M)l.push([h+c*Math.cos(t),u+i*Math.sin(t)]);return l.push([h+c*Math.cos(f),u+i*Math.sin(f)]),l.push([h,u]),b([l],r)}function g(t,s){return O(t,s)}function P(t,s,n){return y(t,s,n)}function I(t,s,n,o,e){return k(t,s,n,o,e,!0)}function x(t){return t.randomizer||(t.randomizer=new s(t.seed||0)),t.randomizer.next()}function y(t,s,n,o=1){return n.roughness*o*(x(n)*(s-t)+t)}function O(t,s,n=1){return y(-t,t,s,n)}function k(t,s,n,o,e,a=!1){const r=a?e.disableMultiStrokeFill:e.disableMultiStroke,h=S(t,s,n,o,e,!0,!1);if(r)return h;const u=S(t,s,n,o,e,!0,!0);return h.concat(u)}function S(t,s,n,o,e,a,r){const h=Math.pow(t-n,2)+Math.pow(s-o,2),u=Math.sqrt(h);let c=1;c=u<200?1:u>500?.4:-.0016668*u+1.233334;let i=e.maxRandomnessOffset||0;i*i*100>h&&(i=u/10);const p=i/2,f=.2+.2*x(e);let M=e.bowing*e.maxRandomnessOffset*(o-s)/200,l=e.bowing*e.maxRandomnessOffset*(t-n)/200;M=O(M,e,c),l=O(l,e,c);const d=[],m=()=>O(p,e,c),b=()=>O(i,e,c),v=e.preserveVertices;return a&&(r?d.push({op:"move",data:[t+(v?0:m()),s+(v?0:m())]}):d.push({op:"move",data:[t+(v?0:O(i,e,c)),s+(v?0:O(i,e,c))]})),r?d.push({op:"bcurveTo",data:[M+t+(n-t)*f+m(),l+s+(o-s)*f+m(),M+t+2*(n-t)*f+m(),l+s+2*(o-s)*f+m(),n+(v?0:m()),o+(v?0:m())]}):d.push({op:"bcurveTo",data:[M+t+(n-t)*f+b(),l+s+(o-s)*f+b(),M+t+2*(n-t)*f+b(),l+s+2*(o-s)*f+b(),n+(v?0:b()),o+(v?0:b())]}),d}function T(t,s,n){const o=[];o.push([t[0][0]+O(s,n),t[0][1]+O(s,n)]),o.push([t[0][0]+O(s,n),t[0][1]+O(s,n)]);for(let e=1;e<t.length;e++)o.push([t[e][0]+O(s,n),t[e][1]+O(s,n)]),e===t.length-1&&o.push([t[e][0]+O(s,n),t[e][1]+O(s,n)]);return w(o,null,n)}function w(t,s,n){const o=t.length,e=[];if(o>3){const a=[],r=1-n.curveTightness;e.push({op:"move",data:[t[1][0],t[1][1]]});for(let s=1;s+2<o;s++){const n=t[s];a[0]=[n[0],n[1]],a[1]=[n[0]+(r*t[s+1][0]-r*t[s-1][0])/6,n[1]+(r*t[s+1][1]-r*t[s-1][1])/6],a[2]=[t[s+1][0]+(r*t[s][0]-r*t[s+2][0])/6,t[s+1][1]+(r*t[s][1]-r*t[s+2][1])/6],a[3]=[t[s+1][0],t[s+1][1]],e.push({op:"bcurveTo",data:[a[1][0],a[1][1],a[2][0],a[2][1],a[3][0],a[3][1]]})}if(s&&2===s.length){const t=n.maxRandomnessOffset;e.push({op:"lineTo",data:[s[0]+O(t,n),s[1]+O(t,n)]})}}else 3===o?(e.push({op:"move",data:[t[1][0],t[1][1]]}),e.push({op:"bcurveTo",data:[t[1][0],t[1][1],t[2][0],t[2][1],t[2][0],t[2][1]]})):2===o&&e.push(...k(t[0][0],t[0][1],t[1][0],t[1][1],n));return e}function R(t,s,n,o,e,a,r,h){const u=[],c=[];if(0===h.roughness){t/=4,c.push([s+o*Math.cos(-t),n+e*Math.sin(-t)]);for(let a=0;a<=2*Math.PI;a+=t){const t=[s+o*Math.cos(a),n+e*Math.sin(a)];u.push(t),c.push(t)}c.push([s+o*Math.cos(0),n+e*Math.sin(0)]),c.push([s+o*Math.cos(t),n+e*Math.sin(t)])}else{const i=O(.5,h)-Math.PI/2;c.push([O(a,h)+s+.9*o*Math.cos(i-t),O(a,h)+n+.9*e*Math.sin(i-t)]);const p=2*Math.PI+i-.01;for(let r=i;r<p;r+=t){const t=[O(a,h)+s+o*Math.cos(r),O(a,h)+n+e*Math.sin(r)];u.push(t),c.push(t)}c.push([O(a,h)+s+o*Math.cos(i+2*Math.PI+.5*r),O(a,h)+n+e*Math.sin(i+2*Math.PI+.5*r)]),c.push([O(a,h)+s+.98*o*Math.cos(i+r),O(a,h)+n+.98*e*Math.sin(i+r)]),c.push([O(a,h)+s+.9*o*Math.cos(i+.5*r),O(a,h)+n+.9*e*Math.sin(i+.5*r)])}return[c,u]}function j(t,s,n,o,e,a,r,h,u){const c=a+O(.1,u),i=[];i.push([O(h,u)+s+.9*o*Math.cos(c-t),O(h,u)+n+.9*e*Math.sin(c-t)]);for(let a=c;a<=r;a+=t)i.push([O(h,u)+s+o*Math.cos(a),O(h,u)+n+e*Math.sin(a)]);return i.push([s+o*Math.cos(r),n+e*Math.sin(r)]),i.push([s+o*Math.cos(r),n+e*Math.sin(r)]),w(i,null,u)}function z(t,s,n,o,e,a,r,h){const u=[],c=[h.maxRandomnessOffset||1,(h.maxRandomnessOffset||1)+.3];let i=[0,0];const p=h.disableMultiStroke?1:2,f=h.preserveVertices;for(let M=0;M<p;M++)0===M?u.push({op:"move",data:[r[0],r[1]]}):u.push({op:"move",data:[r[0]+(f?0:O(c[0],h)),r[1]+(f?0:O(c[0],h))]}),i=f?[e,a]:[e+O(c[M],h),a+O(c[M],h)],u.push({op:"bcurveTo",data:[t+O(c[M],h),s+O(c[M],h),n+O(c[M],h),o+O(c[M],h),i[0],i[1]]});return u}export{l as arc,i as curve,I as doubleLineFillOps,p as ellipse,M as ellipseWithParams,f as generateEllipseParams,r as line,h as linearPath,v as patternFillArc,b as patternFillPolygons,u as polygon,g as randOffset,P as randOffsetWithRange,c as rectangle,m as solidFillPolygon,d as svgPath};
//# sourceMappingURL=renderer.js.map
