{"version":3,"file":"canvas.js","sources":["../../../../node_modules/roughjs/bin/canvas.js"],"sourcesContent":["import { RoughGenerator } from './generator';\nexport class RoughCanvas {\n    constructor(canvas, config) {\n        this.canvas = canvas;\n        this.ctx = this.canvas.getContext('2d');\n        this.gen = new RoughGenerator(config);\n    }\n    draw(drawable) {\n        const sets = drawable.sets || [];\n        const o = drawable.options || this.getDefaultOptions();\n        const ctx = this.ctx;\n        const precision = drawable.options.fixedDecimalPlaceDigits;\n        for (const drawing of sets) {\n            switch (drawing.type) {\n                case 'path':\n                    ctx.save();\n                    ctx.strokeStyle = o.stroke === 'none' ? 'transparent' : o.stroke;\n                    ctx.lineWidth = o.strokeWidth;\n                    if (o.strokeLineDash) {\n                        ctx.setLineDash(o.strokeLineDash);\n                    }\n                    if (o.strokeLineDashOffset) {\n                        ctx.lineDashOffset = o.strokeLineDashOffset;\n                    }\n                    this._drawToContext(ctx, drawing, precision);\n                    ctx.restore();\n                    break;\n                case 'fillPath': {\n                    ctx.save();\n                    ctx.fillStyle = o.fill || '';\n                    const fillRule = (drawable.shape === 'curve' || drawable.shape === 'polygon' || drawable.shape === 'path') ? 'evenodd' : 'nonzero';\n                    this._drawToContext(ctx, drawing, precision, fillRule);\n                    ctx.restore();\n                    break;\n                }\n                case 'fillSketch':\n                    this.fillSketch(ctx, drawing, o);\n                    break;\n            }\n        }\n    }\n    fillSketch(ctx, drawing, o) {\n        let fweight = o.fillWeight;\n        if (fweight < 0) {\n            fweight = o.strokeWidth / 2;\n        }\n        ctx.save();\n        if (o.fillLineDash) {\n            ctx.setLineDash(o.fillLineDash);\n        }\n        if (o.fillLineDashOffset) {\n            ctx.lineDashOffset = o.fillLineDashOffset;\n        }\n        ctx.strokeStyle = o.fill || '';\n        ctx.lineWidth = fweight;\n        this._drawToContext(ctx, drawing, o.fixedDecimalPlaceDigits);\n        ctx.restore();\n    }\n    _drawToContext(ctx, drawing, fixedDecimals, rule = 'nonzero') {\n        ctx.beginPath();\n        for (const item of drawing.ops) {\n            const data = ((typeof fixedDecimals === 'number') && fixedDecimals >= 0) ? (item.data.map((d) => +d.toFixed(fixedDecimals))) : item.data;\n            switch (item.op) {\n                case 'move':\n                    ctx.moveTo(data[0], data[1]);\n                    break;\n                case 'bcurveTo':\n                    ctx.bezierCurveTo(data[0], data[1], data[2], data[3], data[4], data[5]);\n                    break;\n                case 'lineTo':\n                    ctx.lineTo(data[0], data[1]);\n                    break;\n            }\n        }\n        if (drawing.type === 'fillPath') {\n            ctx.fill(rule);\n        }\n        else {\n            ctx.stroke();\n        }\n    }\n    get generator() {\n        return this.gen;\n    }\n    getDefaultOptions() {\n        return this.gen.defaultOptions;\n    }\n    line(x1, y1, x2, y2, options) {\n        const d = this.gen.line(x1, y1, x2, y2, options);\n        this.draw(d);\n        return d;\n    }\n    rectangle(x, y, width, height, options) {\n        const d = this.gen.rectangle(x, y, width, height, options);\n        this.draw(d);\n        return d;\n    }\n    ellipse(x, y, width, height, options) {\n        const d = this.gen.ellipse(x, y, width, height, options);\n        this.draw(d);\n        return d;\n    }\n    circle(x, y, diameter, options) {\n        const d = this.gen.circle(x, y, diameter, options);\n        this.draw(d);\n        return d;\n    }\n    linearPath(points, options) {\n        const d = this.gen.linearPath(points, options);\n        this.draw(d);\n        return d;\n    }\n    polygon(points, options) {\n        const d = this.gen.polygon(points, options);\n        this.draw(d);\n        return d;\n    }\n    arc(x, y, width, height, start, stop, closed = false, options) {\n        const d = this.gen.arc(x, y, width, height, start, stop, closed, options);\n        this.draw(d);\n        return d;\n    }\n    curve(points, options) {\n        const d = this.gen.curve(points, options);\n        this.draw(d);\n        return d;\n    }\n    path(d, options) {\n        const drawing = this.gen.path(d, options);\n        this.draw(drawing);\n        return drawing;\n    }\n}\n"],"names":["RoughCanvas","constructor","canvas","config","this","ctx","getContext","gen","RoughGenerator","draw","drawable","sets","o","options","getDefaultOptions","precision","fixedDecimalPlaceDigits","drawing","type","save","strokeStyle","stroke","lineWidth","strokeWidth","strokeLineDash","setLineDash","strokeLineDashOffset","lineDashOffset","_drawToContext","restore","fillStyle","fill","fillRule","shape","fillSketch","fweight","fillWeight","fillLineDash","fillLineDashOffset","fixedDecimals","rule","beginPath","item","ops","data","map","d","toFixed","op","moveTo","bezierCurveTo","lineTo","generator","defaultOptions","line","x1","y1","x2","y2","rectangle","x","y","width","height","ellipse","circle","diameter","linearPath","points","polygon","arc","start","stop","closed","curve","path"],"mappings":"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"}