import{SVGNS as t}from"./core.js";import{RoughGenerator as e}from"./generator.js";class s{constructor(t,s){this.svg=t,this.gen=new e(s)}draw(e){const s=e.sets||[],r=e.options||this.getDefaultOptions(),i=this.svg.ownerDocument||window.document,n=i.createElementNS(t,"g"),o=e.options.fixedDecimalPlaceDigits;for(const a of s){let s=null;switch(a.type){case"path":s=i.createElementNS(t,"path"),s.setAttribute("d",this.opsToPath(a,o)),s.setAttribute("stroke",r.stroke),s.setAttribute("stroke-width",r.strokeWidth+""),s.setAttribute("fill","none"),r.strokeLineDash&&s.setAttribute("stroke-dasharray",r.strokeLineDash.join(" ").trim()),r.strokeLineDashOffset&&s.setAttribute("stroke-dashoffset",`${r.strokeLineDashOffset}`);break;case"fillPath":s=i.createElementNS(t,"path"),s.setAttribute("d",this.opsToPath(a,o)),s.setAttribute("stroke","none"),s.setAttribute("stroke-width","0"),s.setAttribute("fill",r.fill||""),"curve"!==e.shape&&"polygon"!==e.shape||s.setAttribute("fill-rule","evenodd");break;case"fillSketch":s=this.fillSketch(i,a,r)}s&&n.appendChild(s)}return n}fillSketch(e,s,r){let i=r.fillWeight;i<0&&(i=r.strokeWidth/2);const n=e.createElementNS(t,"path");return n.setAttribute("d",this.opsToPath(s,r.fixedDecimalPlaceDigits)),n.setAttribute("stroke",r.fill||""),n.setAttribute("stroke-width",i+""),n.setAttribute("fill","none"),r.fillLineDash&&n.setAttribute("stroke-dasharray",r.fillLineDash.join(" ").trim()),r.fillLineDashOffset&&n.setAttribute("stroke-dashoffset",`${r.fillLineDashOffset}`),n}get generator(){return this.gen}getDefaultOptions(){return this.gen.defaultOptions}opsToPath(t,e){return this.gen.opsToPath(t,e)}line(t,e,s,r,i){const n=this.gen.line(t,e,s,r,i);return this.draw(n)}rectangle(t,e,s,r,i){const n=this.gen.rectangle(t,e,s,r,i);return this.draw(n)}ellipse(t,e,s,r,i){const n=this.gen.ellipse(t,e,s,r,i);return this.draw(n)}circle(t,e,s,r){const i=this.gen.circle(t,e,s,r);return this.draw(i)}linearPath(t,e){const s=this.gen.linearPath(t,e);return this.draw(s)}polygon(t,e){const s=this.gen.polygon(t,e);return this.draw(s)}arc(t,e,s,r,i,n,o=!1,a){const h=this.gen.arc(t,e,s,r,i,n,o,a);return this.draw(h)}curve(t,e){const s=this.gen.curve(t,e);return this.draw(s)}path(t,e){const s=this.gen.path(t,e);return this.draw(s)}}export{s as RoughSVG};
//# sourceMappingURL=svg.js.map
