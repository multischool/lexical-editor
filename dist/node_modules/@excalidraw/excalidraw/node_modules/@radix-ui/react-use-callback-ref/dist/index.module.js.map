{"version":3,"file":"index.module.js","sources":["../../../../../../../../node_modules/@excalidraw/excalidraw/node_modules/@radix-ui/react-use-callback-ref/dist/index.module.js"],"sourcesContent":["import {useRef as $lwiWj$useRef, useEffect as $lwiWj$useEffect, useMemo as $lwiWj$useMemo} from \"react\";\n\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */ function $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback) {\n    const callbackRef = $lwiWj$useRef(callback);\n    $lwiWj$useEffect(()=>{\n        callbackRef.current = callback;\n    }); // https://github.com/facebook/react/issues/19240\n    return $lwiWj$useMemo(()=>(...args)=>{\n            var _callbackRef$current;\n            return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);\n        }\n    , []);\n}\n\n\n\n\nexport {$b1b2314f5f9a1d84$export$25bec8c6f54ee79a as useCallbackRef};\n//# sourceMappingURL=index.module.js.map\n"],"names":["$b1b2314f5f9a1d84$export$25bec8c6f54ee79a","callback","callbackRef","$lwiWj$useRef","$lwiWj$useEffect","current","$lwiWj$useMemo","args","_callbackRef$current","call"],"mappings":"2DAMI,SAASA,EAA0CC,GACnD,MAAMC,EAAcC,EAAcF,GAIlC,OAHAG,GAAiB,KACbF,EAAYG,QAAUJ,CAAQ,IAE3BK,GAAe,IAAI,IAAIC,KACtB,IAAIC,EACJ,OAAwD,QAAhDA,EAAuBN,EAAYG,eAA8C,IAAzBG,OAAkC,EAASA,EAAqBC,KAAKP,KAAgBK,EAAK,GAEhK,GACN"}