import{nanoid as e}from"../../../node_modules/nanoid/index.js";import{GraphConverter as t}from"../GraphConverter.js";import{transformToExcalidrawTextSkeleton as i,transformToExcalidrawContainerSkeleton as o,transformToExcalidrawLineSkeleton as r,transformToExcalidrawArrowSkeleton as s}from"../transformToExcalidrawSkeleton.js";const n=new t({converter:t=>{const n=[],h=[];if(Object.values(t.nodes).forEach((e=>{e&&e.length&&e.forEach((e=>{let t;switch(e.type){case"line":t=r(e);break;case"rectangle":case"ellipse":t=o(e);break;case"text":t=i(e);break;default:throw`unknown type ${e.type}`}"rectangle"===e.type&&"activation"===e?.subtype?h.push(t):n.push(t)}))})),Object.values(t.lines).forEach((e=>{e&&n.push(r(e))})),Object.values(t.arrows).forEach((e=>{e&&(n.push(s(e)),e.sequenceNumber&&n.push(o(e.sequenceNumber)))})),n.push(...h),t.loops){const{lines:e,texts:s,nodes:h}=t.loops;e.forEach((e=>{n.push(r(e))})),s.forEach((e=>{n.push(i(e))})),h.forEach((e=>{n.push(o(e))}))}return t.groups&&t.groups.forEach((t=>{const{actorKeys:i,name:r}=t;let s=1/0,h=1/0,a=0,c=0;if(!i.length)return;n.filter((e=>{if(e.id){const t=e.id.indexOf("-"),o=e.id.substring(0,t);return i.includes(o)}})).forEach((e=>{if(void 0===e.x||void 0===e.y||void 0===e.width||void 0===e.height)throw new Error(`Actor attributes missing ${e}`);s=Math.min(s,e.x),h=Math.min(h,e.y),a=Math.max(a,e.x+e.width),c=Math.max(c,e.y+e.height)}));const d=s-10,u=h-10,l=a-s+20,p=c-h+20,f=e(),m=o({type:"rectangle",x:d,y:u,width:l,height:p,bgColor:t.fill,id:f});n.unshift(m);const g=e(),y=[f];n.forEach((t=>{if("frame"!==t.type){if(void 0===t.x||void 0===t.y||void 0===t.width||void 0===t.height)throw new Error(`Element attributes missing ${t}`);if(t.x>=s&&t.x+t.width<=a&&t.y>=h&&t.y+t.height<=c){const i=t.id||e();t.id||Object.assign(t,{id:i}),y.push(i)}}}));const w={type:"frame",id:g,name:r,children:y};n.push(w)})),{elements:n}}});export{n as SequenceToExcalidrawSkeletonConvertor};
//# sourceMappingURL=sequence.js.map
