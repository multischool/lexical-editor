import{nanoid as e}from"../../../node_modules/nanoid/index.js";import{transformToExcalidrawTextSkeleton as t,transformToExcalidrawContainerSkeleton as s,transformToExcalidrawLineSkeleton as a,transformToExcalidrawArrowSkeleton as r}from"../transformToExcalidrawSkeleton.js";import{GraphConverter as o}from"../GraphConverter.js";const c=new o({converter:o=>{const c=[];return Object.values(o.nodes).forEach((e=>{e&&e.length&&e.forEach((e=>{let r;switch(e.type){case"line":r=a(e);break;case"rectangle":case"ellipse":r=s(e);break;case"text":r=t(e);break;default:throw`unknown type ${e.type}`}c.push(r)}))})),Object.values(o.lines).forEach((e=>{e&&c.push(a(e))})),Object.values(o.arrows).forEach((e=>{if(!e)return;const t=r(e);c.push(t)})),Object.values(o.text).forEach((e=>{const s=t(e);c.push(s)})),Object.values(o.namespaces).forEach((t=>{const s=Object.keys(t.classes),a=[...s],r=[...o.lines,...o.arrows,...o.text];s.forEach((e=>{const t=r.filter((t=>t.metadata&&t.metadata.classId===e)).map((e=>e.id));t.length&&a.push(...t)}));const n={type:"frame",id:e(),name:t.id,children:a};c.push(n)})),{elements:c}}});export{c as classToExcalidrawSkeletonConvertor};
//# sourceMappingURL=class.js.map
