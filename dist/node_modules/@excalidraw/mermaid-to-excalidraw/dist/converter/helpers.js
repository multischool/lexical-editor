import{CONTAINER_STYLE_PROPERTY as r,LABEL_STYLE_PROPERTY as e}from"../interfaces.js";import{removeMarkdown as o}from"../../../markdown-to-text/dist/index.js";const a={arrow_circle:{endArrowhead:"dot"},arrow_cross:{endArrowhead:"bar"},arrow_open:{endArrowhead:null,startArrowhead:null},double_arrow_circle:{endArrowhead:"dot",startArrowhead:"dot"},double_arrow_cross:{endArrowhead:"bar",startArrowhead:"bar"},double_arrow_point:{endArrowhead:"arrow",startArrowhead:"arrow"}},t=r=>a[r],d=r=>{let e=r.text;return"markdown"===r.labelType&&(e=o(r.text)),s(e)},s=r=>r.replace(/\s?(fa|fab):[a-zA-Z0-9-]+/g,""),l=e=>{const o={};return Object.keys(e).forEach((a=>{switch(a){case r.FILL:o.backgroundColor=e[a],o.fillStyle="solid";break;case r.STROKE:o.strokeColor=e[a];break;case r.STROKE_WIDTH:o.strokeWidth=Number(e[a]?.split("px")[0]);break;case r.STROKE_DASHARRAY:o.strokeStyle="dashed"}})),o},n=r=>{const o={};return Object.keys(r).forEach((a=>{if(a===e.COLOR)o.strokeColor=r[a]})),o};export{t as computeExcalidrawArrowType,n as computeExcalidrawVertexLabelStyle,l as computeExcalidrawVertexStyle,d as getText};
//# sourceMappingURL=helpers.js.map
