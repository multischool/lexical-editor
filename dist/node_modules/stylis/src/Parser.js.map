{"version":3,"file":"Parser.js","sources":["../../../../node_modules/stylis/src/Parser.js"],"sourcesContent":["import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, charat, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, token, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && charat(characters, length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f', abs(index ? points[index - 1] : 0)) != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent, declarations), declarations)\n\t\t\t\t\t\tif ((token(previous || 1) == 5 || token(peek() || 1) == 5) && strlen(characters) && substr(characters, -1, void 0) !== ' ') characters += ' '\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset: if (ampersand == -1) characters = replace(characters, /\\f/g, '')\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length || (variable === 0 && previous === 47)))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1, declarations) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2, declarations), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length, rulesets), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tswitch (atrule) {\n\t\t\t\t\t\t\t\t\t// c(ontainer)\n\t\t\t\t\t\t\t\t\tcase 99:\n\t\t\t\t\t\t\t\t\t\tif (charat(characters, 3) === 110) break\n\t\t\t\t\t\t\t\t\t// l(ayer)\n\t\t\t\t\t\t\t\t\tcase 108:\n\t\t\t\t\t\t\t\t\t\tif (charat(characters, 2) === 97) break\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\toffset = 0\n\t\t\t\t\t\t\t\t\t// d(ocument) m(edia) s(upports)\n\t\t\t\t\t\t\t\t\tcase 100: case 109: case 115:\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (offset) parse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length, children), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\telse parse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @param {object[]} siblings\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length, siblings) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length, siblings)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @param {object[]} siblings\n * @return {object}\n */\nexport function comment (value, root, parent, siblings) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0, siblings)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @param {object[]} siblings\n * @return {object}\n */\nexport function declaration (value, root, parent, length, siblings) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length, siblings)\n}\n"],"names":["compile","value","dealloc","parse","alloc","root","parent","rule","rules","rulesets","pseudo","points","declarations","index","offset","length","atrule","property","previous","variable","scanning","ampersand","character","type","props","children","reference","characters","next","charat","indexof","replace","delimit","abs","whitespace","escaping","caret","peek","append","comment","commenter","token","strlen","substr","declaration","ruleset","prev","from","identifier","siblings","post","size","sizeof","i","j","k","x","y","z","trim","node","RULESET","COMMENT","char","DECLARATION"],"mappings":"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"}