import{splice as t}from"../micromark-util-chunked/index.js";function e(e){const i={};let s,o,r,l,p,f,c,g=-1;for(;++g<e.length;){for(;g in i;)g=i[g];if(s=e[g],g&&"chunkFlow"===s[1].type&&"listItemPrefix"===e[g-1][1].type&&(f=s[1]._tokenizer.events,r=0,r<f.length&&"lineEndingBlank"===f[r][1].type&&(r+=2),r<f.length&&"content"===f[r][1].type))for(;++r<f.length&&"content"!==f[r][1].type;)"chunkText"===f[r][1].type&&(f[r][1]._isInFirstContentOfListItem=!0,r++);if("enter"===s[0])s[1].contentType&&(Object.assign(i,n(e,g)),g=i[g],c=!0);else if(s[1]._container){for(r=g,o=void 0;r--&&(l=e[r],"lineEnding"===l[1].type||"lineEndingBlank"===l[1].type);)"enter"===l[0]&&(o&&(e[o][1].type="lineEndingBlank"),l[1].type="lineEnding",o=r);o&&(s[1].end=Object.assign({},e[o][1].start),p=e.slice(o,g),p.unshift(s),t(e,o,g-o+1,p))}}return!c}function n(e,n){const i=e[n][1],s=e[n][2];let o=n-1;const r=[],l=i._tokenizer||s.parser[i.contentType](i.start),p=l.events,f=[],c={};let g,d,h=-1,u=i,a=0,k=0;const y=[k];for(;u;){for(;e[++o][1]!==u;);r.push(o),u._tokenizer||(g=s.sliceStream(u),u.next||g.push(null),d&&l.defineSkip(u.start),u._isInFirstContentOfListItem&&(l._gfmTasklistFirstContentOfListItem=!0),l.write(g),u._isInFirstContentOfListItem&&(l._gfmTasklistFirstContentOfListItem=void 0)),d=u,u=u.next}for(u=i;++h<p.length;)"exit"===p[h][0]&&"enter"===p[h-1][0]&&p[h][1].type===p[h-1][1].type&&p[h][1].start.line!==p[h][1].end.line&&(k=h+1,y.push(k),u._tokenizer=void 0,u.previous=void 0,u=u.next);for(l.events=[],u?(u._tokenizer=void 0,u.previous=void 0):y.pop(),h=y.length;h--;){const n=p.slice(y[h],y[h+1]),i=r.pop();f.unshift([i,i+n.length-1]),t(e,i,2,n)}for(h=-1;++h<f.length;)c[a+f[h][0]]=a+f[h][1],a+=f[h][1]-f[h][0]-1;return c}export{e as subtokenize};
//# sourceMappingURL=index.js.map
