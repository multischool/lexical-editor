{"version":3,"file":"index.mjs.js","sources":["../../../../../node_modules/@radix-ui/react-focus-scope/dist/index.mjs"],"sourcesContent":["\"use client\";\n\n// packages/react/focus-scope/src/focus-scope.tsx\nimport * as React from \"react\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AUTOFOCUS_ON_MOUNT = \"focusScope.autoFocusOnMount\";\nvar AUTOFOCUS_ON_UNMOUNT = \"focusScope.autoFocusOnUnmount\";\nvar EVENT_OPTIONS = { bubbles: false, cancelable: true };\nvar FOCUS_SCOPE_NAME = \"FocusScope\";\nvar FocusScope = React.forwardRef((props, forwardedRef) => {\n  const {\n    loop = false,\n    trapped = false,\n    onMountAutoFocus: onMountAutoFocusProp,\n    onUnmountAutoFocus: onUnmountAutoFocusProp,\n    ...scopeProps\n  } = props;\n  const [container, setContainer] = React.useState(null);\n  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);\n  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);\n  const lastFocusedElementRef = React.useRef(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));\n  const focusScope = React.useRef({\n    paused: false,\n    pause() {\n      this.paused = true;\n    },\n    resume() {\n      this.paused = false;\n    }\n  }).current;\n  React.useEffect(() => {\n    if (trapped) {\n      let handleFocusIn2 = function(event) {\n        if (focusScope.paused || !container) return;\n        const target = event.target;\n        if (container.contains(target)) {\n          lastFocusedElementRef.current = target;\n        } else {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }, handleFocusOut2 = function(event) {\n        if (focusScope.paused || !container) return;\n        const relatedTarget = event.relatedTarget;\n        if (relatedTarget === null) return;\n        if (!container.contains(relatedTarget)) {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }, handleMutations2 = function(mutations) {\n        const focusedElement = document.activeElement;\n        if (focusedElement !== document.body) return;\n        for (const mutation of mutations) {\n          if (mutation.removedNodes.length > 0) focus(container);\n        }\n      };\n      var handleFocusIn = handleFocusIn2, handleFocusOut = handleFocusOut2, handleMutations = handleMutations2;\n      document.addEventListener(\"focusin\", handleFocusIn2);\n      document.addEventListener(\"focusout\", handleFocusOut2);\n      const mutationObserver = new MutationObserver(handleMutations2);\n      if (container) mutationObserver.observe(container, { childList: true, subtree: true });\n      return () => {\n        document.removeEventListener(\"focusin\", handleFocusIn2);\n        document.removeEventListener(\"focusout\", handleFocusOut2);\n        mutationObserver.disconnect();\n      };\n    }\n  }, [trapped, container, focusScope.paused]);\n  React.useEffect(() => {\n    if (container) {\n      focusScopesStack.add(focusScope);\n      const previouslyFocusedElement = document.activeElement;\n      const hasFocusedCandidate = container.contains(previouslyFocusedElement);\n      if (!hasFocusedCandidate) {\n        const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);\n        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n        container.dispatchEvent(mountEvent);\n        if (!mountEvent.defaultPrevented) {\n          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });\n          if (document.activeElement === previouslyFocusedElement) {\n            focus(container);\n          }\n        }\n      }\n      return () => {\n        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n        setTimeout(() => {\n          const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);\n          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n          container.dispatchEvent(unmountEvent);\n          if (!unmountEvent.defaultPrevented) {\n            focus(previouslyFocusedElement ?? document.body, { select: true });\n          }\n          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n          focusScopesStack.remove(focusScope);\n        }, 0);\n      };\n    }\n  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);\n  const handleKeyDown = React.useCallback(\n    (event) => {\n      if (!loop && !trapped) return;\n      if (focusScope.paused) return;\n      const isTabKey = event.key === \"Tab\" && !event.altKey && !event.ctrlKey && !event.metaKey;\n      const focusedElement = document.activeElement;\n      if (isTabKey && focusedElement) {\n        const container2 = event.currentTarget;\n        const [first, last] = getTabbableEdges(container2);\n        const hasTabbableElementsInside = first && last;\n        if (!hasTabbableElementsInside) {\n          if (focusedElement === container2) event.preventDefault();\n        } else {\n          if (!event.shiftKey && focusedElement === last) {\n            event.preventDefault();\n            if (loop) focus(first, { select: true });\n          } else if (event.shiftKey && focusedElement === first) {\n            event.preventDefault();\n            if (loop) focus(last, { select: true });\n          }\n        }\n      }\n    },\n    [loop, trapped, focusScope.paused]\n  );\n  return /* @__PURE__ */ jsx(Primitive.div, { tabIndex: -1, ...scopeProps, ref: composedRefs, onKeyDown: handleKeyDown });\n});\nFocusScope.displayName = FOCUS_SCOPE_NAME;\nfunction focusFirst(candidates, { select = false } = {}) {\n  const previouslyFocusedElement = document.activeElement;\n  for (const candidate of candidates) {\n    focus(candidate, { select });\n    if (document.activeElement !== previouslyFocusedElement) return;\n  }\n}\nfunction getTabbableEdges(container) {\n  const candidates = getTabbableCandidates(container);\n  const first = findVisible(candidates, container);\n  const last = findVisible(candidates.reverse(), container);\n  return [first, last];\n}\nfunction getTabbableCandidates(container) {\n  const nodes = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node) => {\n      const isHiddenInput = node.tagName === \"INPUT\" && node.type === \"hidden\";\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    }\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode);\n  return nodes;\n}\nfunction findVisible(elements, container) {\n  for (const element of elements) {\n    if (!isHidden(element, { upTo: container })) return element;\n  }\n}\nfunction isHidden(node, { upTo }) {\n  if (getComputedStyle(node).visibility === \"hidden\") return true;\n  while (node) {\n    if (upTo !== void 0 && node === upTo) return false;\n    if (getComputedStyle(node).display === \"none\") return true;\n    node = node.parentElement;\n  }\n  return false;\n}\nfunction isSelectableInput(element) {\n  return element instanceof HTMLInputElement && \"select\" in element;\n}\nfunction focus(element, { select = false } = {}) {\n  if (element && element.focus) {\n    const previouslyFocusedElement = document.activeElement;\n    element.focus({ preventScroll: true });\n    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)\n      element.select();\n  }\n}\nvar focusScopesStack = createFocusScopesStack();\nfunction createFocusScopesStack() {\n  let stack = [];\n  return {\n    add(focusScope) {\n      const activeFocusScope = stack[0];\n      if (focusScope !== activeFocusScope) {\n        activeFocusScope?.pause();\n      }\n      stack = arrayRemove(stack, focusScope);\n      stack.unshift(focusScope);\n    },\n    remove(focusScope) {\n      stack = arrayRemove(stack, focusScope);\n      stack[0]?.resume();\n    }\n  };\n}\nfunction arrayRemove(array, item) {\n  const updatedArray = [...array];\n  const index = updatedArray.indexOf(item);\n  if (index !== -1) {\n    updatedArray.splice(index, 1);\n  }\n  return updatedArray;\n}\nfunction removeLinks(items) {\n  return items.filter((item) => item.tagName !== \"A\");\n}\nvar Root = FocusScope;\nexport {\n  FocusScope,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["AUTOFOCUS_ON_MOUNT","AUTOFOCUS_ON_UNMOUNT","EVENT_OPTIONS","bubbles","cancelable","FocusScope","React","forwardRef","props","forwardedRef","loop","trapped","onMountAutoFocus","onMountAutoFocusProp","onUnmountAutoFocus","onUnmountAutoFocusProp","scopeProps","container","setContainer","useState","useCallbackRef","lastFocusedElementRef","useRef","composedRefs","useComposedRefs","node","focusScope","paused","pause","this","resume","current","useEffect","handleFocusIn2","event","target","contains","focus","select","handleFocusOut2","relatedTarget","handleMutations2","mutations","document","activeElement","body","mutation","removedNodes","length","addEventListener","mutationObserver","MutationObserver","observe","childList","subtree","removeEventListener","disconnect","focusScopesStack","add","previouslyFocusedElement","mountEvent","CustomEvent","dispatchEvent","defaultPrevented","candidates","candidate","focusFirst","items","getTabbableCandidates","filter","item","tagName","setTimeout","unmountEvent","remove","handleKeyDown","useCallback","isTabKey","key","altKey","ctrlKey","metaKey","focusedElement","container2","currentTarget","first","last","findVisible","reverse","getTabbableEdges","shiftKey","preventDefault","jsx","exports","Primitive","div","tabIndex","ref","onKeyDown","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","isHiddenInput","type","disabled","hidden","FILTER_SKIP","FILTER_ACCEPT","nextNode","push","currentNode","elements","element","isHidden","upTo","getComputedStyle","visibility","display","parentElement","preventScroll","HTMLInputElement","isSelectableInput","displayName","stack","activeFocusScope","arrayRemove","unshift","createFocusScopesStack","array","updatedArray","index","indexOf","splice"],"mappings":"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"}