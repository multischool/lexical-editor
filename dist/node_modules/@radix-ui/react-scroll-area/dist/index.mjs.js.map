{"version":3,"file":"index.mjs.js","sources":["../../../../../node_modules/@radix-ui/react-scroll-area/dist/index.mjs"],"sourcesContent":["\"use client\";\n\n// packages/react/scroll-area/src/scroll-area.tsx\nimport * as React2 from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { clamp } from \"@radix-ui/number\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\n\n// packages/react/scroll-area/src/use-state-machine.ts\nimport * as React from \"react\";\nfunction useStateMachine(initialState, machine) {\n  return React.useReducer((state, event) => {\n    const nextState = machine[state][event];\n    return nextState ?? state;\n  }, initialState);\n}\n\n// packages/react/scroll-area/src/scroll-area.tsx\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar SCROLL_AREA_NAME = \"ScrollArea\";\nvar [createScrollAreaContext, createScrollAreaScope] = createContextScope(SCROLL_AREA_NAME);\nvar [ScrollAreaProvider, useScrollAreaContext] = createScrollAreaContext(SCROLL_AREA_NAME);\nvar ScrollArea = React2.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeScrollArea,\n      type = \"hover\",\n      dir,\n      scrollHideDelay = 600,\n      ...scrollAreaProps\n    } = props;\n    const [scrollArea, setScrollArea] = React2.useState(null);\n    const [viewport, setViewport] = React2.useState(null);\n    const [content, setContent] = React2.useState(null);\n    const [scrollbarX, setScrollbarX] = React2.useState(null);\n    const [scrollbarY, setScrollbarY] = React2.useState(null);\n    const [cornerWidth, setCornerWidth] = React2.useState(0);\n    const [cornerHeight, setCornerHeight] = React2.useState(0);\n    const [scrollbarXEnabled, setScrollbarXEnabled] = React2.useState(false);\n    const [scrollbarYEnabled, setScrollbarYEnabled] = React2.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setScrollArea(node));\n    const direction = useDirection(dir);\n    return /* @__PURE__ */ jsx(\n      ScrollAreaProvider,\n      {\n        scope: __scopeScrollArea,\n        type,\n        dir: direction,\n        scrollHideDelay,\n        scrollArea,\n        viewport,\n        onViewportChange: setViewport,\n        content,\n        onContentChange: setContent,\n        scrollbarX,\n        onScrollbarXChange: setScrollbarX,\n        scrollbarXEnabled,\n        onScrollbarXEnabledChange: setScrollbarXEnabled,\n        scrollbarY,\n        onScrollbarYChange: setScrollbarY,\n        scrollbarYEnabled,\n        onScrollbarYEnabledChange: setScrollbarYEnabled,\n        onCornerWidthChange: setCornerWidth,\n        onCornerHeightChange: setCornerHeight,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            dir: direction,\n            ...scrollAreaProps,\n            ref: composedRefs,\n            style: {\n              position: \"relative\",\n              // Pass corner sizes as CSS vars to reduce re-renders of context consumers\n              [\"--radix-scroll-area-corner-width\"]: cornerWidth + \"px\",\n              [\"--radix-scroll-area-corner-height\"]: cornerHeight + \"px\",\n              ...props.style\n            }\n          }\n        )\n      }\n    );\n  }\n);\nScrollArea.displayName = SCROLL_AREA_NAME;\nvar VIEWPORT_NAME = \"ScrollAreaViewport\";\nvar ScrollAreaViewport = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeScrollArea, children, nonce, ...viewportProps } = props;\n    const context = useScrollAreaContext(VIEWPORT_NAME, __scopeScrollArea);\n    const ref = React2.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onViewportChange);\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(\n        \"style\",\n        {\n          dangerouslySetInnerHTML: {\n            __html: `[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}`\n          },\n          nonce\n        }\n      ),\n      /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          \"data-radix-scroll-area-viewport\": \"\",\n          ...viewportProps,\n          ref: composedRefs,\n          style: {\n            /**\n             * We don't support `visible` because the intention is to have at least one scrollbar\n             * if this component is used and `visible` will behave like `auto` in that case\n             * https://developer.mozilla.org/en-US/docs/Web/CSS/overflow#description\n             *\n             * We don't handle `auto` because the intention is for the native implementation\n             * to be hidden if using this component. We just want to ensure the node is scrollable\n             * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n             * the browser from having to work out whether to render native scrollbars or not,\n             * we tell it to with the intention of hiding them in CSS.\n             */\n            overflowX: context.scrollbarXEnabled ? \"scroll\" : \"hidden\",\n            overflowY: context.scrollbarYEnabled ? \"scroll\" : \"hidden\",\n            ...props.style\n          },\n          children: /* @__PURE__ */ jsx(\"div\", { ref: context.onContentChange, style: { minWidth: \"100%\", display: \"table\" }, children })\n        }\n      )\n    ] });\n  }\n);\nScrollAreaViewport.displayName = VIEWPORT_NAME;\nvar SCROLLBAR_NAME = \"ScrollAreaScrollbar\";\nvar ScrollAreaScrollbar = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;\n    const isHorizontal = props.orientation === \"horizontal\";\n    React2.useEffect(() => {\n      isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n      return () => {\n        isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n      };\n    }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n    return context.type === \"hover\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarHover, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"scroll\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarScroll, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"auto\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarAuto, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"always\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarVisible, { ...scrollbarProps, ref: forwardedRef }) : null;\n  }\n);\nScrollAreaScrollbar.displayName = SCROLLBAR_NAME;\nvar ScrollAreaScrollbarHover = React2.forwardRef((props, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [visible, setVisible] = React2.useState(false);\n  React2.useEffect(() => {\n    const scrollArea = context.scrollArea;\n    let hideTimer = 0;\n    if (scrollArea) {\n      const handlePointerEnter = () => {\n        window.clearTimeout(hideTimer);\n        setVisible(true);\n      };\n      const handlePointerLeave = () => {\n        hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n      };\n      scrollArea.addEventListener(\"pointerenter\", handlePointerEnter);\n      scrollArea.addEventListener(\"pointerleave\", handlePointerLeave);\n      return () => {\n        window.clearTimeout(hideTimer);\n        scrollArea.removeEventListener(\"pointerenter\", handlePointerEnter);\n        scrollArea.removeEventListener(\"pointerleave\", handlePointerLeave);\n      };\n    }\n  }, [context.scrollArea, context.scrollHideDelay]);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || visible, children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarAuto,\n    {\n      \"data-state\": visible ? \"visible\" : \"hidden\",\n      ...scrollbarProps,\n      ref: forwardedRef\n    }\n  ) });\n});\nvar ScrollAreaScrollbarScroll = React2.forwardRef((props, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const isHorizontal = props.orientation === \"horizontal\";\n  const debounceScrollEnd = useDebounceCallback(() => send(\"SCROLL_END\"), 100);\n  const [state, send] = useStateMachine(\"hidden\", {\n    hidden: {\n      SCROLL: \"scrolling\"\n    },\n    scrolling: {\n      SCROLL_END: \"idle\",\n      POINTER_ENTER: \"interacting\"\n    },\n    interacting: {\n      SCROLL: \"interacting\",\n      POINTER_LEAVE: \"idle\"\n    },\n    idle: {\n      HIDE: \"hidden\",\n      SCROLL: \"scrolling\",\n      POINTER_ENTER: \"interacting\"\n    }\n  });\n  React2.useEffect(() => {\n    if (state === \"idle\") {\n      const hideTimer = window.setTimeout(() => send(\"HIDE\"), context.scrollHideDelay);\n      return () => window.clearTimeout(hideTimer);\n    }\n  }, [state, context.scrollHideDelay, send]);\n  React2.useEffect(() => {\n    const viewport = context.viewport;\n    const scrollDirection = isHorizontal ? \"scrollLeft\" : \"scrollTop\";\n    if (viewport) {\n      let prevScrollPos = viewport[scrollDirection];\n      const handleScroll = () => {\n        const scrollPos = viewport[scrollDirection];\n        const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;\n        if (hasScrollInDirectionChanged) {\n          send(\"SCROLL\");\n          debounceScrollEnd();\n        }\n        prevScrollPos = scrollPos;\n      };\n      viewport.addEventListener(\"scroll\", handleScroll);\n      return () => viewport.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [context.viewport, isHorizontal, send, debounceScrollEnd]);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || state !== \"hidden\", children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarVisible,\n    {\n      \"data-state\": state === \"hidden\" ? \"hidden\" : \"visible\",\n      ...scrollbarProps,\n      ref: forwardedRef,\n      onPointerEnter: composeEventHandlers(props.onPointerEnter, () => send(\"POINTER_ENTER\")),\n      onPointerLeave: composeEventHandlers(props.onPointerLeave, () => send(\"POINTER_LEAVE\"))\n    }\n  ) });\n});\nvar ScrollAreaScrollbarAuto = React2.forwardRef((props, forwardedRef) => {\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const { forceMount, ...scrollbarProps } = props;\n  const [visible, setVisible] = React2.useState(false);\n  const isHorizontal = props.orientation === \"horizontal\";\n  const handleResize = useDebounceCallback(() => {\n    if (context.viewport) {\n      const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;\n      const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;\n      setVisible(isHorizontal ? isOverflowX : isOverflowY);\n    }\n  }, 10);\n  useResizeObserver(context.viewport, handleResize);\n  useResizeObserver(context.content, handleResize);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || visible, children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarVisible,\n    {\n      \"data-state\": visible ? \"visible\" : \"hidden\",\n      ...scrollbarProps,\n      ref: forwardedRef\n    }\n  ) });\n});\nvar ScrollAreaScrollbarVisible = React2.forwardRef((props, forwardedRef) => {\n  const { orientation = \"vertical\", ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const thumbRef = React2.useRef(null);\n  const pointerOffsetRef = React2.useRef(0);\n  const [sizes, setSizes] = React2.useState({\n    content: 0,\n    viewport: 0,\n    scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 }\n  });\n  const thumbRatio = getThumbRatio(sizes.viewport, sizes.content);\n  const commonProps = {\n    ...scrollbarProps,\n    sizes,\n    onSizesChange: setSizes,\n    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),\n    onThumbChange: (thumb) => thumbRef.current = thumb,\n    onThumbPointerUp: () => pointerOffsetRef.current = 0,\n    onThumbPointerDown: (pointerPos) => pointerOffsetRef.current = pointerPos\n  };\n  function getScrollPosition(pointerPos, dir) {\n    return getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);\n  }\n  if (orientation === \"horizontal\") {\n    return /* @__PURE__ */ jsx(\n      ScrollAreaScrollbarX,\n      {\n        ...commonProps,\n        ref: forwardedRef,\n        onThumbPositionChange: () => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollLeft;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes, context.dir);\n            thumbRef.current.style.transform = `translate3d(${offset}px, 0, 0)`;\n          }\n        },\n        onWheelScroll: (scrollPos) => {\n          if (context.viewport) context.viewport.scrollLeft = scrollPos;\n        },\n        onDragScroll: (pointerPos) => {\n          if (context.viewport) {\n            context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);\n          }\n        }\n      }\n    );\n  }\n  if (orientation === \"vertical\") {\n    return /* @__PURE__ */ jsx(\n      ScrollAreaScrollbarY,\n      {\n        ...commonProps,\n        ref: forwardedRef,\n        onThumbPositionChange: () => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollTop;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes);\n            thumbRef.current.style.transform = `translate3d(0, ${offset}px, 0)`;\n          }\n        },\n        onWheelScroll: (scrollPos) => {\n          if (context.viewport) context.viewport.scrollTop = scrollPos;\n        },\n        onDragScroll: (pointerPos) => {\n          if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);\n        }\n      }\n    );\n  }\n  return null;\n});\nvar ScrollAreaScrollbarX = React2.forwardRef((props, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React2.useState();\n  const ref = React2.useRef(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarXChange);\n  React2.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n  return /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarImpl,\n    {\n      \"data-orientation\": \"horizontal\",\n      ...scrollbarProps,\n      ref: composeRefs,\n      sizes,\n      style: {\n        bottom: 0,\n        left: context.dir === \"rtl\" ? \"var(--radix-scroll-area-corner-width)\" : 0,\n        right: context.dir === \"ltr\" ? \"var(--radix-scroll-area-corner-width)\" : 0,\n        [\"--radix-scroll-area-thumb-width\"]: getThumbSize(sizes) + \"px\",\n        ...props.style\n      },\n      onThumbPointerDown: (pointerPos) => props.onThumbPointerDown(pointerPos.x),\n      onDragScroll: (pointerPos) => props.onDragScroll(pointerPos.x),\n      onWheelScroll: (event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollLeft + event.deltaX;\n          props.onWheelScroll(scrollPos);\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      },\n      onResize: () => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollWidth,\n            viewport: context.viewport.offsetWidth,\n            scrollbar: {\n              size: ref.current.clientWidth,\n              paddingStart: toInt(computedStyle.paddingLeft),\n              paddingEnd: toInt(computedStyle.paddingRight)\n            }\n          });\n        }\n      }\n    }\n  );\n});\nvar ScrollAreaScrollbarY = React2.forwardRef((props, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React2.useState();\n  const ref = React2.useRef(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarYChange);\n  React2.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n  return /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarImpl,\n    {\n      \"data-orientation\": \"vertical\",\n      ...scrollbarProps,\n      ref: composeRefs,\n      sizes,\n      style: {\n        top: 0,\n        right: context.dir === \"ltr\" ? 0 : void 0,\n        left: context.dir === \"rtl\" ? 0 : void 0,\n        bottom: \"var(--radix-scroll-area-corner-height)\",\n        [\"--radix-scroll-area-thumb-height\"]: getThumbSize(sizes) + \"px\",\n        ...props.style\n      },\n      onThumbPointerDown: (pointerPos) => props.onThumbPointerDown(pointerPos.y),\n      onDragScroll: (pointerPos) => props.onDragScroll(pointerPos.y),\n      onWheelScroll: (event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollTop + event.deltaY;\n          props.onWheelScroll(scrollPos);\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      },\n      onResize: () => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollHeight,\n            viewport: context.viewport.offsetHeight,\n            scrollbar: {\n              size: ref.current.clientHeight,\n              paddingStart: toInt(computedStyle.paddingTop),\n              paddingEnd: toInt(computedStyle.paddingBottom)\n            }\n          });\n        }\n      }\n    }\n  );\n});\nvar [ScrollbarProvider, useScrollbarContext] = createScrollAreaContext(SCROLLBAR_NAME);\nvar ScrollAreaScrollbarImpl = React2.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeScrollArea,\n    sizes,\n    hasThumb,\n    onThumbChange,\n    onThumbPointerUp,\n    onThumbPointerDown,\n    onThumbPositionChange,\n    onDragScroll,\n    onWheelScroll,\n    onResize,\n    ...scrollbarProps\n  } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, __scopeScrollArea);\n  const [scrollbar, setScrollbar] = React2.useState(null);\n  const composeRefs = useComposedRefs(forwardedRef, (node) => setScrollbar(node));\n  const rectRef = React2.useRef(null);\n  const prevWebkitUserSelectRef = React2.useRef(\"\");\n  const viewport = context.viewport;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const handleWheelScroll = useCallbackRef(onWheelScroll);\n  const handleThumbPositionChange = useCallbackRef(onThumbPositionChange);\n  const handleResize = useDebounceCallback(onResize, 10);\n  function handleDragScroll(event) {\n    if (rectRef.current) {\n      const x = event.clientX - rectRef.current.left;\n      const y = event.clientY - rectRef.current.top;\n      onDragScroll({ x, y });\n    }\n  }\n  React2.useEffect(() => {\n    const handleWheel = (event) => {\n      const element = event.target;\n      const isScrollbarWheel = scrollbar?.contains(element);\n      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n    };\n    document.addEventListener(\"wheel\", handleWheel, { passive: false });\n    return () => document.removeEventListener(\"wheel\", handleWheel, { passive: false });\n  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n  React2.useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n  useResizeObserver(scrollbar, handleResize);\n  useResizeObserver(context.content, handleResize);\n  return /* @__PURE__ */ jsx(\n    ScrollbarProvider,\n    {\n      scope: __scopeScrollArea,\n      scrollbar,\n      hasThumb,\n      onThumbChange: useCallbackRef(onThumbChange),\n      onThumbPointerUp: useCallbackRef(onThumbPointerUp),\n      onThumbPositionChange: handleThumbPositionChange,\n      onThumbPointerDown: useCallbackRef(onThumbPointerDown),\n      children: /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          ...scrollbarProps,\n          ref: composeRefs,\n          style: { position: \"absolute\", ...scrollbarProps.style },\n          onPointerDown: composeEventHandlers(props.onPointerDown, (event) => {\n            const mainPointer = 0;\n            if (event.button === mainPointer) {\n              const element = event.target;\n              element.setPointerCapture(event.pointerId);\n              rectRef.current = scrollbar.getBoundingClientRect();\n              prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n              document.body.style.webkitUserSelect = \"none\";\n              if (context.viewport) context.viewport.style.scrollBehavior = \"auto\";\n              handleDragScroll(event);\n            }\n          }),\n          onPointerMove: composeEventHandlers(props.onPointerMove, handleDragScroll),\n          onPointerUp: composeEventHandlers(props.onPointerUp, (event) => {\n            const element = event.target;\n            if (element.hasPointerCapture(event.pointerId)) {\n              element.releasePointerCapture(event.pointerId);\n            }\n            document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n            if (context.viewport) context.viewport.style.scrollBehavior = \"\";\n            rectRef.current = null;\n          })\n        }\n      )\n    }\n  );\n});\nvar THUMB_NAME = \"ScrollAreaThumb\";\nvar ScrollAreaThumb = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...thumbProps } = props;\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, props.__scopeScrollArea);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || scrollbarContext.hasThumb, children: /* @__PURE__ */ jsx(ScrollAreaThumbImpl, { ref: forwardedRef, ...thumbProps }) });\n  }\n);\nvar ScrollAreaThumbImpl = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeScrollArea, style, ...thumbProps } = props;\n    const scrollAreaContext = useScrollAreaContext(THUMB_NAME, __scopeScrollArea);\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, __scopeScrollArea);\n    const { onThumbPositionChange } = scrollbarContext;\n    const composedRef = useComposedRefs(\n      forwardedRef,\n      (node) => scrollbarContext.onThumbChange(node)\n    );\n    const removeUnlinkedScrollListenerRef = React2.useRef(void 0);\n    const debounceScrollEnd = useDebounceCallback(() => {\n      if (removeUnlinkedScrollListenerRef.current) {\n        removeUnlinkedScrollListenerRef.current();\n        removeUnlinkedScrollListenerRef.current = void 0;\n      }\n    }, 100);\n    React2.useEffect(() => {\n      const viewport = scrollAreaContext.viewport;\n      if (viewport) {\n        const handleScroll = () => {\n          debounceScrollEnd();\n          if (!removeUnlinkedScrollListenerRef.current) {\n            const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n            removeUnlinkedScrollListenerRef.current = listener;\n            onThumbPositionChange();\n          }\n        };\n        onThumbPositionChange();\n        viewport.addEventListener(\"scroll\", handleScroll);\n        return () => viewport.removeEventListener(\"scroll\", handleScroll);\n      }\n    }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n    return /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": scrollbarContext.hasThumb ? \"visible\" : \"hidden\",\n        ...thumbProps,\n        ref: composedRef,\n        style: {\n          width: \"var(--radix-scroll-area-thumb-width)\",\n          height: \"var(--radix-scroll-area-thumb-height)\",\n          ...style\n        },\n        onPointerDownCapture: composeEventHandlers(props.onPointerDownCapture, (event) => {\n          const thumb = event.target;\n          const thumbRect = thumb.getBoundingClientRect();\n          const x = event.clientX - thumbRect.left;\n          const y = event.clientY - thumbRect.top;\n          scrollbarContext.onThumbPointerDown({ x, y });\n        }),\n        onPointerUp: composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)\n      }\n    );\n  }\n);\nScrollAreaThumb.displayName = THUMB_NAME;\nvar CORNER_NAME = \"ScrollAreaCorner\";\nvar ScrollAreaCorner = React2.forwardRef(\n  (props, forwardedRef) => {\n    const context = useScrollAreaContext(CORNER_NAME, props.__scopeScrollArea);\n    const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);\n    const hasCorner = context.type !== \"scroll\" && hasBothScrollbarsVisible;\n    return hasCorner ? /* @__PURE__ */ jsx(ScrollAreaCornerImpl, { ...props, ref: forwardedRef }) : null;\n  }\n);\nScrollAreaCorner.displayName = CORNER_NAME;\nvar ScrollAreaCornerImpl = React2.forwardRef((props, forwardedRef) => {\n  const { __scopeScrollArea, ...cornerProps } = props;\n  const context = useScrollAreaContext(CORNER_NAME, __scopeScrollArea);\n  const [width, setWidth] = React2.useState(0);\n  const [height, setHeight] = React2.useState(0);\n  const hasSize = Boolean(width && height);\n  useResizeObserver(context.scrollbarX, () => {\n    const height2 = context.scrollbarX?.offsetHeight || 0;\n    context.onCornerHeightChange(height2);\n    setHeight(height2);\n  });\n  useResizeObserver(context.scrollbarY, () => {\n    const width2 = context.scrollbarY?.offsetWidth || 0;\n    context.onCornerWidthChange(width2);\n    setWidth(width2);\n  });\n  return hasSize ? /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      ...cornerProps,\n      ref: forwardedRef,\n      style: {\n        width,\n        height,\n        position: \"absolute\",\n        right: context.dir === \"ltr\" ? 0 : void 0,\n        left: context.dir === \"rtl\" ? 0 : void 0,\n        bottom: 0,\n        ...props.style\n      }\n    }\n  ) : null;\n});\nfunction toInt(value) {\n  return value ? parseInt(value, 10) : 0;\n}\nfunction getThumbRatio(viewportSize, contentSize) {\n  const ratio = viewportSize / contentSize;\n  return isNaN(ratio) ? 0 : ratio;\n}\nfunction getThumbSize(sizes) {\n  const ratio = getThumbRatio(sizes.viewport, sizes.content);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio;\n  return Math.max(thumbSize, 18);\n}\nfunction getScrollPositionFromPointer(pointerPos, pointerOffset, sizes, dir = \"ltr\") {\n  const thumbSizePx = getThumbSize(sizes);\n  const thumbCenter = thumbSizePx / 2;\n  const offset = pointerOffset || thumbCenter;\n  const thumbOffsetFromEnd = thumbSizePx - offset;\n  const minPointerPos = sizes.scrollbar.paddingStart + offset;\n  const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const scrollRange = dir === \"ltr\" ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const interpolate = linearScale([minPointerPos, maxPointerPos], scrollRange);\n  return interpolate(pointerPos);\n}\nfunction getThumbOffsetFromScroll(scrollPos, sizes, dir = \"ltr\") {\n  const thumbSizePx = getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === \"ltr\" ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = clamp(scrollPos, scrollClampRange);\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n}\nfunction linearScale(input, output) {\n  return (value) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\nfunction isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos) {\n  return scrollPos > 0 && scrollPos < maxScrollPos;\n}\nvar addUnlinkedScrollListener = (node, handler = () => {\n}) => {\n  let prevPosition = { left: node.scrollLeft, top: node.scrollTop };\n  let rAF = 0;\n  (function loop() {\n    const position = { left: node.scrollLeft, top: node.scrollTop };\n    const isHorizontalScroll = prevPosition.left !== position.left;\n    const isVerticalScroll = prevPosition.top !== position.top;\n    if (isHorizontalScroll || isVerticalScroll) handler();\n    prevPosition = position;\n    rAF = window.requestAnimationFrame(loop);\n  })();\n  return () => window.cancelAnimationFrame(rAF);\n};\nfunction useDebounceCallback(callback, delay) {\n  const handleCallback = useCallbackRef(callback);\n  const debounceTimerRef = React2.useRef(0);\n  React2.useEffect(() => () => window.clearTimeout(debounceTimerRef.current), []);\n  return React2.useCallback(() => {\n    window.clearTimeout(debounceTimerRef.current);\n    debounceTimerRef.current = window.setTimeout(handleCallback, delay);\n  }, [handleCallback, delay]);\n}\nfunction useResizeObserver(element, onResize) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\nvar Root = ScrollArea;\nvar Viewport = ScrollAreaViewport;\nvar Scrollbar = ScrollAreaScrollbar;\nvar Thumb = ScrollAreaThumb;\nvar Corner = ScrollAreaCorner;\nexport {\n  Corner,\n  Root,\n  ScrollArea,\n  ScrollAreaCorner,\n  ScrollAreaScrollbar,\n  ScrollAreaThumb,\n  ScrollAreaViewport,\n  Scrollbar,\n  Thumb,\n  Viewport,\n  createScrollAreaScope\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["SCROLL_AREA_NAME","createScrollAreaContext","createScrollAreaScope","createContextScope","ScrollAreaProvider","useScrollAreaContext","ScrollArea","React2","forwardRef","props","forwardedRef","__scopeScrollArea","type","dir","scrollHideDelay","scrollAreaProps","scrollArea","setScrollArea","useState","viewport","setViewport","content","setContent","scrollbarX","setScrollbarX","scrollbarY","setScrollbarY","cornerWidth","setCornerWidth","cornerHeight","setCornerHeight","scrollbarXEnabled","setScrollbarXEnabled","scrollbarYEnabled","setScrollbarYEnabled","composedRefs","useComposedRefs","node","direction","useDirection","jsx","exports","scope","onViewportChange","onContentChange","onScrollbarXChange","onScrollbarXEnabledChange","onScrollbarYChange","onScrollbarYEnabledChange","onCornerWidthChange","onCornerHeightChange","children","Primitive","div","ref","style","position","displayName","VIEWPORT_NAME","ScrollAreaViewport","nonce","viewportProps","context","useRef","jsxs","Fragment","dangerouslySetInnerHTML","__html","overflowX","overflowY","minWidth","display","SCROLLBAR_NAME","ScrollAreaScrollbar","forceMount","scrollbarProps","isHorizontal","orientation","useEffect","ScrollAreaScrollbarHover","ScrollAreaScrollbarScroll","ScrollAreaScrollbarAuto","ScrollAreaScrollbarVisible","visible","setVisible","hideTimer","handlePointerEnter","window","clearTimeout","handlePointerLeave","setTimeout","addEventListener","removeEventListener","Presence","present","debounceScrollEnd","useDebounceCallback","send","state","initialState","machine","hidden","SCROLL","scrolling","SCROLL_END","POINTER_ENTER","interacting","POINTER_LEAVE","idle","HIDE","React","useReducer","event","scrollDirection","prevScrollPos","handleScroll","scrollPos","onPointerEnter","composeEventHandlers","onPointerLeave","handleResize","isOverflowX","offsetWidth","scrollWidth","isOverflowY","offsetHeight","scrollHeight","useResizeObserver","thumbRef","pointerOffsetRef","sizes","setSizes","scrollbar","size","paddingStart","paddingEnd","thumbRatio","getThumbRatio","commonProps","onSizesChange","hasThumb","Boolean","onThumbChange","thumb","current","onThumbPointerUp","onThumbPointerDown","pointerPos","getScrollPosition","pointerOffset","thumbSizePx","getThumbSize","thumbCenter","offset","thumbOffsetFromEnd","minPointerPos","maxPointerPos","maxScrollPos","scrollRange","linearScale","interpolate","getScrollPositionFromPointer","ScrollAreaScrollbarX","onThumbPositionChange","getThumbOffsetFromScroll","scrollLeft","transform","onWheelScroll","onDragScroll","ScrollAreaScrollbarY","scrollTop","computedStyle","setComputedStyle","composeRefs","getComputedStyle","ScrollAreaScrollbarImpl","bottom","left","right","x","deltaX","isScrollingWithinScrollbarBounds","preventDefault","onResize","clientWidth","toInt","paddingLeft","paddingRight","top","y","deltaY","clientHeight","paddingTop","paddingBottom","ScrollbarProvider","useScrollbarContext","setScrollbar","rectRef","prevWebkitUserSelectRef","handleWheelScroll","useCallbackRef","handleThumbPositionChange","handleDragScroll","clientX","clientY","handleWheel","element","target","isScrollbarWheel","contains","document","passive","onPointerDown","button","setPointerCapture","pointerId","getBoundingClientRect","body","webkitUserSelect","scrollBehavior","onPointerMove","onPointerUp","hasPointerCapture","releasePointerCapture","THUMB_NAME","ScrollAreaThumb","thumbProps","scrollbarContext","ScrollAreaThumbImpl","scrollAreaContext","composedRef","removeUnlinkedScrollListenerRef","listener","addUnlinkedScrollListener","width","height","onPointerDownCapture","thumbRect","CORNER_NAME","ScrollAreaCorner","hasBothScrollbarsVisible","ScrollAreaCornerImpl","cornerProps","setWidth","setHeight","hasSize","height2","width2","value","parseInt","viewportSize","contentSize","ratio","isNaN","scrollbarPadding","thumbSize","Math","max","maxThumbPos","scrollWithoutMomentum","clamp","input","output","handler","prevPosition","rAF","loop","isHorizontalScroll","isVerticalScroll","requestAnimationFrame","cancelAnimationFrame","callback","delay","handleCallback","debounceTimerRef","useCallback","useLayoutEffect","resizeObserver","ResizeObserver","observe","unobserve","Root","Viewport","Corner"],"mappings":"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"}