{"version":3,"file":"index.mjs.js","sources":["../../../../../node_modules/@radix-ui/react-slot/dist/index.mjs"],"sourcesContent":["// packages/react/slot/src/slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\nvar Slot = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n  if (slottable) {\n    const newElement = slottable.props.children;\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement) ? newElement.props.children : null;\n      } else {\n        return child;\n      }\n    });\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n  }\n  return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n});\nSlot.displayName = \"Slot\";\nvar SlotClone = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    const props2 = mergeProps(slotProps, children.props);\n    if (children.type !== React.Fragment) {\n      props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n    }\n    return React.cloneElement(children, props2);\n  }\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\nSlotClone.displayName = \"SlotClone\";\nvar Slottable = ({ children }) => {\n  return /* @__PURE__ */ jsx(Fragment2, { children });\n};\nfunction isSlottable(child) {\n  return React.isValidElement(child) && child.type === Slottable;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nvar Root = Slot;\nexport {\n  Root,\n  Slot,\n  Slottable\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["Slot","React","forwardRef","props","forwardedRef","children","slotProps","childrenArray","Children","toArray","slottable","find","isSlottable","newElement","newChildren","map","child","count","only","isValidElement","jsx","exports","SlotClone","ref","cloneElement","displayName","childrenRef","element","getter","Object","getOwnPropertyDescriptor","get","mayWarn","isReactWarning","getElementRef","props2","childProps","overrideProps","propName","slotPropValue","childPropValue","test","args","filter","Boolean","join","mergeProps","type","Fragment","composeRefs","Slottable","Fragment2"],"mappings":"+LAIG,IAACA,EAAOC,EAAMC,YAAW,CAACC,EAAOC,KAClC,MAAMC,SAAEA,KAAaC,GAAcH,EAC7BI,EAAgBN,EAAMO,SAASC,QAAQJ,GACvCK,EAAYH,EAAcI,KAAKC,GACrC,GAAIF,EAAW,CACb,MAAMG,EAAaH,EAAUP,MAAME,SAC7BS,EAAcP,EAAcQ,KAAKC,GACjCA,IAAUN,EACRT,EAAMO,SAASS,MAAMJ,GAAc,EAAUZ,EAAMO,SAASU,KAAK,MAC9DjB,EAAMkB,eAAeN,GAAcA,EAAWV,MAAME,SAAW,KAE/DW,IAGX,OAAuBI,EAAGC,QAAAD,IAACE,EAAW,IAAKhB,EAAWiB,IAAKnB,EAAcC,SAAUJ,EAAMkB,eAAeN,GAAcZ,EAAMuB,aAAaX,OAAY,EAAQC,GAAe,MAC7K,CACD,OAAuBM,EAAGC,QAAAD,IAACE,EAAW,IAAKhB,EAAWiB,IAAKnB,EAAcC,YAAW,IAEtFL,EAAKyB,YAAc,OACnB,IAAIH,EAAYrB,EAAMC,YAAW,CAACC,EAAOC,KACvC,MAAMC,SAAEA,KAAaC,GAAcH,EACnC,GAAIF,EAAMkB,eAAed,GAAW,CAClC,MAAMqB,EAuCV,SAAuBC,GACrB,IAAIC,EAASC,OAAOC,yBAAyBH,EAAQxB,MAAO,QAAQ4B,IAChEC,EAAUJ,GAAU,mBAAoBA,GAAUA,EAAOK,eAC7D,GAAID,EACF,OAAOL,EAAQJ,IAIjB,GAFAK,EAASC,OAAOC,yBAAyBH,EAAS,QAAQI,IAC1DC,EAAUJ,GAAU,mBAAoBA,GAAUA,EAAOK,eACrDD,EACF,OAAOL,EAAQxB,MAAMoB,IAEvB,OAAOI,EAAQxB,MAAMoB,KAAOI,EAAQJ,GACtC,CAnDwBW,CAAc7B,GAC5B8B,EAeV,SAAoB7B,EAAW8B,GAC7B,MAAMC,EAAgB,IAAKD,GAC3B,IAAK,MAAME,KAAYF,EAAY,CACjC,MAAMG,EAAgBjC,EAAUgC,GAC1BE,EAAiBJ,EAAWE,GAChB,WAAWG,KAAKH,GAE5BC,GAAiBC,EACnBH,EAAcC,GAAY,IAAII,KAC5BF,KAAkBE,GAClBH,KAAiBG,EAAK,EAEfH,IACTF,EAAcC,GAAYC,GAEN,UAAbD,EACTD,EAAcC,GAAY,IAAKC,KAAkBC,GAC3B,cAAbF,IACTD,EAAcC,GAAY,CAACC,EAAeC,GAAgBG,OAAOC,SAASC,KAAK,KAElF,CACD,MAAO,IAAKvC,KAAc+B,EAC5B,CArCmBS,CAAWxC,EAAWD,EAASF,OAI9C,OAHIE,EAAS0C,OAAS9C,EAAM+C,WAC1Bb,EAAOZ,IAAMnB,EAAe6C,EAAY7C,EAAcsB,GAAeA,GAEhEzB,EAAMuB,aAAanB,EAAU8B,EACrC,CACD,OAAOlC,EAAMO,SAASS,MAAMZ,GAAY,EAAIJ,EAAMO,SAASU,KAAK,MAAQ,IAAI,IAE9EI,EAAUG,YAAc,YACrB,IAACyB,EAAY,EAAG7C,cACMe,cAAI+B,EAAAA,QAAAA,SAAW,CAAE9C,aAE1C,SAASO,EAAYI,GACnB,OAAOf,EAAMkB,eAAeH,IAAUA,EAAM+B,OAASG,CACvD"}