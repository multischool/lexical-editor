import*as r from"react";import{composeRefs as e}from"../../react-compose-refs/dist/index.mjs.js";import"../../../react/jsx-runtime.js";import{j as n}from"../../../../_virtual/jsx-runtime.js";var t=r.forwardRef(((e,t)=>{const{children:o,...s}=e,c=r.Children.toArray(o),a=c.find(l);if(a){const e=a.props.children,o=c.map((n=>n===a?r.Children.count(e)>1?r.Children.only(null):r.isValidElement(e)?e.props.children:null:n));return n.exports.jsx(i,{...s,ref:t,children:r.isValidElement(e)?r.cloneElement(e,void 0,o):null})}return n.exports.jsx(i,{...s,ref:t,children:o})}));t.displayName="Slot";var i=r.forwardRef(((n,t)=>{const{children:i,...o}=n;if(r.isValidElement(i)){const n=function(r){let e=Object.getOwnPropertyDescriptor(r.props,"ref")?.get,n=e&&"isReactWarning"in e&&e.isReactWarning;if(n)return r.ref;if(e=Object.getOwnPropertyDescriptor(r,"ref")?.get,n=e&&"isReactWarning"in e&&e.isReactWarning,n)return r.props.ref;return r.props.ref||r.ref}(i),l=function(r,e){const n={...e};for(const t in e){const i=r[t],o=e[t];/^on[A-Z]/.test(t)?i&&o?n[t]=(...r)=>{o(...r),i(...r)}:i&&(n[t]=i):"style"===t?n[t]={...i,...o}:"className"===t&&(n[t]=[i,o].filter(Boolean).join(" "))}return{...r,...n}}(o,i.props);return i.type!==r.Fragment&&(l.ref=t?e(t,n):n),r.cloneElement(i,l)}return r.Children.count(i)>1?r.Children.only(null):null}));i.displayName="SlotClone";var o=({children:r})=>n.exports.jsx(n.exports.Fragment,{children:r});function l(e){return r.isValidElement(e)&&e.type===o}export{t as Slot,o as Slottable};
//# sourceMappingURL=index.mjs.js.map
