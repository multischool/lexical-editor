{"version":3,"file":"index.mjs.js","sources":["../../../../../node_modules/@radix-ui/react-portal/dist/index.mjs"],"sourcesContent":["\"use client\";\n\n// packages/react/portal/src/portal.tsx\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PORTAL_NAME = \"Portal\";\nvar Portal = React.forwardRef((props, forwardedRef) => {\n  const { container: containerProp, ...portalProps } = props;\n  const [mounted, setMounted] = React.useState(false);\n  useLayoutEffect(() => setMounted(true), []);\n  const container = containerProp || mounted && globalThis?.document?.body;\n  return container ? ReactDOM.createPortal(/* @__PURE__ */ jsx(Primitive.div, { ...portalProps, ref: forwardedRef }), container) : null;\n});\nPortal.displayName = PORTAL_NAME;\nvar Root = Portal;\nexport {\n  Portal,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["Portal","React","forwardRef","props","forwardedRef","container","containerProp","portalProps","mounted","setMounted","useState","useLayoutEffect","globalThis","document","body","ReactDOM","createPortal","jsx","exports","Primitive","div","ref","displayName"],"mappings":"qSAQA,IACIA,EAASC,EAAMC,YAAW,CAACC,EAAOC,KACpC,MAAQC,UAAWC,KAAkBC,GAAgBJ,GAC9CK,EAASC,GAAcR,EAAMS,UAAS,GAC7CC,GAAgB,IAAMF,GAAW,IAAO,IACxC,MAAMJ,EAAYC,GAAiBE,GAAWI,YAAYC,UAAUC,KACpE,OAAOT,EAAYU,EAASC,aAA6BC,EAAGC,QAAAD,IAACE,EAAUC,IAAK,IAAKb,EAAac,IAAKjB,IAAiBC,GAAa,IAAI,IAEvIL,EAAOsB,YARW"}