import*as e from"react";import"../../../react/jsx-runtime.js";import{j as t}from"../../../../_virtual/jsx-runtime.js";function r(r,n){const o=e.createContext(n),s=r=>{const{children:n,...s}=r,c=e.useMemo((()=>s),Object.values(s));return t.exports.jsx(o.Provider,{value:c,children:n})};return s.displayName=r+"Provider",[s,function(t){const s=e.useContext(o);if(s)return s;if(void 0!==n)return n;throw new Error(`\`${t}\` must be used within \`${r}\``)}]}function n(r,n=[]){let s=[];const c=()=>{const t=s.map((t=>e.createContext(t)));return function(n){const o=n?.[r]||t;return e.useMemo((()=>({[`__scope${r}`]:{...n,[r]:o}})),[n,o])}};return c.scopeName=r,[function(n,o){const c=e.createContext(o),u=s.length;s=[...s,o];const i=n=>{const{scope:o,children:s,...i}=n,a=o?.[r]?.[u]||c,m=e.useMemo((()=>i),Object.values(i));return t.exports.jsx(a.Provider,{value:m,children:s})};return i.displayName=n+"Provider",[i,function(t,s){const i=s?.[r]?.[u]||c,a=e.useContext(i);if(a)return a;if(void 0!==o)return o;throw new Error(`\`${t}\` must be used within \`${n}\``)}]},o(c,...n)]}function o(...t){const r=t[0];if(1===t.length)return r;const n=()=>{const n=t.map((e=>({useScope:e(),scopeName:e.scopeName})));return function(t){const o=n.reduce(((e,{useScope:r,scopeName:n})=>({...e,...r(t)[`__scope${n}`]})),{});return e.useMemo((()=>({[`__scope${r.scopeName}`]:o})),[o])}};return n.scopeName=r.scopeName,n}export{r as createContext,n as createContextScope};
//# sourceMappingURL=index.mjs.js.map
