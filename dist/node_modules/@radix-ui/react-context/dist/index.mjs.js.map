{"version":3,"file":"index.mjs.js","sources":["../../../../../node_modules/@radix-ui/react-context/dist/index.mjs"],"sourcesContent":["// packages/react/context/src/createContext.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createContext2(rootComponentName, defaultContext) {\n  const Context = React.createContext(defaultContext);\n  const Provider = (props) => {\n    const { children, ...context } = props;\n    const value = React.useMemo(() => context, Object.values(context));\n    return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n  };\n  Provider.displayName = rootComponentName + \"Provider\";\n  function useContext2(consumerName) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== void 0) return defaultContext;\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n  return [Provider, useContext2];\n}\nfunction createContextScope(scopeName, createContextScopeDeps = []) {\n  let defaultContexts = [];\n  function createContext3(rootComponentName, defaultContext) {\n    const BaseContext = React.createContext(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n    const Provider = (props) => {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const value = React.useMemo(() => context, Object.values(context));\n      return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n    };\n    Provider.displayName = rootComponentName + \"Provider\";\n    function useContext2(consumerName, scope) {\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== void 0) return defaultContext;\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n    return [Provider, useContext2];\n  }\n  const createScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n  createScope.scopeName = scopeName;\n  return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];\n}\nfunction composeContextScopes(...scopes) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n  const createScope = () => {\n    const scopeHooks = scopes.map((createScope2) => ({\n      useScope: createScope2(),\n      scopeName: createScope2.scopeName\n    }));\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes2, ...currentScope };\n      }, {});\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\nexport {\n  createContext2 as createContext,\n  createContextScope\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["createContext2","rootComponentName","defaultContext","Context","React","createContext","Provider","props","children","context","value","useMemo","Object","values","jsx","displayName","consumerName","useContext","Error","createContextScope","scopeName","createContextScopeDeps","defaultContexts","createScope","scopeContexts","map","scope","contexts","BaseContext","index","length","composeContextScopes","scopes","baseScope","scopeHooks","createScope2","useScope","overrideScopes","nextScopes","reduce","nextScopes2"],"mappings":"sHAGA,SAASA,EAAeC,EAAmBC,GACzC,MAAMC,EAAUC,EAAMC,cAAcH,GAC9BI,EAAYC,IAChB,MAAMC,SAAEA,KAAaC,GAAYF,EAC3BG,EAAQN,EAAMO,SAAQ,IAAMF,GAASG,OAAOC,OAAOJ,IACzD,OAAuBK,EAAAA,QAAAA,IAAIX,EAAQG,SAAU,CAAEI,QAAOF,YAAW,EASnE,OAPAF,EAASS,YAAcd,EAAoB,WAOpC,CAACK,EANR,SAAqBU,GACnB,MAAMP,EAAUL,EAAMa,WAAWd,GACjC,GAAIM,EAAS,OAAOA,EACpB,QAAuB,IAAnBP,EAA2B,OAAOA,EACtC,MAAM,IAAIgB,MAAM,KAAKF,6BAAwCf,MAC9D,EAEH,CACA,SAASkB,EAAmBC,EAAWC,EAAyB,IAC9D,IAAIC,EAAkB,GAqBtB,MAAMC,EAAc,KAClB,MAAMC,EAAgBF,EAAgBG,KAAKvB,GAClCE,EAAMC,cAAcH,KAE7B,OAAO,SAAkBwB,GACvB,MAAMC,EAAWD,IAAQN,IAAcI,EACvC,OAAOpB,EAAMO,SACX,KAAA,CAAS,CAAC,UAAUS,KAAc,IAAKM,EAAON,CAACA,GAAYO,MAC3D,CAACD,EAAOC,GAEhB,CAAK,EAGH,OADAJ,EAAYH,UAAYA,EACjB,CAjCP,SAAwBnB,EAAmBC,GACzC,MAAM0B,EAAcxB,EAAMC,cAAcH,GAClC2B,EAAQP,EAAgBQ,OAC9BR,EAAkB,IAAIA,EAAiBpB,GACvC,MAAMI,EAAYC,IAChB,MAAMmB,MAAEA,EAAKlB,SAAEA,KAAaC,GAAYF,EAClCJ,EAAUuB,IAAQN,KAAaS,IAAUD,EACzClB,EAAQN,EAAMO,SAAQ,IAAMF,GAASG,OAAOC,OAAOJ,IACzD,OAAuBK,EAAAA,QAAAA,IAAIX,EAAQG,SAAU,CAAEI,QAAOF,YAAW,EAUnE,OARAF,EAASS,YAAcd,EAAoB,WAQpC,CAACK,EAPR,SAAqBU,EAAcU,GACjC,MAAMvB,EAAUuB,IAAQN,KAAaS,IAAUD,EACzCnB,EAAUL,EAAMa,WAAWd,GACjC,GAAIM,EAAS,OAAOA,EACpB,QAAuB,IAAnBP,EAA2B,OAAOA,EACtC,MAAM,IAAIgB,MAAM,KAAKF,6BAAwCf,MAC9D,EAEF,EAcuB8B,EAAqBR,KAAgBF,GAC/D,CACA,SAASU,KAAwBC,GAC/B,MAAMC,EAAYD,EAAO,GACzB,GAAsB,IAAlBA,EAAOF,OAAc,OAAOG,EAChC,MAAMV,EAAc,KAClB,MAAMW,EAAaF,EAAOP,KAAKU,IAAkB,CAC/CC,SAAUD,IACVf,UAAWe,EAAaf,cAE1B,OAAO,SAA2BiB,GAChC,MAAMC,EAAaJ,EAAWK,QAAO,CAACC,GAAeJ,WAAUhB,gBAGtD,IAAKoB,KAFOJ,EAASC,GACI,UAAUjB,QAEzC,CAAE,GACL,OAAOhB,EAAMO,SAAQ,MAAS,CAAC,UAAUsB,EAAUb,aAAckB,KAAe,CAACA,GACvF,CAAK,EAGH,OADAf,EAAYH,UAAYa,EAAUb,UAC3BG,CACT"}