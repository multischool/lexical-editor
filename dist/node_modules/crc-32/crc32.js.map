{"version":3,"file":"crc32.js","sources":["../../../node_modules/crc-32/crc32.js"],"sourcesContent":["/* crc32.js (C) 2014-2015 SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\nvar CRC32;\n(function (factory) {\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t  factory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n}(function(CRC32) {\nCRC32.version = '0.3.0';\n/* see perf/crc32table.js */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar table = signed_crc_table();\n/* charCodeAt is the best approach for binary strings */\nvar use_buffer = typeof Buffer !== 'undefined';\nfunction crc32_bstr(bstr) {\n\tif(bstr.length > 32768) if(use_buffer) return crc32_buf_8(new Buffer(bstr));\n\tvar crc = -1, L = bstr.length - 1;\n\tfor(var i = 0; i < L;) {\n\t\tcrc =  table[(crc ^ bstr.charCodeAt(i++)) & 0xFF] ^ (crc >>> 8);\n\t\tcrc =  table[(crc ^ bstr.charCodeAt(i++)) & 0xFF] ^ (crc >>> 8);\n\t}\n\tif(i === L) crc = (crc >>> 8) ^ table[(crc ^ bstr.charCodeAt(i)) & 0xFF];\n\treturn crc ^ -1;\n}\n\nfunction crc32_buf(buf) {\n\tif(buf.length > 10000) return crc32_buf_8(buf);\n\tfor(var crc = -1, i = 0, L=buf.length-3; i < L;) {\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t}\n\twhile(i < L+3) crc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\treturn crc ^ -1;\n}\n\nfunction crc32_buf_8(buf) {\n\tfor(var crc = -1, i = 0, L=buf.length-7; i < L;) {\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t}\n\twhile(i < L+7) crc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\treturn crc ^ -1;\n}\n\n/* much much faster to intertwine utf8 and crc */\nfunction crc32_str(str) {\n\tfor(var crc = -1, i = 0, L=str.length, c, d; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ c) & 0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (192|((c>>6)&31))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(c&63))) & 0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++) & 1023;\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (240|((c>>8)&7))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((c>>2)&63))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((d>>6)&15)|(c&3))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(d&63))) & 0xFF];\n\t\t} else {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (224|((c>>12)&15))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((c>>6)&63))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(c&63))) & 0xFF];\n\t\t}\n\t}\n\treturn crc ^ -1;\n}\nCRC32.table = table;\nCRC32.bstr = crc32_bstr;\nCRC32.buf = crc32_buf;\nCRC32.str = crc32_str;\n}));\n"],"names":["factory","CRC32","version","table","c","Array","n","Int32Array","signed_crc_table","use_buffer","Buffer","crc32_buf_8","buf","crc","i","L","length","bstr","charCodeAt","str","d","DO_NOT_EXPORT_CRC"],"mappings":"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"}