import{clsx as l}from"../../clsx/dist/clsx.mjs.js";const e=l=>"boolean"==typeof l?`${l}`:0===l?"0":l,n=l,r=(l,r)=>s=>{var t;if(null==(null==r?void 0:r.variants))return n(l,null==s?void 0:s.class,null==s?void 0:s.className);const{variants:u,defaultVariants:a}=r,i=Object.keys(u).map((l=>{const n=null==s?void 0:s[l],r=null==a?void 0:a[l];if(null===n)return null;const t=e(n)||e(r);return u[l][t]})),o=s&&Object.entries(s).reduce(((l,e)=>{let[n,r]=e;return void 0===r||(l[n]=r),l}),{}),c=null==r||null===(t=r.compoundVariants)||void 0===t?void 0:t.reduce(((l,e)=>{let{class:n,className:r,...s}=e;return Object.entries(s).every((l=>{let[e,n]=l;return Array.isArray(n)?n.includes({...a,...o}[e]):{...a,...o}[e]===n}))?[...l,n,r]:l}),[]);return n(l,i,c,null==s?void 0:s.class,null==s?void 0:s.className)};export{r as cva,n as cx};
//# sourceMappingURL=index.mjs.js.map
