{"version":3,"file":"index.js","sources":["../../../node_modules/micromark-factory-destination/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesnâ€™t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n"],"names":["factoryDestination","effects","ok","nok","type","literalType","literalMarkerType","rawType","stringType","max","limit","Number","POSITIVE_INFINITY","balance","code","enter","consume","exit","enclosedBefore","asciiControl","contentType","raw","enclosed","markdownLineEnding","enclosedEscape","markdownLineEndingOrSpace","rawEscape"],"mappings":"2HAgDO,SAASA,EACdC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAQD,GAAOE,OAAOC,kBAC5B,IAAIC,EAAU,EACd,OAcA,SAAeC,GACb,GAAa,KAATA,EAMF,OALAb,EAAQc,MAAMX,GACdH,EAAQc,MAAMV,GACdJ,EAAQc,MAAMT,GACdL,EAAQe,QAAQF,GAChBb,EAAQgB,KAAKX,GACNY,EAIT,GAAa,OAATJ,GAA0B,KAATA,GAAwB,KAATA,GAAeK,EAAaL,GAC9D,OAAOX,EAAIW,GAQb,OANAb,EAAQc,MAAMX,GACdH,EAAQc,MAAMR,GACdN,EAAQc,MAAMP,GACdP,EAAQc,MAAM,cAAe,CAC3BK,YAAa,WAERC,EAAIP,EACZ,EAYD,SAASI,EAAeJ,GACtB,OAAa,KAATA,GACFb,EAAQc,MAAMT,GACdL,EAAQe,QAAQF,GAChBb,EAAQgB,KAAKX,GACbL,EAAQgB,KAAKZ,GACbJ,EAAQgB,KAAKb,GACNF,IAETD,EAAQc,MAAMP,GACdP,EAAQc,MAAM,cAAe,CAC3BK,YAAa,WAERE,EAASR,GACjB,CAYD,SAASQ,EAASR,GAChB,OAAa,KAATA,GACFb,EAAQgB,KAAK,eACbhB,EAAQgB,KAAKT,GACNU,EAAeJ,IAEX,OAATA,GAA0B,KAATA,GAAeS,EAAmBT,GAC9CX,EAAIW,IAEbb,EAAQe,QAAQF,GACA,KAATA,EAAcU,EAAiBF,EACvC,CAYD,SAASE,EAAeV,GACtB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCb,EAAQe,QAAQF,GACTQ,GAEFA,EAASR,EACjB,CAYD,SAASO,EAAIP,GACX,OACGD,GACS,OAATC,GAA0B,KAATA,IAAeW,EAA0BX,GAQzDD,EAAUH,GAAkB,KAATI,GACrBb,EAAQe,QAAQF,GAChBD,IACOQ,GAEI,KAATP,GACFb,EAAQe,QAAQF,GAChBD,IACOQ,GAMI,OAATP,GAA0B,KAATA,GAAwB,KAATA,GAAeK,EAAaL,GACvDX,EAAIW,IAEbb,EAAQe,QAAQF,GACA,KAATA,EAAcY,EAAYL,IAxB/BpB,EAAQgB,KAAK,eACbhB,EAAQgB,KAAKT,GACbP,EAAQgB,KAAKV,GACbN,EAAQgB,KAAKb,GACNF,EAAGY,GAqBb,CAYD,SAASY,EAAUZ,GACjB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCb,EAAQe,QAAQF,GACTO,GAEFA,EAAIP,EACZ,CACH"}