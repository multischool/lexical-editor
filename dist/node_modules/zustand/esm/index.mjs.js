import{createStore as t}from"./vanilla.mjs.js";export{createStore}from"./vanilla.mjs.js";import e from"react";import o from"../../use-sync-external-store/shim/with-selector.js";const{useDebugValue:r}=e,{useSyncExternalStoreWithSelector:n}=o;let s=!1;const i=t=>t;function a(t,e=i,o){"production"!==(import.meta.env?import.meta.env.MODE:void 0)&&o&&!s&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),s=!0);const a=n(t.subscribe,t.getState,t.getServerState||t.getInitialState,e,o);return r(a),a}const u=e=>{"production"!==(import.meta.env?import.meta.env.MODE:void 0)&&"function"!=typeof e&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const o="function"==typeof e?t(e):e,r=(t,e)=>a(o,t,e);return Object.assign(r,o),r},c=t=>t?u(t):u;export{c as create,a as useStore};
//# sourceMappingURL=index.mjs.js.map
