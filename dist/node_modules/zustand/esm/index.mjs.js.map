{"version":3,"file":"index.mjs.js","sources":["../../../../node_modules/zustand/esm/index.mjs"],"sourcesContent":["import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n"],"names":["useDebugValue","ReactExports","useSyncExternalStoreWithSelector","useSyncExternalStoreExports","didWarnAboutEqualityFn","identity","arg","useStore","api","selector","equalityFn","env","MODE","console","warn","slice","subscribe","getState","getServerState","getInitialState","createImpl","createState","createStore","useBoundStore","Object","assign","create"],"mappings":"iLAKA,MAAMA,cAAEA,GAAkBC,GACpBC,iCAAEA,GAAqCC,EAC7C,IAAIC,GAAyB,EAC7B,MAAMC,EAAYC,GAAQA,EAC1B,SAASC,EAASC,EAAKC,EAAWJ,EAAUK,GACgB,4BAAzCC,gBAAkBA,IAAIC,UAAO,IAA4BF,IAAeN,IACvFS,QAAQC,KACN,0NAEFV,GAAyB,GAE3B,MAAMW,EAAQb,EACZM,EAAIQ,UACJR,EAAIS,SACJT,EAAIU,gBAAkBV,EAAIW,gBAC1BV,EACAC,GAGF,OADAV,EAAce,GACPA,CACT,CACA,MAAMK,EAAcC,IACwC,4BAAzCV,gBAAkBA,IAAIC,UAAO,IAAmD,mBAAhBS,GAC/ER,QAAQC,KACN,mIAGJ,MAAMN,EAA6B,mBAAhBa,EAA6BC,EAAYD,GAAeA,EACrEE,EAAgB,CAACd,EAAUC,IAAeH,EAASC,EAAKC,EAAUC,GAExE,OADAc,OAAOC,OAAOF,EAAef,GACtBe,CAAa,EAEhBG,EAAUL,GAAgBA,EAAcD,EAAWC,GAAeD"}