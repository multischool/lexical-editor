import a from"../utils/index.js";import r from"../channels/reusable.js";const n={re:/^rgba?\(\s*?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e\d+)?(%?))\s*?(?:,|\s)\s*?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e\d+)?(%?))\s*?(?:,|\s)\s*?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e\d+)?(%?))(?:\s*?(?:,|\/)\s*?\+?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e\d+)?(%?)))?\s*?\)$/i,parse:s=>{const e=s.charCodeAt(0);if(114!==e&&82!==e)return;const l=s.match(n.re);if(!l)return;const[,d,o,t,c,p,g,u,i]=l;return r.set({r:a.channel.clamp.r(o?2.55*parseFloat(d):parseFloat(d)),g:a.channel.clamp.g(c?2.55*parseFloat(t):parseFloat(t)),b:a.channel.clamp.b(g?2.55*parseFloat(p):parseFloat(p)),a:u?a.channel.clamp.a(i?parseFloat(u)/100:parseFloat(u)):1},s)},stringify:r=>{const{r:n,g:s,b:e,a:l}=r;return l<1?`rgba(${a.lang.round(n)}, ${a.lang.round(s)}, ${a.lang.round(e)}, ${a.lang.round(l)})`:`rgb(${a.lang.round(n)}, ${a.lang.round(s)}, ${a.lang.round(e)})`}};var s=n;export{s as default};
//# sourceMappingURL=rgb.js.map
