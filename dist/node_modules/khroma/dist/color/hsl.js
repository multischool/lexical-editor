import a from"../utils/index.js";import e from"../channels/reusable.js";const r={re:/^hsla?\(\s*?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e-?\d+)?(?:deg|grad|rad|turn)?)\s*?(?:,|\s)\s*?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e-?\d+)?%)\s*?(?:,|\s)\s*?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e-?\d+)?%)(?:\s*?(?:,|\/)\s*?\+?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e-?\d+)?(%)?))?\s*?\)$/i,hueRe:/^(.+?)(deg|grad|rad|turn)$/i,_hue2deg:e=>{const n=e.match(r.hueRe);if(n){const[,e,r]=n;switch(r){case"grad":return a.channel.clamp.h(.9*parseFloat(e));case"rad":return a.channel.clamp.h(180*parseFloat(e)/Math.PI);case"turn":return a.channel.clamp.h(360*parseFloat(e))}}return a.channel.clamp.h(parseFloat(e))},parse:n=>{const s=n.charCodeAt(0);if(104!==s&&72!==s)return;const l=n.match(r.re);if(!l)return;const[,t,d,c,o,h]=l;return e.set({h:r._hue2deg(t),s:a.channel.clamp.s(parseFloat(d)),l:a.channel.clamp.l(parseFloat(c)),a:o?a.channel.clamp.a(h?parseFloat(o)/100:parseFloat(o)):1},n)},stringify:e=>{const{h:r,s:n,l:s,a:l}=e;return l<1?`hsla(${a.lang.round(r)}, ${a.lang.round(n)}%, ${a.lang.round(s)}%, ${l})`:`hsl(${a.lang.round(r)}, ${a.lang.round(n)}%, ${a.lang.round(s)}%)`}};var n=r;export{n as default};
//# sourceMappingURL=hsl.js.map
