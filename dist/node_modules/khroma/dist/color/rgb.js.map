{"version":3,"file":"rgb.js","sources":["../../../../../node_modules/khroma/dist/color/rgb.js"],"sourcesContent":["/* IMPORT */\nimport _ from '../utils/index.js';\nimport ChannelsReusable from '../channels/reusable.js';\n/* MAIN */\nconst RGB = {\n    /* VARIABLES */\n    re: /^rgba?\\(\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?))\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?))\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?))(?:\\s*?(?:,|\\/)\\s*?\\+?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e\\d+)?(%?)))?\\s*?\\)$/i,\n    /* API */\n    parse: (color) => {\n        const charCode = color.charCodeAt(0);\n        if (charCode !== 114 && charCode !== 82)\n            return; // 'r'/'R'\n        const match = color.match(RGB.re);\n        if (!match)\n            return;\n        const [, r, isRedPercentage, g, isGreenPercentage, b, isBluePercentage, a, isAlphaPercentage] = match;\n        return ChannelsReusable.set({\n            r: _.channel.clamp.r(isRedPercentage ? parseFloat(r) * 2.55 : parseFloat(r)),\n            g: _.channel.clamp.g(isGreenPercentage ? parseFloat(g) * 2.55 : parseFloat(g)),\n            b: _.channel.clamp.b(isBluePercentage ? parseFloat(b) * 2.55 : parseFloat(b)),\n            a: a ? _.channel.clamp.a(isAlphaPercentage ? parseFloat(a) / 100 : parseFloat(a)) : 1\n        }, color);\n    },\n    stringify: (channels) => {\n        const { r, g, b, a } = channels;\n        if (a < 1) { // RGBA\n            return `rgba(${_.lang.round(r)}, ${_.lang.round(g)}, ${_.lang.round(b)}, ${_.lang.round(a)})`;\n        }\n        else { // RGB\n            return `rgb(${_.lang.round(r)}, ${_.lang.round(g)}, ${_.lang.round(b)})`;\n        }\n    }\n};\n/* EXPORT */\nexport default RGB;\n"],"names":["RGB","re","parse","color","charCode","charCodeAt","match","r","isRedPercentage","g","isGreenPercentage","b","isBluePercentage","a","isAlphaPercentage","ChannelsReusable","set","_","channel","clamp","parseFloat","stringify","channels","lang","round","RGB$1"],"mappings":"wEAIA,MAAMA,EAAM,CAERC,GAAI,+PAEJC,MAAQC,IACJ,MAAMC,EAAWD,EAAME,WAAW,GAClC,GAAiB,MAAbD,GAAiC,KAAbA,EACpB,OACJ,MAAME,EAAQH,EAAMG,MAAMN,EAAIC,IAC9B,IAAKK,EACD,OACJ,OAASC,EAAGC,EAAiBC,EAAGC,EAAmBC,EAAGC,EAAkBC,EAAGC,GAAqBR,EAChG,OAAOS,EAAiBC,IAAI,CACxBT,EAAGU,EAAEC,QAAQC,MAAMZ,EAAEC,EAAkC,KAAhBY,WAAWb,GAAYa,WAAWb,IACzEE,EAAGQ,EAAEC,QAAQC,MAAMV,EAAEC,EAAoC,KAAhBU,WAAWX,GAAYW,WAAWX,IAC3EE,EAAGM,EAAEC,QAAQC,MAAMR,EAAEC,EAAmC,KAAhBQ,WAAWT,GAAYS,WAAWT,IAC1EE,EAAGA,EAAII,EAAEC,QAAQC,MAAMN,EAAEC,EAAoBM,WAAWP,GAAK,IAAMO,WAAWP,IAAM,GACrFV,EAAM,EAEbkB,UAAYC,IACR,MAAMf,EAAEA,EAACE,EAAEA,EAACE,EAAEA,EAACE,EAAEA,GAAMS,EACvB,OAAIT,EAAI,EACG,QAAQI,EAAEM,KAAKC,MAAMjB,OAAOU,EAAEM,KAAKC,MAAMf,OAAOQ,EAAEM,KAAKC,MAAMb,OAAOM,EAAEM,KAAKC,MAAMX,MAGjF,OAAOI,EAAEM,KAAKC,MAAMjB,OAAOU,EAAEM,KAAKC,MAAMf,OAAOQ,EAAEM,KAAKC,MAAMb,KACtE,GAIT,IAAAc,EAAezB"}