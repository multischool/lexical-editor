{"version":3,"file":"hex.js","sources":["../../../../../node_modules/khroma/dist/color/hex.js"],"sourcesContent":["/* IMPORT */\nimport _ from '../utils/index.js';\nimport ChannelsReusable from '../channels/reusable.js';\nimport { DEC2HEX } from '../constants.js';\n/* MAIN */\nconst Hex = {\n    /* VARIABLES */\n    re: /^#((?:[a-f0-9]{2}){2,4}|[a-f0-9]{3})$/i,\n    /* API */\n    parse: (color) => {\n        if (color.charCodeAt(0) !== 35)\n            return; // '#'\n        const match = color.match(Hex.re);\n        if (!match)\n            return;\n        const hex = match[1];\n        const dec = parseInt(hex, 16);\n        const length = hex.length;\n        const hasAlpha = length % 4 === 0;\n        const isFullLength = length > 4;\n        const multiplier = isFullLength ? 1 : 17;\n        const bits = isFullLength ? 8 : 4;\n        const bitsOffset = hasAlpha ? 0 : -1;\n        const mask = isFullLength ? 255 : 15;\n        return ChannelsReusable.set({\n            r: ((dec >> (bits * (bitsOffset + 3))) & mask) * multiplier,\n            g: ((dec >> (bits * (bitsOffset + 2))) & mask) * multiplier,\n            b: ((dec >> (bits * (bitsOffset + 1))) & mask) * multiplier,\n            a: hasAlpha ? (dec & mask) * multiplier / 255 : 1\n        }, color);\n    },\n    stringify: (channels) => {\n        const { r, g, b, a } = channels;\n        if (a < 1) { // #RRGGBBAA\n            return `#${DEC2HEX[Math.round(r)]}${DEC2HEX[Math.round(g)]}${DEC2HEX[Math.round(b)]}${DEC2HEX[Math.round(a * 255)]}`;\n        }\n        else { // #RRGGBB\n            return `#${DEC2HEX[Math.round(r)]}${DEC2HEX[Math.round(g)]}${DEC2HEX[Math.round(b)]}`;\n        }\n    }\n};\n/* EXPORT */\nexport default Hex;\n"],"names":["Hex","re","parse","color","charCodeAt","match","hex","dec","parseInt","length","hasAlpha","isFullLength","multiplier","bits","bitsOffset","mask","ChannelsReusable","set","r","g","b","a","stringify","channels","DEC2HEX","Math","round","Hex$1"],"mappings":"iFAKA,MAAMA,EAAM,CAERC,GAAI,yCAEJC,MAAQC,IACJ,GAA4B,KAAxBA,EAAMC,WAAW,GACjB,OACJ,MAAMC,EAAQF,EAAME,MAAML,EAAIC,IAC9B,IAAKI,EACD,OACJ,MAAMC,EAAMD,EAAM,GACZE,EAAMC,SAASF,EAAK,IACpBG,EAASH,EAAIG,OACbC,EAAWD,EAAS,GAAM,EAC1BE,EAAeF,EAAS,EACxBG,EAAaD,EAAe,EAAI,GAChCE,EAAOF,EAAe,EAAI,EAC1BG,EAAaJ,EAAW,GAAK,EAC7BK,EAAOJ,EAAe,IAAM,GAClC,OAAOK,EAAiBC,IAAI,CACxBC,GAAKX,GAAQM,GAAQC,EAAa,GAAOC,GAAQH,EACjDO,GAAKZ,GAAQM,GAAQC,EAAa,GAAOC,GAAQH,EACjDQ,GAAKb,GAAQM,GAAQC,EAAa,GAAOC,GAAQH,EACjDS,EAAGX,GAAYH,EAAMQ,GAAQH,EAAa,IAAM,GACjDT,EAAM,EAEbmB,UAAYC,IACR,MAAML,EAAEA,EAACC,EAAEA,EAACC,EAAEA,EAACC,EAAEA,GAAME,EACvB,OAAIF,EAAI,EACG,IAAIG,EAAQC,KAAKC,MAAMR,MAAMM,EAAQC,KAAKC,MAAMP,MAAMK,EAAQC,KAAKC,MAAMN,MAAMI,EAAQC,KAAKC,MAAU,IAAJL,MAGlG,IAAIG,EAAQC,KAAKC,MAAMR,MAAMM,EAAQC,KAAKC,MAAMP,MAAMK,EAAQC,KAAKC,MAAMN,KACnF,GAIT,IAAAO,EAAe3B"}