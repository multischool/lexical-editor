{"version":3,"file":"millisecond.js","sources":["../../../../node_modules/d3-time/src/millisecond.js"],"sourcesContent":["import {timeInterval} from \"./interval.js\";\n\nexport const millisecond = timeInterval(() => {\n  // noop\n}, (date, step) => {\n  date.setTime(+date + step);\n}, (start, end) => {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = (k) => {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return timeInterval((date) => {\n    date.setTime(Math.floor(date / k) * k);\n  }, (date, step) => {\n    date.setTime(+date + step * k);\n  }, (start, end) => {\n    return (end - start) / k;\n  });\n};\n\nexport const milliseconds = millisecond.range;\n"],"names":["millisecond","timeInterval","date","step","setTime","start","end","every","k","Math","floor","isFinite","range"],"mappings":"6CAEY,MAACA,EAAcC,GAAa,SAErC,CAACC,EAAMC,KACRD,EAAKE,SAASF,EAAOC,EAAK,IACzB,CAACE,EAAOC,IACFA,EAAMD,IAIfL,EAAYO,MAASC,IACnBA,EAAIC,KAAKC,MAAMF,GACVG,SAASH,IAAQA,EAAI,EACpBA,EAAI,EACHP,GAAcC,IACnBA,EAAKE,QAAQK,KAAKC,MAAMR,EAAOM,GAAKA,EAAE,IACrC,CAACN,EAAMC,KACRD,EAAKE,SAASF,EAAOC,EAAOK,EAAE,IAC7B,CAACH,EAAOC,KACDA,EAAMD,GAASG,IANJR,EADgB,MAWXA,EAAYY"}