{"version":3,"file":"classed.js","sources":["../../../../../node_modules/d3-selection/src/selection/classed.js"],"sourcesContent":["function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n"],"names":["classArray","string","trim","split","classList","node","ClassList","this","_node","_names","getAttribute","classedAdd","names","list","i","n","length","add","classedRemove","remove","classedTrue","classedFalse","classedFunction","value","apply","arguments","selection_classed","name","contains","each","prototype","indexOf","push","setAttribute","join","splice"],"mappings":"AAAA,SAASA,EAAWC,GAClB,OAAOA,EAAOC,OAAOC,MAAM,QAC7B,CAEA,SAASC,EAAUC,GACjB,OAAOA,EAAKD,WAAa,IAAIE,EAAUD,EACzC,CAEA,SAASC,EAAUD,GACjBE,KAAKC,MAAQH,EACbE,KAAKE,OAAST,EAAWK,EAAKK,aAAa,UAAY,GACzD,CAsBA,SAASC,EAAWN,EAAMO,GAExB,IADA,IAAIC,EAAOT,EAAUC,GAAOS,GAAK,EAAGC,EAAIH,EAAMI,SACrCF,EAAIC,GAAGF,EAAKI,IAAIL,EAAME,GACjC,CAEA,SAASI,EAAcb,EAAMO,GAE3B,IADA,IAAIC,EAAOT,EAAUC,GAAOS,GAAK,EAAGC,EAAIH,EAAMI,SACrCF,EAAIC,GAAGF,EAAKM,OAAOP,EAAME,GACpC,CAEA,SAASM,EAAYR,GACnB,OAAO,WACLD,EAAWJ,KAAMK,EACrB,CACA,CAEA,SAASS,EAAaT,GACpB,OAAO,WACLM,EAAcX,KAAMK,EACxB,CACA,CAEA,SAASU,EAAgBV,EAAOW,GAC9B,OAAO,YACJA,EAAMC,MAAMjB,KAAMkB,WAAad,EAAaO,GAAeX,KAAMK,EACtE,CACA,CAEe,SAAAc,EAASC,EAAMJ,GAC5B,IAAIX,EAAQZ,EAAW2B,EAAO,IAE9B,GAAIF,UAAUT,OAAS,EAAG,CAExB,IADA,IAAIH,EAAOT,EAAUG,KAAKF,QAASS,GAAK,EAAGC,EAAIH,EAAMI,SAC5CF,EAAIC,OAAQF,EAAKe,SAAShB,EAAME,IAAK,OAAO,EACrD,OAAO,CACR,CAED,OAAOP,KAAKsB,MAAuB,mBAAVN,EACnBD,EAAkBC,EAClBH,EACAC,GAAcT,EAAOW,GAC7B,CA7DAjB,EAAUwB,UAAY,CACpBb,IAAK,SAASU,GACJpB,KAAKE,OAAOsB,QAAQJ,GACpB,IACNpB,KAAKE,OAAOuB,KAAKL,GACjBpB,KAAKC,MAAMyB,aAAa,QAAS1B,KAAKE,OAAOyB,KAAK,MAErD,EACDf,OAAQ,SAASQ,GACf,IAAIb,EAAIP,KAAKE,OAAOsB,QAAQJ,GACxBb,GAAK,IACPP,KAAKE,OAAO0B,OAAOrB,EAAG,GACtBP,KAAKC,MAAMyB,aAAa,QAAS1B,KAAKE,OAAOyB,KAAK,MAErD,EACDN,SAAU,SAASD,GACjB,OAAOpB,KAAKE,OAAOsB,QAAQJ,IAAS,CACrC"}