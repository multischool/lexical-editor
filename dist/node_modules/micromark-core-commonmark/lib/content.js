import{factorySpace as n}from"../../micromark-factory-space/index.js";import{markdownLineEnding as e}from"../../micromark-util-character/index.js";import{subtokenize as t}from"../../micromark-util-subtokenize/index.js";const r={tokenize:function(n,t){let r;return function(e){return n.enter("content"),r=n.enter("chunkContent",{contentType:"content"}),o(e)};function o(t){return null===t?c(t):e(t)?n.check(i,u,c)(t):(n.consume(t),o)}function c(e){return n.exit("chunkContent"),n.exit("content"),t(e)}function u(e){return n.consume(e),n.exit("chunkContent"),r.next=n.enter("chunkContent",{contentType:"content",previous:r}),r=r.next,o}},resolve:function(n){return t(n),n}},i={tokenize:function(t,r,i){const o=this;return function(e){return t.exit("chunkContent"),t.enter("lineEnding"),t.consume(e),t.exit("lineEnding"),n(t,c,"linePrefix")};function c(n){if(null===n||e(n))return i(n);const c=o.events[o.events.length-1];return!o.parser.constructs.disable.null.includes("codeIndented")&&c&&"linePrefix"===c[1].type&&c[2].sliceSerialize(c[1],!0).length>=4?r(n):t.interrupt(o.parser.constructs.flow,i,r)(n)}},partial:!0};export{r as content};
//# sourceMappingURL=content.js.map
