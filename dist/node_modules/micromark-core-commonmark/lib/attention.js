import{push as e,splice as t}from"../../micromark-util-chunked/index.js";import{classifyCharacter as n}from"../../micromark-util-classify-character/index.js";import{resolveAll as s}from"../../micromark-util-resolve-all/index.js";const r={name:"attention",tokenize:function(e,t){const s=this.parser.constructs.attentionMarkers.null,r=this.previous,o=n(r);let i;return function(t){return i=t,e.enter("attentionSequence"),a(t)};function a(c){if(c===i)return e.consume(c),a;const f=e.exit("attentionSequence"),u=n(c),l=!u||2===u&&o||s.includes(c),d=!o||2===o&&u||s.includes(r);return f._open=Boolean(42===i?l:l&&(o||!d)),f._close=Boolean(42===i?d:d&&(u||!l)),t(c)}},resolveAll:function(n,r){let i,a,c,f,u,l,d,p,m=-1;for(;++m<n.length;)if("enter"===n[m][0]&&"attentionSequence"===n[m][1].type&&n[m][1]._close)for(i=m;i--;)if("exit"===n[i][0]&&"attentionSequence"===n[i][1].type&&n[i][1]._open&&r.sliceSerialize(n[i][1]).charCodeAt(0)===r.sliceSerialize(n[m][1]).charCodeAt(0)){if((n[i][1]._close||n[m][1]._open)&&(n[m][1].end.offset-n[m][1].start.offset)%3&&!((n[i][1].end.offset-n[i][1].start.offset+n[m][1].end.offset-n[m][1].start.offset)%3))continue;l=n[i][1].end.offset-n[i][1].start.offset>1&&n[m][1].end.offset-n[m][1].start.offset>1?2:1;const g=Object.assign({},n[i][1].end),x=Object.assign({},n[m][1].start);o(g,-l),o(x,l),f={type:l>1?"strongSequence":"emphasisSequence",start:g,end:Object.assign({},n[i][1].end)},u={type:l>1?"strongSequence":"emphasisSequence",start:Object.assign({},n[m][1].start),end:x},c={type:l>1?"strongText":"emphasisText",start:Object.assign({},n[i][1].end),end:Object.assign({},n[m][1].start)},a={type:l>1?"strong":"emphasis",start:Object.assign({},f.start),end:Object.assign({},u.end)},n[i][1].end=Object.assign({},f.start),n[m][1].start=Object.assign({},u.end),d=[],n[i][1].end.offset-n[i][1].start.offset&&(d=e(d,[["enter",n[i][1],r],["exit",n[i][1],r]])),d=e(d,[["enter",a,r],["enter",f,r],["exit",f,r],["enter",c,r]]),d=e(d,s(r.parser.constructs.insideSpan.null,n.slice(i+1,m),r)),d=e(d,[["exit",c,r],["enter",u,r],["exit",u,r],["exit",a,r]]),n[m][1].end.offset-n[m][1].start.offset?(p=2,d=e(d,[["enter",n[m][1],r],["exit",n[m][1],r]])):p=0,t(n,i-1,m-i+3,d),m=i+d.length-p-2;break}m=-1;for(;++m<n.length;)"attentionSequence"===n[m][1].type&&(n[m][1].type="data");return n}};function o(e,t){e.column+=t,e.offset+=t,e._bufferIndex+=t}export{r as attention};
//# sourceMappingURL=attention.js.map
