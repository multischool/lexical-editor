import{decodeNamedCharacterReference as e}from"../../decode-named-character-reference/index.js";import{asciiAlphanumeric as r,asciiHexDigit as c,asciiDigit as a}from"../../micromark-util-character/index.js";const n={name:"characterReference",tokenize:function(n,t,i){const f=this;let u,o,h=0;return function(e){return n.enter("characterReference"),n.enter("characterReferenceMarker"),n.consume(e),n.exit("characterReferenceMarker"),m};function m(e){return 35===e?(n.enter("characterReferenceMarkerNumeric"),n.consume(e),n.exit("characterReferenceMarkerNumeric"),R):(n.enter("characterReferenceValue"),u=31,o=r,s(e))}function R(e){return 88===e||120===e?(n.enter("characterReferenceMarkerHexadecimal"),n.consume(e),n.exit("characterReferenceMarkerHexadecimal"),n.enter("characterReferenceValue"),u=6,o=c,s):(n.enter("characterReferenceValue"),u=7,o=a,s(e))}function s(c){if(59===c&&h){const a=n.exit("characterReferenceValue");return o!==r||e(f.sliceSerialize(a))?(n.enter("characterReferenceMarker"),n.consume(c),n.exit("characterReferenceMarker"),n.exit("characterReference"),t):i(c)}return o(c)&&h++<u?(n.consume(c),s):i(c)}}};export{n as characterReference};
//# sourceMappingURL=character-reference.js.map
