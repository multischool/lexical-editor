{"version":3,"file":"LexicalSelection.mjs.js","sources":["../../../../node_modules/@lexical/selection/LexicalSelection.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport * as modDev from './LexicalSelection.dev.mjs';\nimport * as modProd from './LexicalSelection.prod.mjs';\nconst mod = process.env.NODE_ENV !== 'production' ? modDev : modProd;\nexport const $addNodeStyle = mod.$addNodeStyle;\nexport const $cloneWithProperties = mod.$cloneWithProperties;\nexport const $copyBlockFormatIndent = mod.$copyBlockFormatIndent;\nexport const $ensureForwardRangeSelection = mod.$ensureForwardRangeSelection;\nexport const $forEachSelectedTextNode = mod.$forEachSelectedTextNode;\nexport const $getSelectionStyleValueForProperty = mod.$getSelectionStyleValueForProperty;\nexport const $isAtNodeEnd = mod.$isAtNodeEnd;\nexport const $isParentElementRTL = mod.$isParentElementRTL;\nexport const $moveCaretSelection = mod.$moveCaretSelection;\nexport const $moveCharacter = mod.$moveCharacter;\nexport const $patchStyleText = mod.$patchStyleText;\nexport const $selectAll = mod.$selectAll;\nexport const $setBlocksType = mod.$setBlocksType;\nexport const $shouldOverrideDefaultCharacterSelection = mod.$shouldOverrideDefaultCharacterSelection;\nexport const $sliceSelectedTextNodeContent = mod.$sliceSelectedTextNodeContent;\nexport const $trimTextContentFromAnchor = mod.$trimTextContentFromAnchor;\nexport const $wrapNodes = mod.$wrapNodes;\nexport const createDOMRange = mod.createDOMRange;\nexport const createRectsFromDOMRange = mod.createRectsFromDOMRange;\nexport const getCSSFromStyleObject = mod.getCSSFromStyleObject;\nexport const getStyleObjectFromCSS = mod.getStyleObjectFromCSS;\nexport const trimTextContentFromAnchor = mod.trimTextContentFromAnchor;"],"names":["mod","process","env","NODE_ENV","modDev","modProd","$addNodeStyle","$cloneWithProperties","$copyBlockFormatIndent","$ensureForwardRangeSelection","$forEachSelectedTextNode","$getSelectionStyleValueForProperty","$isAtNodeEnd","$isParentElementRTL","$moveCaretSelection","$moveCharacter","$patchStyleText","$selectAll","$setBlocksType","$shouldOverrideDefaultCharacterSelection","$sliceSelectedTextNodeContent","$trimTextContentFromAnchor","$wrapNodes","createDOMRange","createRectsFromDOMRange","getCSSFromStyleObject","getStyleObjectFromCSS","trimTextContentFromAnchor"],"mappings":"iGAUA,MAAMA,EAA+B,eAAzBC,QAAQC,IAAIC,SAA4BC,EAASC,EAChCL,EAAIM,cACGN,EAAIO,qBACFP,EAAIQ,uBACER,EAAIS,6BACRT,EAAIU,yBACMV,EAAIW,mCAC1C,MAACC,EAAeZ,EAAIY,aACGZ,EAAIa,oBACJb,EAAIc,oBACTd,EAAIe,eACHf,EAAIgB,gBACThB,EAAIiB,WAClB,MAACC,EAAiBlB,EAAIkB,eACsBlB,EAAImB,yCAChD,MAACC,EAAgCpB,EAAIoB,8BACpCC,EAA6BrB,EAAIqB,2BACpBrB,EAAIsB,WACAtB,EAAIuB,eACKvB,EAAIwB,wBACNxB,EAAIyB,sBACJzB,EAAI0B,sBACA1B,EAAI2B"}