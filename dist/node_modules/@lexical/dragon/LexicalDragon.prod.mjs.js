import{$getSelection as e,$isRangeSelection as t,$isTextNode as n}from"lexical";function o(o){const i=window.location.origin,r=r=>{if(r.origin!==i)return;const a=o.getRootElement();if(document.activeElement!==a)return;const s=r.data;if("string"==typeof s){let i;try{i=JSON.parse(s)}catch(e){return}if(i&&"nuanria_messaging"===i.protocol&&"request"===i.type){const a=i.payload;if(a&&"makeChanges"===a.functionId){const i=a.args;if(i){const[a,s,c,g,d,f]=i;o.update((()=>{const o=e();if(t(o)){const e=o.anchor;let t=e.getNode(),i=0,f=0;if(n(t)&&a>=0&&s>=0&&(i=a,f=a+s,o.setTextNodeRange(t,i,t,f)),i===f&&""===c||(o.insertRawText(c),t=e.getNode()),n(t)){i=g,f=g+d;const e=t.getTextContentSize();i=i>e?e:i,f=f>e?e:f,o.setTextNodeRange(t,i,t,f)}r.stopImmediatePropagation()}}))}}}}};return window.addEventListener("message",r,!0),()=>{window.removeEventListener("message",r,!0)}}export{o as registerDragonSupport};
//# sourceMappingURL=LexicalDragon.prod.mjs.js.map
