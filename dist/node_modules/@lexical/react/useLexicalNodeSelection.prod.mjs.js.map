{"version":3,"file":"useLexicalNodeSelection.prod.mjs.js","sources":["../../../../node_modules/@lexical/react/useLexicalNodeSelection.prod.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport{useLexicalComposerContext as e}from\"@lexical/react/LexicalComposerContext\";import{$getSelection as t,$isNodeSelection as r,$createNodeSelection as o,$setSelection as n,$getNodeByKey as c}from\"lexical\";import{useState as a,useEffect as i,useCallback as l}from\"react\";function d(e,t){return e.getEditorState().read((()=>{const e=c(t);return null!==e&&e.isSelected()}))}function u(c){const[u]=e(),[p,s]=a((()=>d(u,c)));i((()=>{let e=!0;const t=u.registerUpdateListener((()=>{e&&s(d(u,c))}));return()=>{e=!1,t()}}),[u,c]);return[p,l((e=>{u.update((()=>{let a=t();r(a)||(a=o(),n(a)),r(a)&&(e?a.add(c):a.delete(c))}))}),[u,c]),l((()=>{u.update((()=>{const e=t();r(e)&&e.clear()}))}),[u])]}export{u as useLexicalNodeSelection};\n"],"names":["d","e","t","getEditorState","read","c","isSelected","u","p","s","a","i","registerUpdateListener","l","update","r","o","n","add","delete","clear"],"mappings":"2QAQiR,SAASA,EAAEC,EAAEC,GAAG,OAAOD,EAAEE,iBAAiBC,MAAI,KAAO,MAAMH,EAAEI,EAAEH,GAAG,OAAO,OAAOD,GAAGA,EAAEK,YAAa,GAAE,CAAC,SAASC,EAAEF,GAAG,MAAME,GAAGN,KAAKO,EAAEC,GAAGC,GAAC,IAAMV,EAAEO,EAAEF,KAA2G,OAAtGM,GAAG,KAAK,IAAIV,GAAE,EAAG,MAAMC,EAAEK,EAAEK,wBAAsB,KAAOX,GAAGQ,EAAET,EAAEO,EAAEF,GAAI,IAAG,MAAM,KAAKJ,GAAE,EAAGC,GAAC,CAAI,GAAE,CAACK,EAAEF,IAAU,CAACG,EAAEK,GAAGZ,IAAIM,EAAEO,QAAQ,KAAK,IAAIJ,EAAER,IAAIa,EAAEL,KAAKA,EAAEM,IAAIC,EAAEP,IAAIK,EAAEL,KAAKT,EAAES,EAAEQ,IAAIb,GAAGK,EAAES,OAAOd,GAAI,GAAG,GAAE,CAACE,EAAEF,IAAIQ,GAAC,KAAON,EAAEO,QAAQ,KAAK,MAAMb,EAAEC,IAAIa,EAAEd,IAAIA,EAAEmB,OAAQ,GAAG,GAAE,CAACb,IAAI"}