{"version":3,"file":"LexicalContentEditable.dev.mjs.js","sources":["../../../../node_modules/@lexical/react/LexicalContentEditable.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLayoutEffect, useEffect, forwardRef, useState, useCallback, useMemo } from 'react';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { $canShowPlaceholderCurry } from '@lexical/text';\nimport { mergeRegister } from '@lexical/utils';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n// Source: https://github.com/gregberge/react-merge-refs/blob/main/src/index.tsx\n\nfunction mergeRefs(...refs) {\n  return value => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction ContentEditableElementImpl({\n  editor,\n  ariaActiveDescendant,\n  ariaAutoComplete,\n  ariaControls,\n  ariaDescribedBy,\n  ariaErrorMessage,\n  ariaExpanded,\n  ariaInvalid,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaMultiline,\n  ariaOwns,\n  ariaRequired,\n  autoCapitalize,\n  className,\n  id,\n  role = 'textbox',\n  spellCheck = true,\n  style,\n  tabIndex,\n  'data-testid': testid,\n  ...rest\n}, ref) {\n  const [isEditable, setEditable] = useState(editor.isEditable());\n  const handleRef = useCallback(rootElement => {\n    // defaultView is required for a root element.\n    // In multi-window setups, the defaultView may not exist at certain points.\n    if (rootElement && rootElement.ownerDocument && rootElement.ownerDocument.defaultView) {\n      editor.setRootElement(rootElement);\n    } else {\n      editor.setRootElement(null);\n    }\n  }, [editor]);\n  const mergedRefs = useMemo(() => mergeRefs(ref, handleRef), [handleRef, ref]);\n  useLayoutEffectImpl(() => {\n    setEditable(editor.isEditable());\n    return editor.registerEditableListener(currentIsEditable => {\n      setEditable(currentIsEditable);\n    });\n  }, [editor]);\n  return /*#__PURE__*/jsx(\"div\", {\n    \"aria-activedescendant\": isEditable ? ariaActiveDescendant : undefined,\n    \"aria-autocomplete\": isEditable ? ariaAutoComplete : 'none',\n    \"aria-controls\": isEditable ? ariaControls : undefined,\n    \"aria-describedby\": ariaDescribedBy\n    // for compat, only override aria-errormessage if ariaErrorMessage is defined\n    ,\n    ...(ariaErrorMessage != null ? {\n      'aria-errormessage': ariaErrorMessage\n    } : {}),\n    \"aria-expanded\": isEditable && role === 'combobox' ? !!ariaExpanded : undefined\n    // for compat, only override aria-invalid if ariaInvalid is defined\n    ,\n    ...(ariaInvalid != null ? {\n      'aria-invalid': ariaInvalid\n    } : {}),\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-multiline\": ariaMultiline,\n    \"aria-owns\": isEditable ? ariaOwns : undefined,\n    \"aria-readonly\": isEditable ? undefined : true,\n    \"aria-required\": ariaRequired,\n    autoCapitalize: autoCapitalize,\n    className: className,\n    contentEditable: isEditable,\n    \"data-testid\": testid,\n    id: id,\n    ref: mergedRefs,\n    role: isEditable ? role : undefined,\n    spellCheck: spellCheck,\n    style: style,\n    tabIndex: tabIndex,\n    ...rest\n  });\n}\nconst ContentEditableElement = /*#__PURE__*/forwardRef(ContentEditableElementImpl);\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction canShowPlaceholderFromCurrentEditorState(editor) {\n  const currentCanShowPlaceholder = editor.getEditorState().read($canShowPlaceholderCurry(editor.isComposing()));\n  return currentCanShowPlaceholder;\n}\nfunction useCanShowPlaceholder(editor) {\n  const [canShowPlaceholder, setCanShowPlaceholder] = useState(() => canShowPlaceholderFromCurrentEditorState(editor));\n  useLayoutEffectImpl(() => {\n    function resetCanShowPlaceholder() {\n      const currentCanShowPlaceholder = canShowPlaceholderFromCurrentEditorState(editor);\n      setCanShowPlaceholder(currentCanShowPlaceholder);\n    }\n    resetCanShowPlaceholder();\n    return mergeRegister(editor.registerUpdateListener(() => {\n      resetCanShowPlaceholder();\n    }), editor.registerEditableListener(() => {\n      resetCanShowPlaceholder();\n    }));\n  }, [editor]);\n  return canShowPlaceholder;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n/**\n * @deprecated This type has been renamed to `ContentEditableProps` to provide a clearer and more descriptive name.\n * For backward compatibility, this type is still exported as `Props`, but it is recommended to migrate to using `ContentEditableProps` instead.\n *\n * @note This alias is maintained for compatibility purposes but may be removed in future versions.\n * Please update your codebase to use `ContentEditableProps` to ensure long-term maintainability.\n */\n\nconst ContentEditable = /*#__PURE__*/forwardRef(ContentEditableImpl);\nfunction ContentEditableImpl(props, ref) {\n  const {\n    placeholder,\n    ...rest\n  } = props;\n  const [editor] = useLexicalComposerContext();\n  return /*#__PURE__*/jsxs(Fragment, {\n    children: [/*#__PURE__*/jsx(ContentEditableElement, {\n      editor: editor,\n      ...rest,\n      ref: ref\n    }), placeholder != null && /*#__PURE__*/jsx(Placeholder, {\n      editor: editor,\n      content: placeholder\n    })]\n  });\n}\nfunction Placeholder({\n  content,\n  editor\n}) {\n  const showPlaceholder = useCanShowPlaceholder(editor);\n  const [isEditable, setEditable] = useState(editor.isEditable());\n  useLayoutEffect(() => {\n    setEditable(editor.isEditable());\n    return editor.registerEditableListener(currentIsEditable => {\n      setEditable(currentIsEditable);\n    });\n  }, [editor]);\n  if (!showPlaceholder) {\n    return null;\n  }\n  let placeholder = null;\n  if (typeof content === 'function') {\n    placeholder = content(isEditable);\n  } else if (content !== null) {\n    placeholder = content;\n  }\n  if (placeholder === null) {\n    return null;\n  }\n  return /*#__PURE__*/jsx(\"div\", {\n    \"aria-hidden\": true,\n    children: placeholder\n  });\n}\n\nexport { ContentEditable, ContentEditableElement };\n"],"names":["useLayoutEffectImpl","window","document","createElement","useLayoutEffect","useEffect","ContentEditableElementImpl","editor","ariaActiveDescendant","ariaAutoComplete","ariaControls","ariaDescribedBy","ariaErrorMessage","ariaExpanded","ariaInvalid","ariaLabel","ariaLabelledBy","ariaMultiline","ariaOwns","ariaRequired","autoCapitalize","className","id","role","spellCheck","style","tabIndex","testid","rest","ref","isEditable","setEditable","useState","handleRef","useCallback","rootElement","ownerDocument","defaultView","setRootElement","mergedRefs","useMemo","refs","value","forEach","current","mergeRefs","registerEditableListener","currentIsEditable","jsx","undefined","contentEditable","ContentEditableElement","forwardRef","canShowPlaceholderFromCurrentEditorState","getEditorState","read","$canShowPlaceholderCurry","isComposing","ContentEditable","ContentEditableImpl","props","placeholder","useLexicalComposerContext","jsxs","Fragment","children","exports","Placeholder","content","showPlaceholder","canShowPlaceholder","setCanShowPlaceholder","resetCanShowPlaceholder","currentCanShowPlaceholder","mergeRegister","registerUpdateListener","useCanShowPlaceholder"],"mappings":"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"}