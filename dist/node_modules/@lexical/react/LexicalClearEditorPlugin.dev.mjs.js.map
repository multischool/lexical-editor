{"version":3,"file":"LexicalClearEditorPlugin.dev.mjs.js","sources":["../../../../node_modules/@lexical/react/LexicalClearEditorPlugin.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { CLEAR_EDITOR_COMMAND, $getRoot, $getSelection, $createParagraphNode, $isRangeSelection, COMMAND_PRIORITY_EDITOR } from 'lexical';\nimport { useLayoutEffect, useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction ClearEditorPlugin({\n  onClear\n}) {\n  const [editor] = useLexicalComposerContext();\n  useLayoutEffectImpl(() => {\n    return editor.registerCommand(CLEAR_EDITOR_COMMAND, payload => {\n      editor.update(() => {\n        if (onClear == null) {\n          const root = $getRoot();\n          const selection = $getSelection();\n          const paragraph = $createParagraphNode();\n          root.clear();\n          root.append(paragraph);\n          if (selection !== null) {\n            paragraph.select();\n          }\n          if ($isRangeSelection(selection)) {\n            selection.format = 0;\n          }\n        } else {\n          onClear();\n        }\n      });\n      return true;\n    }, COMMAND_PRIORITY_EDITOR);\n  }, [editor, onClear]);\n  return null;\n}\n\nexport { ClearEditorPlugin };\n"],"names":["useLayoutEffectImpl","window","document","createElement","useLayoutEffect","useEffect","ClearEditorPlugin","onClear","editor","useLexicalComposerContext","registerCommand","CLEAR_EDITOR_COMMAND","payload","update","root","$getRoot","selection","$getSelection","paragraph","$createParagraphNode","clear","append","select","$isRangeSelection","format","COMMAND_PRIORITY_EDITOR"],"mappings":"iSAoBA,MAcMA,EAdgC,oBAAXC,aAAqD,IAApBA,OAAOC,eAAqE,IAAlCD,OAAOC,SAASC,cAc5EC,EAAkBC,EAU5D,SAASC,GAAkBC,QACzBA,IAEA,MAAOC,GAAUC,IAuBjB,OAtBAT,GAAoB,IACXQ,EAAOE,gBAAgBC,GAAsBC,IAClDJ,EAAOK,QAAO,KACZ,GAAe,MAAXN,EAAiB,CACnB,MAAMO,EAAOC,IACPC,EAAYC,IACZC,EAAYC,IAClBL,EAAKM,QACLN,EAAKO,OAAOH,GACM,OAAdF,GACFE,EAAUI,SAERC,EAAkBP,KACpBA,EAAUQ,OAAS,EAE/B,MACUjB,GACD,KAEI,IACNkB,IACF,CAACjB,EAAQD,IACL,IACT"}