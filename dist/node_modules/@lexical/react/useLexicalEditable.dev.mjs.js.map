{"version":3,"file":"useLexicalEditable.dev.mjs.js","sources":["../../../../node_modules/@lexical/react/useLexicalEditable.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLayoutEffect, useEffect, useMemo, useState, useRef } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Shortcut to Lexical subscriptions when values are used for render.\n * @param subscription - The function to create the {@link LexicalSubscription}. This function's identity must be stable (e.g. defined at module scope or with useCallback).\n */\nfunction useLexicalSubscription(subscription) {\n  const [editor] = useLexicalComposerContext();\n  const initializedSubscription = useMemo(() => subscription(editor), [editor, subscription]);\n  const [value, setValue] = useState(() => initializedSubscription.initialValueFn());\n  const valueRef = useRef(value);\n  useLayoutEffectImpl(() => {\n    const {\n      initialValueFn,\n      subscribe\n    } = initializedSubscription;\n    const currentValue = initialValueFn();\n    if (valueRef.current !== currentValue) {\n      valueRef.current = currentValue;\n      setValue(currentValue);\n    }\n    return subscribe(newValue => {\n      valueRef.current = newValue;\n      setValue(newValue);\n    });\n  }, [initializedSubscription, subscription]);\n  return value;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction subscription(editor) {\n  return {\n    initialValueFn: () => editor.isEditable(),\n    subscribe: callback => {\n      return editor.registerEditableListener(callback);\n    }\n  };\n}\n\n/**\n * Get the current value for {@link LexicalEditor.isEditable}\n * using {@link useLexicalSubscription}.\n * You should prefer this over manually observing the value with\n * {@link LexicalEditor.registerEditableListener},\n * which is a bit tricky to do correctly, particularly when using\n * React StrictMode (the default for development) or concurrency.\n */\nfunction useLexicalEditable() {\n  return useLexicalSubscription(subscription);\n}\n\nexport { useLexicalEditable };\n"],"names":["useLayoutEffectImpl","window","document","createElement","useLayoutEffect","useEffect","subscription","editor","initialValueFn","isEditable","subscribe","callback","registerEditableListener","useLexicalEditable","useLexicalComposerContext","initializedSubscription","useMemo","value","setValue","useState","valueRef","useRef","currentValue","current","newValue","useLexicalSubscription"],"mappings":"0KAmBA,MAcMA,EAdgC,oBAAXC,aAAqD,IAApBA,OAAOC,eAAqE,IAAlCD,OAAOC,SAASC,cAc5EC,EAAkBC,EA6C5D,SAASC,EAAaC,GACpB,MAAO,CACLC,eAAgB,IAAMD,EAAOE,aAC7BC,UAAWC,GACFJ,EAAOK,yBAAyBD,GAG7C,CAUA,SAASE,IACP,OAjDF,SAAgCP,GAC9B,MAAOC,GAAUO,IACXC,EAA0BC,GAAQ,IAAMV,EAAaC,IAAS,CAACA,EAAQD,KACtEW,EAAOC,GAAYC,GAAS,IAAMJ,EAAwBP,mBAC3DY,EAAWC,EAAOJ,GAgBxB,OAfAjB,GAAoB,KAClB,MAAMQ,eACJA,EAAcE,UACdA,GACEK,EACEO,EAAed,IAKrB,OAJIY,EAASG,UAAYD,IACvBF,EAASG,QAAUD,EACnBJ,EAASI,IAEJZ,GAAUc,IACfJ,EAASG,QAAUC,EACnBN,EAASM,EAAS,GAClB,GACD,CAACT,EAAyBT,IACtBW,CACT,CA4BSQ,CAAuBnB,EAChC"}