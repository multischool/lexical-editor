{"version":3,"file":"LexicalOnChangePlugin.dev.mjs.js","sources":["../../../../node_modules/@lexical/react/LexicalOnChangePlugin.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLayoutEffect, useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction OnChangePlugin({\n  ignoreHistoryMergeTagChange = true,\n  ignoreSelectionChange = false,\n  onChange\n}) {\n  const [editor] = useLexicalComposerContext();\n  useLayoutEffectImpl(() => {\n    if (onChange) {\n      return editor.registerUpdateListener(({\n        editorState,\n        dirtyElements,\n        dirtyLeaves,\n        prevEditorState,\n        tags\n      }) => {\n        if (ignoreSelectionChange && dirtyElements.size === 0 && dirtyLeaves.size === 0 || ignoreHistoryMergeTagChange && tags.has('history-merge') || prevEditorState.isEmpty()) {\n          return;\n        }\n        onChange(editorState, editor, tags);\n      });\n    }\n  }, [editor, ignoreHistoryMergeTagChange, ignoreSelectionChange, onChange]);\n  return null;\n}\n\nexport { OnChangePlugin };\n"],"names":["useLayoutEffectImpl","window","document","createElement","useLayoutEffect","useEffect","OnChangePlugin","ignoreHistoryMergeTagChange","ignoreSelectionChange","onChange","editor","useLexicalComposerContext","registerUpdateListener","editorState","dirtyElements","dirtyLeaves","prevEditorState","tags","size","has","isEmpty"],"mappings":"mIAmBA,MAcMA,EAdgC,oBAAXC,aAAqD,IAApBA,OAAOC,eAAqE,IAAlCD,OAAOC,SAASC,cAc5EC,EAAkBC,EAU5D,SAASC,GAAeC,4BACtBA,GAA8B,EAAIC,sBAClCA,GAAwB,EAAKC,SAC7BA,IAEA,MAAOC,GAAUC,IAiBjB,OAhBAX,GAAoB,KAClB,GAAIS,EACF,OAAOC,EAAOE,wBAAuB,EACnCC,cACAC,gBACAC,cACAC,kBACAC,WAEIT,GAAgD,IAAvBM,EAAcI,MAAmC,IAArBH,EAAYG,MAAcX,GAA+BU,EAAKE,IAAI,kBAAoBH,EAAgBI,WAG/JX,EAASI,EAAaH,EAAQO,EAAK,GAEtC,GACA,CAACP,EAAQH,EAA6BC,EAAuBC,IACzD,IACT"}