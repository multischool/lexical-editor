{"version":3,"file":"LexicalOnChangePlugin.prod.mjs.js","sources":["../../../../node_modules/@lexical/react/LexicalOnChangePlugin.prod.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport{useLexicalComposerContext as e}from\"@lexical/react/LexicalComposerContext\";import{useLayoutEffect as t,useEffect as o}from\"react\";const r=\"undefined\"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?t:o;function i({ignoreHistoryMergeTagChange:t=!0,ignoreSelectionChange:o=!1,onChange:i}){const[n]=e();return r((()=>{if(i)return n.registerUpdateListener((({editorState:e,dirtyElements:r,dirtyLeaves:a,prevEditorState:d,tags:s})=>{o&&0===r.size&&0===a.size||t&&s.has(\"history-merge\")||d.isEmpty()||i(e,n,s)}))}),[n,t,o,i]),null}export{i as OnChangePlugin};\n"],"names":["r","window","document","createElement","t","o","i","ignoreHistoryMergeTagChange","ignoreSelectionChange","onChange","n","e","registerUpdateListener","editorState","dirtyElements","dirtyLeaves","a","prevEditorState","d","tags","s","size","has","isEmpty"],"mappings":"mIAQyI,MAAMA,EAAE,oBAAoBC,aAAQ,IAASA,OAAOC,eAAU,IAASD,OAAOC,SAASC,cAAcC,EAAEC,EAAE,SAASC,GAAGC,4BAA4BH,GAAE,EAAGI,sBAAsBH,GAAE,EAAGI,SAASH,IAAI,MAAMI,GAAGC,IAAI,OAAOX,GAAG,KAAK,GAAGM,EAAE,OAAOI,EAAEE,wBAAwB,EAAEC,YAAYF,EAAEG,cAAcd,EAAEe,YAAYC,EAAEC,gBAAgBC,EAAEC,KAAKC,MAAMf,GAAG,IAAIL,EAAEqB,MAAM,IAAIL,EAAEK,MAAMjB,GAAGgB,EAAEE,IAAI,kBAAkBJ,EAAEK,WAAWjB,EAAEK,EAAED,EAAEU,EAAG,GAAG,GAAE,CAACV,EAAEN,EAAEC,EAAEC,IAAI,IAAI"}