{"version":3,"file":"LexicalBlockWithAlignableContents.dev.mjs.js","sources":["../../../../node_modules/@lexical/react/LexicalBlockWithAlignableContents.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { $isDecoratorBlockNode } from '@lexical/react/LexicalDecoratorBlockNode';\nimport { useLexicalNodeSelection } from '@lexical/react/useLexicalNodeSelection';\nimport { mergeRegister, $getNearestBlockElementAncestorOrThrow } from '@lexical/utils';\nimport { FORMAT_ELEMENT_COMMAND, $getSelection, $isNodeSelection, $getNodeByKey, $isRangeSelection, COMMAND_PRIORITY_LOW, CLICK_COMMAND } from 'lexical';\nimport { useRef, useEffect } from 'react';\nimport { jsx } from 'react/jsx-runtime';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction BlockWithAlignableContents({\n  children,\n  format,\n  nodeKey,\n  className\n}) {\n  const [editor] = useLexicalComposerContext();\n  const [isSelected, setSelected, clearSelection] = useLexicalNodeSelection(nodeKey);\n  const ref = useRef(null);\n  useEffect(() => {\n    return mergeRegister(editor.registerCommand(FORMAT_ELEMENT_COMMAND, formatType => {\n      if (isSelected) {\n        const selection = $getSelection();\n        if ($isNodeSelection(selection)) {\n          const node = $getNodeByKey(nodeKey);\n          if ($isDecoratorBlockNode(node)) {\n            node.setFormat(formatType);\n          }\n        } else if ($isRangeSelection(selection)) {\n          const nodes = selection.getNodes();\n          for (const node of nodes) {\n            if ($isDecoratorBlockNode(node)) {\n              node.setFormat(formatType);\n            } else {\n              const element = $getNearestBlockElementAncestorOrThrow(node);\n              element.setFormat(formatType);\n            }\n          }\n        }\n        return true;\n      }\n      return false;\n    }, COMMAND_PRIORITY_LOW), editor.registerCommand(CLICK_COMMAND, event => {\n      if (event.target === ref.current) {\n        event.preventDefault();\n        if (!event.shiftKey) {\n          clearSelection();\n        }\n        setSelected(!isSelected);\n        return true;\n      }\n      return false;\n    }, COMMAND_PRIORITY_LOW));\n  }, [clearSelection, editor, isSelected, nodeKey, setSelected]);\n  return /*#__PURE__*/jsx(\"div\", {\n    className: [className.base, isSelected ? className.focus : null].filter(Boolean).join(' '),\n    ref: ref,\n    style: {\n      textAlign: format ? format : undefined\n    },\n    children: children\n  });\n}\n\nexport { BlockWithAlignableContents };\n"],"names":["BlockWithAlignableContents","children","format","nodeKey","className","editor","useLexicalComposerContext","isSelected","setSelected","clearSelection","useLexicalNodeSelection","ref","useRef","useEffect","mergeRegister","registerCommand","FORMAT_ELEMENT_COMMAND","formatType","selection","$getSelection","$isNodeSelection","node","$getNodeByKey","$isDecoratorBlockNode","setFormat","$isRangeSelection","nodes","getNodes","$getNearestBlockElementAncestorOrThrow","COMMAND_PRIORITY_LOW","CLICK_COMMAND","event","target","current","preventDefault","shiftKey","jsx","base","focus","filter","Boolean","join","style","textAlign","undefined"],"mappings":"onBAwBA,SAASA,GAA2BC,SAClCA,EAAQC,OACRA,EAAMC,QACNA,EAAOC,UACPA,IAEA,MAAOC,GAAUC,KACVC,EAAYC,EAAaC,GAAkBC,EAAwBP,GACpEQ,EAAMC,EAAO,MAoCnB,OAnCAC,GAAU,IACDC,EAAcT,EAAOU,gBAAgBC,GAAwBC,IAClE,GAAIV,EAAY,CACd,MAAMW,EAAYC,IAClB,GAAIC,EAAiBF,GAAY,CAC/B,MAAMG,EAAOC,EAAcnB,GACvBoB,EAAsBF,IACxBA,EAAKG,UAAUP,EAE3B,MAAe,GAAIQ,EAAkBP,GAAY,CACvC,MAAMQ,EAAQR,EAAUS,WACxB,IAAK,MAAMN,KAAQK,EACjB,GAAIH,EAAsBF,GACxBA,EAAKG,UAAUP,OACV,CACWW,EAAuCP,GAC/CG,UAAUP,EACnB,CAEJ,CACD,OAAO,CACR,CACD,OAAO,CAAK,GACXY,GAAuBxB,EAAOU,gBAAgBe,GAAeC,GAC1DA,EAAMC,SAAWrB,EAAIsB,UACvBF,EAAMG,iBACDH,EAAMI,UACT1B,IAEFD,GAAaD,IACN,IAGRsB,KACF,CAACpB,EAAgBJ,EAAQE,EAAYJ,EAASK,IAC7B4B,EAAAA,QAAAA,IAAI,MAAO,CAC7BhC,UAAW,CAACA,EAAUiC,KAAM9B,EAAaH,EAAUkC,MAAQ,MAAMC,OAAOC,SAASC,KAAK,KACtF9B,IAAKA,EACL+B,MAAO,CACLC,UAAWzC,QAAkB0C,GAE/B3C,SAAUA,GAEd"}