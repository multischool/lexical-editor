{"version":3,"file":"LexicalHorizontalRulePlugin.dev.mjs.js","sources":["../../../../node_modules/@lexical/react/LexicalHorizontalRulePlugin.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { INSERT_HORIZONTAL_RULE_COMMAND, $createHorizontalRuleNode } from '@lexical/react/LexicalHorizontalRuleNode';\nimport { $insertNodeToNearestRoot } from '@lexical/utils';\nimport { $getSelection, $isRangeSelection, COMMAND_PRIORITY_EDITOR } from 'lexical';\nimport { useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction HorizontalRulePlugin() {\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    return editor.registerCommand(INSERT_HORIZONTAL_RULE_COMMAND, type => {\n      const selection = $getSelection();\n      if (!$isRangeSelection(selection)) {\n        return false;\n      }\n      const focusNode = selection.focus.getNode();\n      if (focusNode !== null) {\n        const horizontalRuleNode = $createHorizontalRuleNode();\n        $insertNodeToNearestRoot(horizontalRuleNode);\n      }\n      return true;\n    }, COMMAND_PRIORITY_EDITOR);\n  }, [editor]);\n  return null;\n}\n\nexport { HorizontalRulePlugin };\n"],"names":["HorizontalRulePlugin","editor","useLexicalComposerContext","useEffect","registerCommand","INSERT_HORIZONTAL_RULE_COMMAND","type","selection","$getSelection","$isRangeSelection","focus","getNode","horizontalRuleNode","$createHorizontalRuleNode","$insertNodeToNearestRoot","COMMAND_PRIORITY_EDITOR"],"mappings":"uXAsBA,SAASA,IACP,MAAOC,GAAUC,IAejB,OAdAC,GAAU,IACDF,EAAOG,gBAAgBC,GAAgCC,IAC5D,MAAMC,EAAYC,IAClB,IAAKC,EAAkBF,GACrB,OAAO,EAGT,GAAkB,OADAA,EAAUG,MAAMC,UACV,CACtB,MAAMC,EAAqBC,IAC3BC,EAAyBF,EAC1B,CACD,OAAO,CAAI,GACVG,IACF,CAACd,IACG,IACT"}