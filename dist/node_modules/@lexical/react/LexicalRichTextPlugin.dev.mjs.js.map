{"version":3,"file":"LexicalRichTextPlugin.dev.mjs.js","sources":["../../../../node_modules/@lexical/react/LexicalRichTextPlugin.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLexicalEditable } from '@lexical/react/useLexicalEditable';\nimport { $canShowPlaceholderCurry } from '@lexical/text';\nimport { mergeRegister } from '@lexical/utils';\nimport { useLayoutEffect, useEffect, useState, useMemo, Suspense } from 'react';\nimport { flushSync, createPortal } from 'react-dom';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { registerDragonSupport } from '@lexical/dragon';\nimport { registerRichText } from '@lexical/rich-text';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction canShowPlaceholderFromCurrentEditorState(editor) {\n  const currentCanShowPlaceholder = editor.getEditorState().read($canShowPlaceholderCurry(editor.isComposing()));\n  return currentCanShowPlaceholder;\n}\nfunction useCanShowPlaceholder(editor) {\n  const [canShowPlaceholder, setCanShowPlaceholder] = useState(() => canShowPlaceholderFromCurrentEditorState(editor));\n  useLayoutEffectImpl(() => {\n    function resetCanShowPlaceholder() {\n      const currentCanShowPlaceholder = canShowPlaceholderFromCurrentEditorState(editor);\n      setCanShowPlaceholder(currentCanShowPlaceholder);\n    }\n    resetCanShowPlaceholder();\n    return mergeRegister(editor.registerUpdateListener(() => {\n      resetCanShowPlaceholder();\n    }), editor.registerEditableListener(() => {\n      resetCanShowPlaceholder();\n    }));\n  }, [editor]);\n  return canShowPlaceholder;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction useDecorators(editor, ErrorBoundary) {\n  const [decorators, setDecorators] = useState(() => editor.getDecorators());\n\n  // Subscribe to changes\n  useLayoutEffectImpl(() => {\n    return editor.registerDecoratorListener(nextDecorators => {\n      flushSync(() => {\n        setDecorators(nextDecorators);\n      });\n    });\n  }, [editor]);\n  useEffect(() => {\n    // If the content editable mounts before the subscription is added, then\n    // nothing will be rendered on initial pass. We can get around that by\n    // ensuring that we set the value.\n    setDecorators(editor.getDecorators());\n  }, [editor]);\n\n  // Return decorators defined as React Portals\n  return useMemo(() => {\n    const decoratedPortals = [];\n    const decoratorKeys = Object.keys(decorators);\n    for (let i = 0; i < decoratorKeys.length; i++) {\n      const nodeKey = decoratorKeys[i];\n      const reactDecorator = /*#__PURE__*/jsx(ErrorBoundary, {\n        onError: e => editor._onError(e),\n        children: /*#__PURE__*/jsx(Suspense, {\n          fallback: null,\n          children: decorators[nodeKey]\n        })\n      });\n      const element = editor.getElementByKey(nodeKey);\n      if (element !== null) {\n        decoratedPortals.push(/*#__PURE__*/createPortal(reactDecorator, element, nodeKey));\n      }\n    }\n    return decoratedPortals;\n  }, [ErrorBoundary, decorators, editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction useRichTextSetup(editor) {\n  useLayoutEffectImpl(() => {\n    return mergeRegister(registerRichText(editor), registerDragonSupport(editor));\n\n    // We only do this for init\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction RichTextPlugin({\n  contentEditable,\n  // TODO Remove. This property is now part of ContentEditable\n  placeholder = null,\n  ErrorBoundary\n}) {\n  const [editor] = useLexicalComposerContext();\n  const decorators = useDecorators(editor, ErrorBoundary);\n  useRichTextSetup(editor);\n  return /*#__PURE__*/jsxs(Fragment, {\n    children: [contentEditable, /*#__PURE__*/jsx(Placeholder, {\n      content: placeholder\n    }), decorators]\n  });\n}\n\n// TODO remove\nfunction Placeholder({\n  content\n}) {\n  const [editor] = useLexicalComposerContext();\n  const showPlaceholder = useCanShowPlaceholder(editor);\n  const editable = useLexicalEditable();\n  if (!showPlaceholder) {\n    return null;\n  }\n  if (typeof content === 'function') {\n    return content(editable);\n  } else {\n    return content;\n  }\n}\n\nexport { RichTextPlugin };\n"],"names":["useLayoutEffectImpl","window","document","createElement","useLayoutEffect","useEffect","canShowPlaceholderFromCurrentEditorState","editor","getEditorState","read","$canShowPlaceholderCurry","isComposing","RichTextPlugin","contentEditable","placeholder","ErrorBoundary","useLexicalComposerContext","decorators","setDecorators","useState","getDecorators","registerDecoratorListener","nextDecorators","flushSync","useMemo","decoratedPortals","decoratorKeys","Object","keys","i","length","nodeKey","reactDecorator","jsx","exports","onError","e","_onError","children","Suspense","fallback","element","getElementByKey","push","createPortal","useDecorators","mergeRegister","registerRichText","registerDragonSupport","useRichTextSetup","jsxs","Fragment","Placeholder","content","showPlaceholder","canShowPlaceholder","setCanShowPlaceholder","resetCanShowPlaceholder","currentCanShowPlaceholder","registerUpdateListener","registerEditableListener","useCanShowPlaceholder","editable","useLexicalEditable"],"mappings":"+mBA0BA,MAcMA,EAdgC,oBAAXC,aAAqD,IAApBA,OAAOC,eAAqE,IAAlCD,OAAOC,SAASC,cAc5EC,EAAkBC,EAU5D,SAASC,EAAyCC,GAEhD,OADkCA,EAAOC,iBAAiBC,KAAKC,EAAyBH,EAAOI,eAEjG,CA2FA,SAASC,GAAeC,gBACtBA,EAAeC,YAEfA,EAAc,KAAIC,cAClBA,IAEA,MAAOR,GAAUS,IACXC,EAxER,SAAuBV,EAAQQ,GAC7B,MAAOE,EAAYC,GAAiBC,GAAS,IAAMZ,EAAOa,kBAkB1D,OAfApB,GAAoB,IACXO,EAAOc,2BAA0BC,IACtCC,GAAU,KACRL,EAAcI,EAAe,GAC7B,KAEH,CAACf,IACJF,GAAU,KAIRa,EAAcX,EAAOa,gBAAgB,GACpC,CAACb,IAGGiB,GAAQ,KACb,MAAMC,EAAmB,GACnBC,EAAgBC,OAAOC,KAAKX,GAClC,IAAK,IAAIY,EAAI,EAAGA,EAAIH,EAAcI,OAAQD,IAAK,CAC7C,MAAME,EAAUL,EAAcG,GACxBG,EAA8BC,EAAGC,QAAAD,IAAClB,EAAe,CACrDoB,QAASC,GAAK7B,EAAO8B,SAASD,GAC9BE,SAAuBL,EAAGC,QAAAD,IAACM,EAAU,CACnCC,SAAU,KACVF,SAAUrB,EAAWc,OAGnBU,EAAUlC,EAAOmC,gBAAgBX,GACvB,OAAZU,GACFhB,EAAiBkB,KAAkBC,EAAaZ,EAAgBS,EAASV,GAE5E,CACD,OAAON,CAAgB,GACtB,CAACV,EAAeE,EAAYV,GACjC,CAkCqBsC,CAActC,EAAQQ,GAEzC,OA1BF,SAA0BR,GACxBP,GAAoB,IACX8C,EAAcC,EAAiBxC,GAASyC,EAAsBzC,KAIpE,CAACA,GACN,CAkBE0C,CAAiB1C,GACG2C,EAAAA,QAAAA,KAAKC,EAAAA,QAAAA,SAAU,CACjCb,SAAU,CAACzB,EAA8BoB,EAAGC,QAAAD,IAACmB,EAAa,CACxDC,QAASvC,IACPG,IAER,CAGA,SAASmC,GAAYC,QACnBA,IAEA,MAAO9C,GAAUS,IACXsC,EA/GR,SAA+B/C,GAC7B,MAAOgD,EAAoBC,GAAyBrC,GAAS,IAAMb,EAAyCC,KAa5G,OAZAP,GAAoB,KAClB,SAASyD,IACP,MAAMC,EAA4BpD,EAAyCC,GAC3EiD,EAAsBE,EACvB,CAED,OADAD,IACOX,EAAcvC,EAAOoD,wBAAuB,KACjDF,GAAyB,IACvBlD,EAAOqD,0BAAyB,KAClCH,GAAyB,IACxB,GACF,CAAClD,IACGgD,CACT,CAgG0BM,CAAsBtD,GACxCuD,EAAWC,IACjB,OAAKT,EAGkB,mBAAZD,EACFA,EAAQS,GAERT,EALA,IAOX"}