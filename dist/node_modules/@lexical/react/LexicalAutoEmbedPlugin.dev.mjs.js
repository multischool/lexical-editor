import{$isLinkNode as e,LinkNode as t,AutoLinkNode as n}from"@lexical/link";import{useLexicalComposerContext as o}from"./LexicalComposerContext.mjs.js";import{MenuOption as r,LexicalNodeMenuPlugin as i}from"./LexicalNodeMenuPlugin.mjs.js";import{mergeRegister as s}from"@lexical/utils";import{createCommand as l,$getNodeByKey as a,COMMAND_PRIORITY_EDITOR as u,$getSelection as m,COMMAND_PRIORITY_LOW as c}from"lexical";import{useState as d,useCallback as p,useEffect as f,useMemo as x}from"react";import"../../react/jsx-runtime.js";import{j as g}from"../../../_virtual/jsx-runtime.js";const j=/((https?:\/\/(www\.)?)|(www\.))[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/,w=l("INSERT_EMBED_COMMAND");class C extends r{constructor(e,t){super(e),this.title=e,this.onSelect=t.onSelect.bind(this)}}function y({embedConfigs:r,onOpenEmbedModalForConfig:l,getMenuOptions:j,menuRenderFn:C,menuCommandPriority:y=c}){const[E]=o(),[M,S]=d(null),[_,h]=d(null),v=p((()=>{S(null),h(null)}),[]),z=p((async t=>{const n=E.getEditorState().read((function(){const n=a(t);if(e(n))return n.getURL()}));if(void 0!==n)for(const e of r){null!=await Promise.resolve(e.parseUrl(n))&&(h(e),S(t))}}),[E,r]);f((()=>s(...[t,n].map((e=>E.registerMutationListener(e,((...e)=>((e,{updateTags:t,dirtyLeaves:n})=>{for(const[o,r]of e)"created"===r&&t.has("paste")&&n.size<=3?z(o):o===M&&v()})(...e)),{skipInitialization:!0}))))),[z,E,r,M,v]),f((()=>E.registerCommand(w,(e=>{const t=r.find((({type:t})=>t===e));return!!t&&(l(t),!0)}),u)),[E,r,l]);const A=p((async function(){if(null!=_&&null!=M){const t=E.getEditorState().read((()=>{const t=a(M);return e(t)?t:null}));if(e(t)){const e=await Promise.resolve(_.parseUrl(t.__url));null!=e&&E.update((()=>{m()||t.selectEnd(),_.insertNode(E,e),t.isAttached()&&t.remove()}))}}}),[_,E,M]),L=x((()=>null!=_&&null!=M?j(_,A,v):[]),[_,A,j,M,v]),P=p(((e,t,n)=>{E.update((()=>{e.onSelect(t),n()}))}),[E]);return null!=M?g.exports.jsx(i,{nodeKey:M,onClose:v,onSelectOption:P,options:L,menuRenderFn:C,commandPriority:y}):null}export{C as AutoEmbedOption,w as INSERT_EMBED_COMMAND,y as LexicalAutoEmbedPlugin,j as URL_MATCHER};
//# sourceMappingURL=LexicalAutoEmbedPlugin.dev.mjs.js.map
