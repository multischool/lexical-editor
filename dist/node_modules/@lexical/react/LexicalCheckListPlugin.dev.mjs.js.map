{"version":3,"file":"LexicalCheckListPlugin.dev.mjs.js","sources":["../../../../node_modules/@lexical/react/LexicalCheckListPlugin.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { INSERT_CHECK_LIST_COMMAND, insertList, $isListItemNode, $isListNode } from '@lexical/list';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { mergeRegister, $findMatchingParent, isHTMLElement, calculateZoomLevel } from '@lexical/utils';\nimport { COMMAND_PRIORITY_LOW, KEY_ARROW_DOWN_COMMAND, KEY_ARROW_UP_COMMAND, KEY_ESCAPE_COMMAND, KEY_SPACE_COMMAND, $getNearestNodeFromDOMNode, KEY_ARROW_LEFT_COMMAND, $getSelection, $isRangeSelection, $isElementNode, getNearestEditorFromDOMNode } from 'lexical';\nimport { useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction CheckListPlugin() {\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    return mergeRegister(editor.registerCommand(INSERT_CHECK_LIST_COMMAND, () => {\n      insertList(editor, 'check');\n      return true;\n    }, COMMAND_PRIORITY_LOW), editor.registerCommand(KEY_ARROW_DOWN_COMMAND, event => {\n      return handleArrownUpOrDown(event, editor, false);\n    }, COMMAND_PRIORITY_LOW), editor.registerCommand(KEY_ARROW_UP_COMMAND, event => {\n      return handleArrownUpOrDown(event, editor, true);\n    }, COMMAND_PRIORITY_LOW), editor.registerCommand(KEY_ESCAPE_COMMAND, event => {\n      const activeItem = getActiveCheckListItem();\n      if (activeItem != null) {\n        const rootElement = editor.getRootElement();\n        if (rootElement != null) {\n          rootElement.focus();\n        }\n        return true;\n      }\n      return false;\n    }, COMMAND_PRIORITY_LOW), editor.registerCommand(KEY_SPACE_COMMAND, event => {\n      const activeItem = getActiveCheckListItem();\n      if (activeItem != null && editor.isEditable()) {\n        editor.update(() => {\n          const listItemNode = $getNearestNodeFromDOMNode(activeItem);\n          if ($isListItemNode(listItemNode)) {\n            event.preventDefault();\n            listItemNode.toggleChecked();\n          }\n        });\n        return true;\n      }\n      return false;\n    }, COMMAND_PRIORITY_LOW), editor.registerCommand(KEY_ARROW_LEFT_COMMAND, event => {\n      return editor.getEditorState().read(() => {\n        const selection = $getSelection();\n        if ($isRangeSelection(selection) && selection.isCollapsed()) {\n          const {\n            anchor\n          } = selection;\n          const isElement = anchor.type === 'element';\n          if (isElement || anchor.offset === 0) {\n            const anchorNode = anchor.getNode();\n            const elementNode = $findMatchingParent(anchorNode, node => $isElementNode(node) && !node.isInline());\n            if ($isListItemNode(elementNode)) {\n              const parent = elementNode.getParent();\n              if ($isListNode(parent) && parent.getListType() === 'check' && (isElement || elementNode.getFirstDescendant() === anchorNode)) {\n                const domNode = editor.getElementByKey(elementNode.__key);\n                if (domNode != null && document.activeElement !== domNode) {\n                  domNode.focus();\n                  event.preventDefault();\n                  return true;\n                }\n              }\n            }\n          }\n        }\n        return false;\n      });\n    }, COMMAND_PRIORITY_LOW), editor.registerRootListener((rootElement, prevElement) => {\n      if (rootElement !== null) {\n        rootElement.addEventListener('click', handleClick);\n        rootElement.addEventListener('pointerdown', handlePointerDown);\n      }\n      if (prevElement !== null) {\n        prevElement.removeEventListener('click', handleClick);\n        prevElement.removeEventListener('pointerdown', handlePointerDown);\n      }\n    }));\n  });\n  return null;\n}\nfunction handleCheckItemEvent(event, callback) {\n  const target = event.target;\n  if (!isHTMLElement(target)) {\n    return;\n  }\n\n  // Ignore clicks on LI that have nested lists\n  const firstChild = target.firstChild;\n  if (isHTMLElement(firstChild) && (firstChild.tagName === 'UL' || firstChild.tagName === 'OL')) {\n    return;\n  }\n  const parentNode = target.parentNode;\n\n  // @ts-ignore internal field\n  if (!parentNode || parentNode.__lexicalListType !== 'check') {\n    return;\n  }\n  const rect = target.getBoundingClientRect();\n  const pageX = event.pageX / calculateZoomLevel(target);\n  if (target.dir === 'rtl' ? pageX < rect.right && pageX > rect.right - 20 : pageX > rect.left && pageX < rect.left + 20) {\n    callback();\n  }\n}\nfunction handleClick(event) {\n  handleCheckItemEvent(event, () => {\n    if (isHTMLElement(event.target)) {\n      const domNode = event.target;\n      const editor = getNearestEditorFromDOMNode(domNode);\n      if (editor != null && editor.isEditable()) {\n        editor.update(() => {\n          const node = $getNearestNodeFromDOMNode(domNode);\n          if ($isListItemNode(node)) {\n            domNode.focus();\n            node.toggleChecked();\n          }\n        });\n      }\n    }\n  });\n}\nfunction handlePointerDown(event) {\n  handleCheckItemEvent(event, () => {\n    // Prevents caret moving when clicking on check mark\n    event.preventDefault();\n  });\n}\nfunction getActiveCheckListItem() {\n  const activeElement = document.activeElement;\n  return isHTMLElement(activeElement) && activeElement.tagName === 'LI' && activeElement.parentNode != null &&\n  // @ts-ignore internal field\n  activeElement.parentNode.__lexicalListType === 'check' ? activeElement : null;\n}\nfunction findCheckListItemSibling(node, backward) {\n  let sibling = backward ? node.getPreviousSibling() : node.getNextSibling();\n  let parent = node;\n\n  // Going up in a tree to get non-null sibling\n  while (sibling == null && $isListItemNode(parent)) {\n    // Get li -> parent ul/ol -> parent li\n    parent = parent.getParentOrThrow().getParent();\n    if (parent != null) {\n      sibling = backward ? parent.getPreviousSibling() : parent.getNextSibling();\n    }\n  }\n\n  // Going down in a tree to get first non-nested list item\n  while ($isListItemNode(sibling)) {\n    const firstChild = backward ? sibling.getLastChild() : sibling.getFirstChild();\n    if (!$isListNode(firstChild)) {\n      return sibling;\n    }\n    sibling = backward ? firstChild.getLastChild() : firstChild.getFirstChild();\n  }\n  return null;\n}\nfunction handleArrownUpOrDown(event, editor, backward) {\n  const activeItem = getActiveCheckListItem();\n  if (activeItem != null) {\n    editor.update(() => {\n      const listItem = $getNearestNodeFromDOMNode(activeItem);\n      if (!$isListItemNode(listItem)) {\n        return;\n      }\n      const nextListItem = findCheckListItemSibling(listItem, backward);\n      if (nextListItem != null) {\n        nextListItem.selectStart();\n        const dom = editor.getElementByKey(nextListItem.__key);\n        if (dom != null) {\n          event.preventDefault();\n          setTimeout(() => {\n            dom.focus();\n          }, 0);\n        }\n      }\n    });\n  }\n  return false;\n}\n\nexport { CheckListPlugin };\n"],"names":["CheckListPlugin","editor","useLexicalComposerContext","useEffect","mergeRegister","registerCommand","INSERT_CHECK_LIST_COMMAND","insertList","COMMAND_PRIORITY_LOW","KEY_ARROW_DOWN_COMMAND","event","handleArrownUpOrDown","KEY_ARROW_UP_COMMAND","KEY_ESCAPE_COMMAND","getActiveCheckListItem","rootElement","getRootElement","focus","KEY_SPACE_COMMAND","activeItem","isEditable","update","listItemNode","$getNearestNodeFromDOMNode","$isListItemNode","preventDefault","toggleChecked","KEY_ARROW_LEFT_COMMAND","getEditorState","read","selection","$getSelection","$isRangeSelection","isCollapsed","anchor","isElement","type","offset","anchorNode","getNode","elementNode","$findMatchingParent","node","$isElementNode","isInline","parent","getParent","$isListNode","getListType","getFirstDescendant","domNode","getElementByKey","__key","document","activeElement","registerRootListener","prevElement","addEventListener","handleClick","handlePointerDown","removeEventListener","handleCheckItemEvent","callback","target","isHTMLElement","firstChild","tagName","parentNode","__lexicalListType","rect","getBoundingClientRect","pageX","calculateZoomLevel","dir","right","left","getNearestEditorFromDOMNode","backward","listItem","nextListItem","sibling","getPreviousSibling","getNextSibling","getParentOrThrow","getLastChild","getFirstChild","findCheckListItemSibling","selectStart","dom","setTimeout"],"mappings":"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"}