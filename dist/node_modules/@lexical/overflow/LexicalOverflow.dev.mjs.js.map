{"version":3,"file":"LexicalOverflow.dev.mjs.js","sources":["../../../../node_modules/@lexical/overflow/LexicalOverflow.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { ElementNode, $applyNodeReplacement } from 'lexical';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls.\n\nfunction formatDevErrorMessage(message) {\n  throw new Error(message);\n}\n\n/** @noInheritDoc */\nclass OverflowNode extends ElementNode {\n  static getType() {\n    return 'overflow';\n  }\n  static clone(node) {\n    return new OverflowNode(node.__key);\n  }\n  static importJSON(serializedNode) {\n    return $createOverflowNode().updateFromJSON(serializedNode);\n  }\n  static importDOM() {\n    return null;\n  }\n  createDOM(config) {\n    const div = document.createElement('span');\n    const className = config.theme.characterLimit;\n    if (typeof className === 'string') {\n      div.className = className;\n    }\n    return div;\n  }\n  updateDOM(prevNode, dom) {\n    return false;\n  }\n  insertNewAfter(selection, restoreSelection = true) {\n    const parent = this.getParentOrThrow();\n    return parent.insertNewAfter(selection, restoreSelection);\n  }\n  excludeFromCopy() {\n    return true;\n  }\n  static transform() {\n    return node => {\n      if (!$isOverflowNode(node)) {\n        formatDevErrorMessage(`node is not a OverflowNode`);\n      }\n      if (node.isEmpty()) {\n        node.remove();\n      }\n    };\n  }\n}\nfunction $createOverflowNode() {\n  return $applyNodeReplacement(new OverflowNode());\n}\nfunction $isOverflowNode(node) {\n  return node instanceof OverflowNode;\n}\n\nexport { $createOverflowNode, $isOverflowNode, OverflowNode };\n"],"names":["OverflowNode","ElementNode","getType","clone","node","__key","importJSON","serializedNode","$createOverflowNode","updateFromJSON","importDOM","createDOM","config","div","document","createElement","className","theme","characterLimit","updateDOM","prevNode","dom","insertNewAfter","selection","restoreSelection","this","getParentOrThrow","excludeFromCopy","transform","$isOverflowNode","message","Error","formatDevErrorMessage","isEmpty","remove","$applyNodeReplacement"],"mappings":"iEAyBA,MAAMA,UAAqBC,EACzB,cAAOC,GACL,MAAO,UACR,CACD,YAAOC,CAAMC,GACX,OAAO,IAAIJ,EAAaI,EAAKC,MAC9B,CACD,iBAAOC,CAAWC,GAChB,OAAOC,IAAsBC,eAAeF,EAC7C,CACD,gBAAOG,GACL,OAAO,IACR,CACD,SAAAC,CAAUC,GACR,MAAMC,EAAMC,SAASC,cAAc,QAC7BC,EAAYJ,EAAOK,MAAMC,eAI/B,MAHyB,iBAAdF,IACTH,EAAIG,UAAYA,GAEXH,CACR,CACD,SAAAM,CAAUC,EAAUC,GAClB,OAAO,CACR,CACD,cAAAC,CAAeC,EAAWC,GAAmB,GAE3C,OADeC,KAAKC,mBACNJ,eAAeC,EAAWC,EACzC,CACD,eAAAG,GACE,OAAO,CACR,CACD,gBAAOC,GACL,OAAOxB,IACAyB,EAAgBzB,IAtC3B,SAA+B0B,GAC7B,MAAM,IAAIC,MAAMD,EAClB,CAqCQE,CAAsB,8BAEpB5B,EAAK6B,WACP7B,EAAK8B,QACN,CAEJ,EAEH,SAAS1B,IACP,OAAO2B,EAAsB,IAAInC,EACnC,CACA,SAAS6B,EAAgBzB,GACvB,OAAOA,aAAgBJ,CACzB"}