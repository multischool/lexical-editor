{"version":3,"file":"LexicalDevtoolsCore.dev.mjs.js","sources":["../../../../node_modules/@lexical/devtools-core/LexicalDevtoolsCore.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { $generateHtmlFromNodes } from '@lexical/html';\nimport { $isLinkNode } from '@lexical/link';\nimport { $isMarkNode } from '@lexical/mark';\nimport { $isTableSelection } from '@lexical/table';\nimport { $getSelection, $getRoot, $isRangeSelection, $isNodeSelection, $isElementNode, $isTextNode, $isParagraphNode, COMMAND_PRIORITY_CRITICAL } from 'lexical';\nimport { forwardRef, useState, useRef, useCallback, useEffect, useMemo } from 'react';\nimport { jsxs, jsx } from 'react/jsx-runtime';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst NON_SINGLE_WIDTH_CHARS_REPLACEMENT = Object.freeze({\n  '\\t': '\\\\t',\n  '\\n': '\\\\n'\n});\nconst NON_SINGLE_WIDTH_CHARS_REGEX = new RegExp(Object.keys(NON_SINGLE_WIDTH_CHARS_REPLACEMENT).join('|'), 'g');\nconst SYMBOLS = Object.freeze({\n  ancestorHasNextSibling: '|',\n  ancestorIsLastChild: ' ',\n  hasNextSibling: '├',\n  isLastChild: '└',\n  selectedChar: '^',\n  selectedLine: '>'\n});\nconst FORMAT_PREDICATES = [node => node.hasFormat('bold') && 'Bold', node => node.hasFormat('code') && 'Code', node => node.hasFormat('italic') && 'Italic', node => node.hasFormat('strikethrough') && 'Strikethrough', node => node.hasFormat('subscript') && 'Subscript', node => node.hasFormat('superscript') && 'Superscript', node => node.hasFormat('underline') && 'Underline', node => node.hasFormat('highlight') && 'Highlight'];\nconst FORMAT_PREDICATES_PARAGRAPH = [node => node.hasTextFormat('bold') && 'Bold', node => node.hasTextFormat('code') && 'Code', node => node.hasTextFormat('italic') && 'Italic', node => node.hasTextFormat('strikethrough') && 'Strikethrough', node => node.hasTextFormat('subscript') && 'Subscript', node => node.hasTextFormat('superscript') && 'Superscript', node => node.hasTextFormat('underline') && 'Underline', node => node.hasTextFormat('highlight') && 'Highlight'];\nconst DETAIL_PREDICATES = [node => node.isDirectionless() && 'Directionless', node => node.isUnmergeable() && 'Unmergeable'];\nconst MODE_PREDICATES = [node => node.isToken() && 'Token', node => node.isSegmented() && 'Segmented'];\nfunction generateContent(editor, commandsLog, exportDOM, customPrintNode, obfuscateText = false) {\n  const editorState = editor.getEditorState();\n  const editorConfig = editor._config;\n  const compositionKey = editor._compositionKey;\n  const editable = editor._editable;\n  if (exportDOM) {\n    let htmlString = '';\n    editorState.read(() => {\n      htmlString = printPrettyHTML($generateHtmlFromNodes(editor));\n    });\n    return htmlString;\n  }\n  let res = ' root\\n';\n  const selectionString = editorState.read(() => {\n    const selection = $getSelection();\n    visitTree($getRoot(), (node, indent) => {\n      const nodeKey = node.getKey();\n      const nodeKeyDisplay = `(${nodeKey})`;\n      const typeDisplay = node.getType() || '';\n      const isSelected = node.isSelected();\n      res += `${isSelected ? SYMBOLS.selectedLine : ' '} ${indent.join(' ')} ${nodeKeyDisplay} ${typeDisplay} ${printNode(node, customPrintNode, obfuscateText)}\\n`;\n      res += $printSelectedCharsLine({\n        indent,\n        isSelected,\n        node,\n        nodeKeyDisplay,\n        selection,\n        typeDisplay\n      });\n    });\n    return selection === null ? ': null' : $isRangeSelection(selection) ? printRangeSelection(selection) : $isTableSelection(selection) ? printTableSelection(selection) : printNodeSelection(selection);\n  });\n  res += '\\n selection' + selectionString;\n  res += '\\n\\n commands:';\n  if (commandsLog.length) {\n    for (const {\n      index,\n      type,\n      payload\n    } of commandsLog) {\n      res += `\\n  └ ${index}. { type: ${type}, payload: ${payload instanceof Event ? payload.constructor.name : payload} }`;\n    }\n  } else {\n    res += '\\n  └ None dispatched.';\n  }\n  const {\n    version\n  } = editor.constructor;\n  res += `\\n\\n editor${version ? ` (v${version})` : ''}:`;\n  res += `\\n  └ namespace ${editorConfig.namespace}`;\n  if (compositionKey !== null) {\n    res += `\\n  └ compositionKey ${compositionKey}`;\n  }\n  res += `\\n  └ editable ${String(editable)}`;\n  return res;\n}\nfunction printRangeSelection(selection) {\n  let res = '';\n  const formatText = printFormatProperties(selection);\n  res += `: range ${formatText !== '' ? `{ ${formatText} }` : ''} ${selection.style !== '' ? `{ style: ${selection.style} } ` : ''}`;\n  const anchor = selection.anchor;\n  const focus = selection.focus;\n  const anchorOffset = anchor.offset;\n  const focusOffset = focus.offset;\n  res += `\\n  ├ anchor { key: ${anchor.key}, offset: ${anchorOffset === null ? 'null' : anchorOffset}, type: ${anchor.type} }`;\n  res += `\\n  └ focus { key: ${focus.key}, offset: ${focusOffset === null ? 'null' : focusOffset}, type: ${focus.type} }`;\n  return res;\n}\nfunction printNodeSelection(selection) {\n  if (!$isNodeSelection(selection)) {\n    return '';\n  }\n  return `: node\\n  └ [${Array.from(selection._nodes).join(', ')}]`;\n}\nfunction printTableSelection(selection) {\n  return `: table\\n  └ { table: ${selection.tableKey}, anchorCell: ${selection.anchor.key}, focusCell: ${selection.focus.key} }`;\n}\nfunction visitTree(currentNode, visitor, indent = []) {\n  const childNodes = currentNode.getChildren();\n  const childNodesLength = childNodes.length;\n  childNodes.forEach((childNode, i) => {\n    visitor(childNode, indent.concat(i === childNodesLength - 1 ? SYMBOLS.isLastChild : SYMBOLS.hasNextSibling));\n    if ($isElementNode(childNode)) {\n      visitTree(childNode, visitor, indent.concat(i === childNodesLength - 1 ? SYMBOLS.ancestorIsLastChild : SYMBOLS.ancestorHasNextSibling));\n    }\n  });\n}\nfunction normalize(text, obfuscateText = false) {\n  const textToPrint = Object.entries(NON_SINGLE_WIDTH_CHARS_REPLACEMENT).reduce((acc, [key, value]) => acc.replace(new RegExp(key, 'g'), String(value)), text);\n  if (obfuscateText) {\n    return textToPrint.replace(/[^\\s]/g, '*');\n  }\n  return textToPrint;\n}\nfunction printNode(node, customPrintNode, obfuscateText = false) {\n  const customPrint = customPrintNode ? customPrintNode(node, obfuscateText) : undefined;\n  if (customPrint !== undefined && customPrint.length > 0) {\n    return customPrint;\n  }\n  if ($isTextNode(node)) {\n    const text = node.getTextContent();\n    const title = text.length === 0 ? '(empty)' : `\"${normalize(text, obfuscateText)}\"`;\n    const properties = printAllTextNodeProperties(node);\n    return [title, properties.length !== 0 ? `{ ${properties} }` : null].filter(Boolean).join(' ').trim();\n  } else if ($isLinkNode(node)) {\n    const link = node.getURL();\n    const title = link.length === 0 ? '(empty)' : `\"${normalize(link, obfuscateText)}\"`;\n    const properties = printAllLinkNodeProperties(node);\n    return [title, properties.length !== 0 ? `{ ${properties} }` : null].filter(Boolean).join(' ').trim();\n  } else if ($isMarkNode(node)) {\n    return `ids: [ ${node.getIDs().join(', ')} ]`;\n  } else if ($isParagraphNode(node)) {\n    const formatText = printTextFormatProperties(node);\n    let paragraphData = formatText !== '' ? `{ ${formatText} }` : '';\n    paragraphData += node.__style ? `(${node.__style})` : '';\n    return paragraphData;\n  } else {\n    return '';\n  }\n}\nfunction printTextFormatProperties(nodeOrSelection) {\n  let str = FORMAT_PREDICATES_PARAGRAPH.map(predicate => predicate(nodeOrSelection)).filter(Boolean).join(', ').toLocaleLowerCase();\n  if (str !== '') {\n    str = 'format: ' + str;\n  }\n  return str;\n}\nfunction printAllTextNodeProperties(node) {\n  return [printFormatProperties(node), printDetailProperties(node), printModeProperties(node)].filter(Boolean).join(', ');\n}\nfunction printAllLinkNodeProperties(node) {\n  return [printTargetProperties(node), printRelProperties(node), printTitleProperties(node)].filter(Boolean).join(', ');\n}\nfunction printDetailProperties(nodeOrSelection) {\n  let str = DETAIL_PREDICATES.map(predicate => predicate(nodeOrSelection)).filter(Boolean).join(', ').toLocaleLowerCase();\n  if (str !== '') {\n    str = 'detail: ' + str;\n  }\n  return str;\n}\nfunction printModeProperties(nodeOrSelection) {\n  let str = MODE_PREDICATES.map(predicate => predicate(nodeOrSelection)).filter(Boolean).join(', ').toLocaleLowerCase();\n  if (str !== '') {\n    str = 'mode: ' + str;\n  }\n  return str;\n}\nfunction printFormatProperties(nodeOrSelection) {\n  let str = FORMAT_PREDICATES.map(predicate => predicate(nodeOrSelection)).filter(Boolean).join(', ').toLocaleLowerCase();\n  if (str !== '') {\n    str = 'format: ' + str;\n  }\n  return str;\n}\nfunction printTargetProperties(node) {\n  let str = node.getTarget();\n  // TODO Fix nullish on LinkNode\n  if (str != null) {\n    str = 'target: ' + str;\n  }\n  return str;\n}\nfunction printRelProperties(node) {\n  let str = node.getRel();\n  // TODO Fix nullish on LinkNode\n  if (str != null) {\n    str = 'rel: ' + str;\n  }\n  return str;\n}\nfunction printTitleProperties(node) {\n  let str = node.getTitle();\n  // TODO Fix nullish on LinkNode\n  if (str != null) {\n    str = 'title: ' + str;\n  }\n  return str;\n}\nfunction $printSelectedCharsLine({\n  indent,\n  isSelected,\n  node,\n  nodeKeyDisplay,\n  selection,\n  typeDisplay\n}) {\n  // No selection or node is not selected.\n  if (!$isTextNode(node) || !$isRangeSelection(selection) || !isSelected || $isElementNode(node)) {\n    return '';\n  }\n\n  // No selected characters.\n  const anchor = selection.anchor;\n  const focus = selection.focus;\n  if (node.getTextContent() === '' || anchor.getNode() === selection.focus.getNode() && anchor.offset === focus.offset) {\n    return '';\n  }\n  const [start, end] = $getSelectionStartEnd(node, selection);\n  if (start === end) {\n    return '';\n  }\n  const selectionLastIndent = indent[indent.length - 1] === SYMBOLS.hasNextSibling ? SYMBOLS.ancestorHasNextSibling : SYMBOLS.ancestorIsLastChild;\n  const indentionChars = [...indent.slice(0, indent.length - 1), selectionLastIndent];\n  const unselectedChars = Array(start + 1).fill(' ');\n  const selectedChars = Array(end - start).fill(SYMBOLS.selectedChar);\n  const paddingLength = typeDisplay.length + 2; // 1 for the space after + 1 for the double quote.\n\n  const nodePrintSpaces = Array(nodeKeyDisplay.length + paddingLength).fill(' ');\n  return [SYMBOLS.selectedLine, indentionChars.join(' '), [...nodePrintSpaces, ...unselectedChars, ...selectedChars].join('')].join(' ') + '\\n';\n}\nfunction printPrettyHTML(str) {\n  const div = document.createElement('div');\n  div.innerHTML = str.trim();\n  return prettifyHTML(div, 0).innerHTML;\n}\nfunction prettifyHTML(node, level) {\n  const indentBefore = new Array(level++ + 1).join('  ');\n  const indentAfter = new Array(level - 1).join('  ');\n  let textNode;\n  for (let i = 0; i < node.children.length; i++) {\n    textNode = document.createTextNode('\\n' + indentBefore);\n    node.insertBefore(textNode, node.children[i]);\n    prettifyHTML(node.children[i], level);\n    if (node.lastElementChild === node.children[i]) {\n      textNode = document.createTextNode('\\n' + indentAfter);\n      node.appendChild(textNode);\n    }\n  }\n  return node;\n}\nfunction $getSelectionStartEnd(node, selection) {\n  const anchorAndFocus = selection.getStartEndPoints();\n  if ($isNodeSelection(selection) || anchorAndFocus === null) {\n    return [-1, -1];\n  }\n  const [anchor, focus] = anchorAndFocus;\n  const textContent = node.getTextContent();\n  const textLength = textContent.length;\n  let start = -1;\n  let end = -1;\n\n  // Only one node is being selected.\n  if (anchor.type === 'text' && focus.type === 'text') {\n    const anchorNode = anchor.getNode();\n    const focusNode = focus.getNode();\n    if (anchorNode === focusNode && node === anchorNode && anchor.offset !== focus.offset) {\n      [start, end] = anchor.offset < focus.offset ? [anchor.offset, focus.offset] : [focus.offset, anchor.offset];\n    } else if (node === anchorNode) {\n      [start, end] = anchorNode.isBefore(focusNode) ? [anchor.offset, textLength] : [0, anchor.offset];\n    } else if (node === focusNode) {\n      [start, end] = focusNode.isBefore(anchorNode) ? [focus.offset, textLength] : [0, focus.offset];\n    } else {\n      // Node is within selection but not the anchor nor focus.\n      [start, end] = [0, textLength];\n    }\n  }\n\n  // Account for non-single width characters.\n  const numNonSingleWidthCharBeforeSelection = (textContent.slice(0, start).match(NON_SINGLE_WIDTH_CHARS_REGEX) || []).length;\n  const numNonSingleWidthCharInSelection = (textContent.slice(start, end).match(NON_SINGLE_WIDTH_CHARS_REGEX) || []).length;\n  return [start + numNonSingleWidthCharBeforeSelection, end + numNonSingleWidthCharBeforeSelection + numNonSingleWidthCharInSelection];\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst LARGE_EDITOR_STATE_SIZE = 1000;\nconst TreeView = /*#__PURE__*/forwardRef(function TreeViewWrapped({\n  treeTypeButtonClassName,\n  timeTravelButtonClassName,\n  timeTravelPanelSliderClassName,\n  timeTravelPanelButtonClassName,\n  viewClassName,\n  timeTravelPanelClassName,\n  editorState,\n  setEditorState,\n  setEditorReadOnly,\n  generateContent\n}, ref) {\n  const [timeStampedEditorStates, setTimeStampedEditorStates] = useState([]);\n  const [content, setContent] = useState('');\n  const [timeTravelEnabled, setTimeTravelEnabled] = useState(false);\n  const [showExportDOM, setShowExportDOM] = useState(false);\n  const playingIndexRef = useRef(0);\n  const inputRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLimited, setIsLimited] = useState(false);\n  const [showLimited, setShowLimited] = useState(false);\n  const lastEditorStateRef = useRef();\n  const lastGenerationID = useRef(0);\n  const generateTree = useCallback(exportDOM => {\n    const myID = ++lastGenerationID.current;\n    generateContent(exportDOM).then(treeText => {\n      if (myID === lastGenerationID.current) {\n        setContent(treeText);\n      }\n    }).catch(err => {\n      if (myID === lastGenerationID.current) {\n        setContent(`Error rendering tree: ${err.message}\\n\\nStack:\\n${err.stack}`);\n      }\n    });\n  }, [generateContent]);\n  useEffect(() => {\n    if (!showLimited && editorState._nodeMap.size > LARGE_EDITOR_STATE_SIZE) {\n      setIsLimited(true);\n      if (!showLimited) {\n        return;\n      }\n    }\n\n    // Prevent re-rendering if the editor state hasn't changed\n    if (lastEditorStateRef.current !== editorState) {\n      lastEditorStateRef.current = editorState;\n      generateTree(showExportDOM);\n      if (!timeTravelEnabled) {\n        setTimeStampedEditorStates(currentEditorStates => [...currentEditorStates, [Date.now(), editorState]]);\n      }\n    }\n  }, [editorState, generateTree, showExportDOM, showLimited, timeTravelEnabled]);\n  const totalEditorStates = timeStampedEditorStates.length;\n  useEffect(() => {\n    if (isPlaying) {\n      let timeoutId;\n      const play = () => {\n        const currentIndex = playingIndexRef.current;\n        if (currentIndex === totalEditorStates - 1) {\n          setIsPlaying(false);\n          return;\n        }\n        const currentTime = timeStampedEditorStates[currentIndex][0];\n        const nextTime = timeStampedEditorStates[currentIndex + 1][0];\n        const timeDiff = nextTime - currentTime;\n        timeoutId = setTimeout(() => {\n          playingIndexRef.current++;\n          const index = playingIndexRef.current;\n          const input = inputRef.current;\n          if (input !== null) {\n            input.value = String(index);\n          }\n          setEditorState(timeStampedEditorStates[index][1]);\n          play();\n        }, timeDiff);\n      };\n      play();\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }\n  }, [timeStampedEditorStates, isPlaying, totalEditorStates, setEditorState]);\n  const handleExportModeToggleClick = () => {\n    generateTree(!showExportDOM);\n    setShowExportDOM(!showExportDOM);\n  };\n  return /*#__PURE__*/jsxs(\"div\", {\n    className: viewClassName,\n    children: [!showLimited && isLimited ? /*#__PURE__*/jsxs(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: [/*#__PURE__*/jsx(\"span\", {\n        style: {\n          marginRight: 20\n        },\n        children: \"Detected large EditorState, this can impact debugging performance.\"\n      }), /*#__PURE__*/jsx(\"button\", {\n        onClick: () => {\n          setShowLimited(true);\n        },\n        style: {\n          background: 'transparent',\n          border: '1px solid white',\n          color: 'white',\n          cursor: 'pointer',\n          padding: 5\n        },\n        children: \"Show full tree\"\n      })]\n    }) : null, !showLimited ? /*#__PURE__*/jsx(\"button\", {\n      onClick: () => handleExportModeToggleClick(),\n      className: treeTypeButtonClassName,\n      type: \"button\",\n      children: showExportDOM ? 'Tree' : 'Export DOM'\n    }) : null, !timeTravelEnabled && (showLimited || !isLimited) && totalEditorStates > 2 && /*#__PURE__*/jsx(\"button\", {\n      onClick: () => {\n        setEditorReadOnly(true);\n        playingIndexRef.current = totalEditorStates - 1;\n        setTimeTravelEnabled(true);\n      },\n      className: timeTravelButtonClassName,\n      type: \"button\",\n      children: \"Time Travel\"\n    }), (showLimited || !isLimited) && /*#__PURE__*/jsx(\"pre\", {\n      ref: ref,\n      children: content\n    }), timeTravelEnabled && (showLimited || !isLimited) && /*#__PURE__*/jsxs(\"div\", {\n      className: timeTravelPanelClassName,\n      children: [/*#__PURE__*/jsx(\"button\", {\n        className: timeTravelPanelButtonClassName,\n        onClick: () => {\n          if (playingIndexRef.current === totalEditorStates - 1) {\n            playingIndexRef.current = 1;\n          }\n          setIsPlaying(!isPlaying);\n        },\n        type: \"button\",\n        children: isPlaying ? 'Pause' : 'Play'\n      }), /*#__PURE__*/jsx(\"input\", {\n        className: timeTravelPanelSliderClassName,\n        ref: inputRef,\n        onChange: event => {\n          const editorStateIndex = Number(event.target.value);\n          const timeStampedEditorState = timeStampedEditorStates[editorStateIndex];\n          if (timeStampedEditorState) {\n            playingIndexRef.current = editorStateIndex;\n            setEditorState(timeStampedEditorState[1]);\n          }\n        },\n        type: \"range\",\n        min: \"1\",\n        max: totalEditorStates - 1\n      }), /*#__PURE__*/jsx(\"button\", {\n        className: timeTravelPanelButtonClassName,\n        onClick: () => {\n          setEditorReadOnly(false);\n          const index = timeStampedEditorStates.length - 1;\n          const timeStampedEditorState = timeStampedEditorStates[index];\n          setEditorState(timeStampedEditorState[1]);\n          const input = inputRef.current;\n          if (input !== null) {\n            input.value = String(index);\n          }\n          setTimeTravelEnabled(false);\n          setIsPlaying(false);\n        },\n        type: \"button\",\n        children: \"Exit\"\n      })]\n    })]\n  });\n});\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction registerLexicalCommandLogger(editor, setLoggedCommands) {\n  const unregisterCommandListeners = new Set();\n  let i = 0;\n  for (const [command] of editor._commands) {\n    unregisterCommandListeners.add(editor.registerCommand(command, payload => {\n      setLoggedCommands(state => {\n        i += 1;\n        const newState = [...state];\n        newState.push({\n          index: i,\n          payload,\n          type: command.type ? command.type : 'UNKNOWN'\n        });\n        if (newState.length > 10) {\n          newState.shift();\n        }\n        return newState;\n      });\n      return false;\n    }, COMMAND_PRIORITY_CRITICAL));\n  }\n  return () => unregisterCommandListeners.forEach(unregister => unregister());\n}\nfunction useLexicalCommandsLog(editor) {\n  const [loggedCommands, setLoggedCommands] = useState([]);\n  useEffect(() => {\n    return registerLexicalCommandLogger(editor, setLoggedCommands);\n  }, [editor]);\n  return useMemo(() => loggedCommands, [loggedCommands]);\n}\n\nexport { TreeView, generateContent, registerLexicalCommandLogger, useLexicalCommandsLog };\n"],"names":["NON_SINGLE_WIDTH_CHARS_REPLACEMENT","Object","freeze","NON_SINGLE_WIDTH_CHARS_REGEX","RegExp","keys","join","SYMBOLS","ancestorHasNextSibling","ancestorIsLastChild","hasNextSibling","isLastChild","selectedChar","selectedLine","FORMAT_PREDICATES","node","hasFormat","FORMAT_PREDICATES_PARAGRAPH","hasTextFormat","DETAIL_PREDICATES","isDirectionless","isUnmergeable","MODE_PREDICATES","isToken","isSegmented","generateContent","editor","commandsLog","exportDOM","customPrintNode","obfuscateText","editorState","getEditorState","editorConfig","_config","compositionKey","_compositionKey","editable","_editable","htmlString","read","str","div","document","createElement","innerHTML","trim","prettifyHTML","printPrettyHTML","$generateHtmlFromNodes","res","selectionString","selection","$getSelection","visitTree","$getRoot","indent","nodeKeyDisplay","getKey","typeDisplay","getType","isSelected","customPrint","undefined","length","$isTextNode","text","getTextContent","title","normalize","properties","printFormatProperties","printDetailProperties","printModeProperties","filter","Boolean","printAllTextNodeProperties","$isLinkNode","link","getURL","printTargetProperties","printRelProperties","printTitleProperties","printAllLinkNodeProperties","$isMarkNode","getIDs","$isParagraphNode","formatText","nodeOrSelection","map","predicate","toLocaleLowerCase","printTextFormatProperties","paragraphData","__style","printNode","$isRangeSelection","$isElementNode","anchor","focus","getNode","offset","start","end","anchorAndFocus","getStartEndPoints","$isNodeSelection","textContent","textLength","type","anchorNode","focusNode","isBefore","numNonSingleWidthCharBeforeSelection","slice","match","numNonSingleWidthCharInSelection","$getSelectionStartEnd","selectionLastIndent","indentionChars","unselectedChars","Array","fill","selectedChars","paddingLength","nodePrintSpaces","$printSelectedCharsLine","style","anchorOffset","focusOffset","key","printRangeSelection","$isTableSelection","tableKey","printTableSelection","from","_nodes","printNodeSelection","index","payload","Event","constructor","name","version","namespace","String","currentNode","visitor","childNodes","getChildren","childNodesLength","forEach","childNode","i","concat","textToPrint","entries","reduce","acc","value","replace","getTarget","getRel","getTitle","level","indentBefore","indentAfter","textNode","children","createTextNode","insertBefore","lastElementChild","appendChild","TreeView","forwardRef","treeTypeButtonClassName","timeTravelButtonClassName","timeTravelPanelSliderClassName","timeTravelPanelButtonClassName","viewClassName","timeTravelPanelClassName","setEditorState","setEditorReadOnly","ref","timeStampedEditorStates","setTimeStampedEditorStates","useState","content","setContent","timeTravelEnabled","setTimeTravelEnabled","showExportDOM","setShowExportDOM","playingIndexRef","useRef","inputRef","isPlaying","setIsPlaying","isLimited","setIsLimited","showLimited","setShowLimited","lastEditorStateRef","lastGenerationID","generateTree","useCallback","myID","current","then","treeText","catch","err","message","stack","useEffect","_nodeMap","size","currentEditorStates","Date","now","totalEditorStates","timeoutId","play","currentIndex","currentTime","nextTime","setTimeout","input","clearTimeout","jsxs","className","padding","jsx","exports","marginRight","onClick","background","border","color","cursor","onChange","event","editorStateIndex","Number","target","timeStampedEditorState","min","max","registerLexicalCommandLogger","setLoggedCommands","unregisterCommandListeners","Set","command","_commands","add","registerCommand","state","newState","push","shift","COMMAND_PRIORITY_CRITICAL","unregister","useLexicalCommandsLog","loggedCommands","useMemo"],"mappings":"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"}