{"version":3,"file":"use-sync-external-store-shim.development.js","sources":["../../../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    function useSyncExternalStore$2(subscribe, getSnapshot) {\n      didWarnOld18Alpha ||\n        void 0 === React.startTransition ||\n        ((didWarnOld18Alpha = !0),\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.\"\n        ));\n      var value = getSnapshot();\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedValue = getSnapshot();\n        objectIs(value, cachedValue) ||\n          (console.error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          ),\n          (didWarnUncachedGetSnapshot = !0));\n      }\n      cachedValue = useState({\n        inst: { value: value, getSnapshot: getSnapshot }\n      });\n      var inst = cachedValue[0].inst,\n        forceUpdate = cachedValue[1];\n      useLayoutEffect(\n        function () {\n          inst.value = value;\n          inst.getSnapshot = getSnapshot;\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n        },\n        [subscribe, value, getSnapshot]\n      );\n      useEffect(\n        function () {\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          return subscribe(function () {\n            checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          });\n        },\n        [subscribe]\n      );\n      useDebugValue(value);\n      return value;\n    }\n    function checkIfSnapshotChanged(inst) {\n      var latestGetSnapshot = inst.getSnapshot;\n      inst = inst.value;\n      try {\n        var nextValue = latestGetSnapshot();\n        return !objectIs(inst, nextValue);\n      } catch (error) {\n        return !0;\n      }\n    }\n    function useSyncExternalStore$1(subscribe, getSnapshot) {\n      return getSnapshot();\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = require(\"react\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useState = React.useState,\n      useEffect = React.useEffect,\n      useLayoutEffect = React.useLayoutEffect,\n      useDebugValue = React.useDebugValue,\n      didWarnOld18Alpha = !1,\n      didWarnUncachedGetSnapshot = !1,\n      shim =\n        \"undefined\" === typeof window ||\n        \"undefined\" === typeof window.document ||\n        \"undefined\" === typeof window.document.createElement\n          ? useSyncExternalStore$1\n          : useSyncExternalStore$2;\n    exports.useSyncExternalStore =\n      void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n"],"names":["process","env","NODE_ENV","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","value","nextValue","objectIs","error","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","React","require$$0","Object","is","x","y","useState","useEffect","useLayoutEffect","useDebugValue","didWarnOld18Alpha","didWarnUncachedGetSnapshot","shim","window","document","createElement","subscribe","startTransition","console","cachedValue","forceUpdate","useSyncExternalStoreShim_development","useSyncExternalStore","registerInternalModuleStop"],"mappings":";;;;;;;;;GAWA,eAAiBA,QAAQC,IAAIC,UAC3B,WA6CE,SAASC,EAAuBC,GAC9B,IAAIC,EAAoBD,EAAKE,YAC7BF,EAAOA,EAAKG,MACZ,IACE,IAAIC,EAAYH,IAChB,OAAQI,EAASL,EAAMI,EACxB,CAAC,MAAOE,GACP,OAAO,CACR,CACF,CAID,oBAAuBC,gCACrB,mBACSA,+BAA+BC,6BACxCD,+BAA+BC,4BAA4BC,SAC7D,IAAIC,EAAQC,EACVN,EAAW,mBAAsBO,OAAOC,GAAKD,OAAOC,GA9DtD,SAAYC,EAAGC,GACb,OAAQD,IAAMC,IAAM,IAAMD,GAAK,EAAIA,GAAM,EAAIC,IAAQD,GAAMA,GAAKC,GAAMA,CACvE,EA6DCC,EAAWN,EAAMM,SACjBC,EAAYP,EAAMO,UAClBC,EAAkBR,EAAMQ,gBACxBC,EAAgBT,EAAMS,cACtBC,GAAoB,EACpBC,GAA6B,EAC7BC,EACE,oBAAuBC,aACvB,IAAuBA,OAAOC,eAC9B,IAAuBD,OAAOC,SAASC,cAlB3C,SAAgCC,EAAWxB,GACzC,OAAOA,GACR,EArDD,SAAgCwB,EAAWxB,GACzCkB,QACE,IAAWV,EAAMiB,kBACfP,GAAoB,EACtBQ,QAAQtB,MACN,mMAEJ,IAAIH,EAAQD,IACZ,IAAKmB,EAA4B,CAC/B,IAAIQ,EAAc3B,IAClBG,EAASF,EAAO0B,KACbD,QAAQtB,MACP,wEAEDe,GAA6B,EACjC,CAID,IAAIrB,GAHJ6B,EAAcb,EAAS,CACrBhB,KAAM,CAAEG,MAAOA,EAAOD,YAAaA,MAEd,GAAGF,KACxB8B,EAAcD,EAAY,GAmB5B,OAlBAX,GACE,WACElB,EAAKG,MAAQA,EACbH,EAAKE,YAAcA,EACnBH,EAAuBC,IAAS8B,EAAY,CAAE9B,KAAMA,GACrD,GACD,CAAC0B,EAAWvB,EAAOD,IAErBe,GACE,WAEE,OADAlB,EAAuBC,IAAS8B,EAAY,CAAE9B,KAAMA,IAC7C0B,GAAU,WACf3B,EAAuBC,IAAS8B,EAAY,CAAE9B,KAAMA,GAChE,GACS,GACD,CAAC0B,IAEHP,EAAchB,GACPA,CACR,EAgC2B4B,EAAAC,0BAC1B,IAAWtB,EAAMsB,qBAAuBtB,EAAMsB,qBAAuBV,EACvE,oBAAuBf,gCACrB,mBACSA,+BAA+B0B,4BACxC1B,+BAA+B0B,2BAA2BxB,QAC7D,CAlFD"}