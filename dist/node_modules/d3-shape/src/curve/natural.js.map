{"version":3,"file":"natural.js","sources":["../../../../../node_modules/d3-shape/src/curve/natural.js"],"sourcesContent":["function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n"],"names":["Natural","context","this","_context","controlPoints","x","i","m","n","length","a","Array","b","r","curveNatural","prototype","areaStart","_line","areaEnd","NaN","lineStart","_x","_y","lineEnd","y","lineTo","moveTo","px","py","i0","i1","bezierCurveTo","closePath","point","push"],"mappings":"AAAA,SAASA,EAAQC,GACfC,KAAKC,SAAWF,CAClB,CA0CA,SAASG,EAAcC,GACrB,IAAIC,EAEAC,EADAC,EAAIH,EAAEI,OAAS,EAEfC,EAAI,IAAIC,MAAMH,GACdI,EAAI,IAAID,MAAMH,GACdK,EAAI,IAAIF,MAAMH,GAElB,IADAE,EAAE,GAAK,EAAGE,EAAE,GAAK,EAAGC,EAAE,GAAKR,EAAE,GAAK,EAAIA,EAAE,GACnCC,EAAI,EAAGA,EAAIE,EAAI,IAAKF,EAAGI,EAAEJ,GAAK,EAAGM,EAAEN,GAAK,EAAGO,EAAEP,GAAK,EAAID,EAAEC,GAAK,EAAID,EAAEC,EAAI,GAE5E,IADAI,EAAEF,EAAI,GAAK,EAAGI,EAAEJ,EAAI,GAAK,EAAGK,EAAEL,EAAI,GAAK,EAAIH,EAAEG,EAAI,GAAKH,EAAEG,GACnDF,EAAI,EAAGA,EAAIE,IAAKF,EAAGC,EAAIG,EAAEJ,GAAKM,EAAEN,EAAI,GAAIM,EAAEN,IAAMC,EAAGM,EAAEP,IAAMC,EAAIM,EAAEP,EAAI,GAE1E,IADAI,EAAEF,EAAI,GAAKK,EAAEL,EAAI,GAAKI,EAAEJ,EAAI,GACvBF,EAAIE,EAAI,EAAGF,GAAK,IAAKA,EAAGI,EAAEJ,IAAMO,EAAEP,GAAKI,EAAEJ,EAAI,IAAMM,EAAEN,GAE1D,IADAM,EAAEJ,EAAI,IAAMH,EAAEG,GAAKE,EAAEF,EAAI,IAAM,EAC1BF,EAAI,EAAGA,EAAIE,EAAI,IAAKF,EAAGM,EAAEN,GAAK,EAAID,EAAEC,EAAI,GAAKI,EAAEJ,EAAI,GACxD,MAAO,CAACI,EAAGE,EACb,CAEe,SAAQE,EAACb,GACtB,OAAO,IAAID,EAAQC,EACrB,CA5DAD,EAAQe,UAAY,CAClBC,UAAW,WACTd,KAAKe,MAAQ,CACd,EACDC,QAAS,WACPhB,KAAKe,MAAQE,GACd,EACDC,UAAW,WACTlB,KAAKmB,GAAK,GACVnB,KAAKoB,GAAK,EACX,EACDC,QAAS,WACP,IAAIlB,EAAIH,KAAKmB,GACTG,EAAItB,KAAKoB,GACTd,EAAIH,EAAEI,OAEV,GAAID,EAEF,GADAN,KAAKe,MAAQf,KAAKC,SAASsB,OAAOpB,EAAE,GAAImB,EAAE,IAAMtB,KAAKC,SAASuB,OAAOrB,EAAE,GAAImB,EAAE,IACnE,IAANhB,EACFN,KAAKC,SAASsB,OAAOpB,EAAE,GAAImB,EAAE,SAI7B,IAFA,IAAIG,EAAKvB,EAAcC,GACnBuB,EAAKxB,EAAcoB,GACdK,EAAK,EAAGC,EAAK,EAAGA,EAAKtB,IAAKqB,IAAMC,EACvC5B,KAAKC,SAAS4B,cAAcJ,EAAG,GAAGE,GAAKD,EAAG,GAAGC,GAAKF,EAAG,GAAGE,GAAKD,EAAG,GAAGC,GAAKxB,EAAEyB,GAAKN,EAAEM,KAKnF5B,KAAKe,OAAyB,IAAff,KAAKe,OAAqB,IAANT,IAAUN,KAAKC,SAAS6B,YAC/D9B,KAAKe,MAAQ,EAAIf,KAAKe,MACtBf,KAAKmB,GAAKnB,KAAKoB,GAAK,IACrB,EACDW,MAAO,SAAS5B,EAAGmB,GACjBtB,KAAKmB,GAAGa,MAAM7B,GACdH,KAAKoB,GAAGY,MAAMV,EACf"}