{"version":3,"file":"line.js","sources":["../../../../node_modules/d3-shape/src/line.js"],"sourcesContent":["import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n"],"names":["line","x","y","defined","constant","context","curve","curveLinear","output","path","withPath","data","i","d","buffer","n","array","length","defined0","lineStart","lineEnd","point","undefined","pointX","pointY","_","arguments"],"mappings":"mKAMe,SAAAA,EAASC,EAAGC,GACzB,IAAIC,EAAUC,GAAS,GACnBC,EAAU,KACVC,EAAQC,EACRC,EAAS,KACTC,EAAOC,EAASV,GAKpB,SAASA,EAAKW,GACZ,IAAIC,EAEAC,EAEAC,EAHAC,GAAKJ,EAAOK,EAAML,IAAOM,OAEzBC,GAAW,EAKf,IAFe,MAAXb,IAAiBG,EAASF,EAAMQ,EAASL,MAExCG,EAAI,EAAGA,GAAKG,IAAKH,IACdA,EAAIG,GAAKZ,EAAQU,EAAIF,EAAKC,GAAIA,EAAGD,MAAWO,KAC5CA,GAAYA,GAAUV,EAAOW,YAC5BX,EAAOY,WAEVF,GAAUV,EAAOa,OAAOpB,EAAEY,EAAGD,EAAGD,IAAQT,EAAEW,EAAGD,EAAGD,IAGtD,GAAIG,EAAQ,OAAON,EAAS,KAAMM,EAAS,IAAM,IAClD,CAsBD,OA3CAb,EAAiB,mBAANA,EAAmBA,OAAWqB,IAANrB,EAAmBsB,EAASnB,EAASH,GACxEC,EAAiB,mBAANA,EAAmBA,OAAWoB,IAANpB,EAAmBsB,EAASpB,EAASF,GAsBxEF,EAAKC,EAAI,SAASwB,GAChB,OAAOC,UAAUT,QAAUhB,EAAiB,mBAANwB,EAAmBA,EAAIrB,GAAUqB,GAAIzB,GAAQC,CACvF,EAEED,EAAKE,EAAI,SAASuB,GAChB,OAAOC,UAAUT,QAAUf,EAAiB,mBAANuB,EAAmBA,EAAIrB,GAAUqB,GAAIzB,GAAQE,CACvF,EAEEF,EAAKG,QAAU,SAASsB,GACtB,OAAOC,UAAUT,QAAUd,EAAuB,mBAANsB,EAAmBA,EAAIrB,IAAWqB,GAAIzB,GAAQG,CAC9F,EAEEH,EAAKM,MAAQ,SAASmB,GACpB,OAAOC,UAAUT,QAAUX,EAAQmB,EAAc,MAAXpB,IAAoBG,EAASF,EAAMD,IAAWL,GAAQM,CAChG,EAEEN,EAAKK,QAAU,SAASoB,GACtB,OAAOC,UAAUT,QAAe,MAALQ,EAAYpB,EAAUG,EAAS,KAAOA,EAASF,EAAMD,EAAUoB,GAAIzB,GAAQK,CAC1G,EAESL,CACT"}