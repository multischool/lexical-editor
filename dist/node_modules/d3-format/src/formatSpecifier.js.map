{"version":3,"file":"formatSpecifier.js","sources":["../../../../node_modules/d3-format/src/formatSpecifier.js"],"sourcesContent":["// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n"],"names":["re","formatSpecifier","specifier","match","exec","Error","FormatSpecifier","fill","align","sign","symbol","zero","width","comma","precision","slice","trim","type","this","undefined","prototype","toString","Math","max"],"mappings":"AACA,IAAIA,EAAK,2EAEM,SAASC,EAAgBC,GACtC,KAAMC,EAAQH,EAAGI,KAAKF,IAAa,MAAM,IAAIG,MAAM,mBAAqBH,GACxE,IAAIC,EACJ,OAAO,IAAIG,EAAgB,CACzBC,KAAMJ,EAAM,GACZK,MAAOL,EAAM,GACbM,KAAMN,EAAM,GACZO,OAAQP,EAAM,GACdQ,KAAMR,EAAM,GACZS,MAAOT,EAAM,GACbU,MAAOV,EAAM,GACbW,UAAWX,EAAM,IAAMA,EAAM,GAAGY,MAAM,GACtCC,KAAMb,EAAM,GACZc,KAAMd,EAAM,KAEhB,CAIO,SAASG,EAAgBJ,GAC9BgB,KAAKX,UAA0BY,IAAnBjB,EAAUK,KAAqB,IAAML,EAAUK,KAAO,GAClEW,KAAKV,WAA4BW,IAApBjB,EAAUM,MAAsB,IAAMN,EAAUM,MAAQ,GACrEU,KAAKT,UAA0BU,IAAnBjB,EAAUO,KAAqB,IAAMP,EAAUO,KAAO,GAClES,KAAKR,YAA8BS,IAArBjB,EAAUQ,OAAuB,GAAKR,EAAUQ,OAAS,GACvEQ,KAAKP,OAAST,EAAUS,KACxBO,KAAKN,WAA4BO,IAApBjB,EAAUU,WAAsBO,GAAajB,EAAUU,MACpEM,KAAKL,QAAUX,EAAUW,MACzBK,KAAKJ,eAAoCK,IAAxBjB,EAAUY,eAA0BK,GAAajB,EAAUY,UAC5EI,KAAKF,OAASd,EAAUc,KACxBE,KAAKD,UAA0BE,IAAnBjB,EAAUe,KAAqB,GAAKf,EAAUe,KAAO,EACnE,CAbAhB,EAAgBmB,UAAYd,EAAgBc,UAe5Cd,EAAgBc,UAAUC,SAAW,WACnC,OAAOH,KAAKX,KACNW,KAAKV,MACLU,KAAKT,KACLS,KAAKR,QACJQ,KAAKP,KAAO,IAAM,UACHQ,IAAfD,KAAKN,MAAsB,GAAKU,KAAKC,IAAI,EAAgB,EAAbL,KAAKN,SACjDM,KAAKL,MAAQ,IAAM,UACAM,IAAnBD,KAAKJ,UAA0B,GAAK,IAAMQ,KAAKC,IAAI,EAAoB,EAAjBL,KAAKJ,aAC3DI,KAAKF,KAAO,IAAM,IACnBE,KAAKD,IACb"}