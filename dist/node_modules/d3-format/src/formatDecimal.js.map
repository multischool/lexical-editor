{"version":3,"file":"formatDecimal.js","sources":["../../../../node_modules/d3-format/src/formatDecimal.js"],"sourcesContent":["export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, Â±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n"],"names":["formatDecimal","x","Math","abs","round","toLocaleString","replace","toString","formatDecimalParts","p","i","toExponential","indexOf","coefficient","slice","length"],"mappings":"AAAe,SAAQA,EAACC,GACtB,OAAOC,KAAKC,IAAIF,EAAIC,KAAKE,MAAMH,KAAO,KAChCA,EAAEI,eAAe,MAAMC,QAAQ,KAAM,IACrCL,EAAEM,SAAS,GACnB,CAKO,SAASC,EAAmBP,EAAGQ,GACpC,IAAKC,GAAKT,EAAIQ,EAAIR,EAAEU,cAAcF,EAAI,GAAKR,EAAEU,iBAAiBC,QAAQ,MAAQ,EAAG,OAAO,KACxF,IAAIF,EAAGG,EAAcZ,EAAEa,MAAM,EAAGJ,GAIhC,MAAO,CACLG,EAAYE,OAAS,EAAIF,EAAY,GAAKA,EAAYC,MAAM,GAAKD,GAChEZ,EAAEa,MAAMJ,EAAI,GAEjB"}