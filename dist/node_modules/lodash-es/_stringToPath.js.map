{"version":3,"file":"_stringToPath.js","sources":["../../../node_modules/lodash-es/_stringToPath.js"],"sourcesContent":["import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n"],"names":["rePropName","reEscapeChar","stringToPath$1","memoizeCapped","string","result","charCodeAt","push","replace","match","number","quote","subString"],"mappings":"mCAGA,IAAIA,EAAa,mGAGbC,EAAe,WAoBnBC,EAXmBC,GAAc,SAASC,GACxC,IAAIC,EAAS,GAOb,OAN6B,KAAzBD,EAAOE,WAAW,IACpBD,EAAOE,KAAK,IAEdH,EAAOI,QAAQR,GAAY,SAASS,EAAOC,EAAQC,EAAOC,GACxDP,EAAOE,KAAKI,EAAQC,EAAUJ,QAAQP,EAAc,MAASS,GAAUD,EAC3E,IACSJ,CACT"}