{"version":3,"file":"_baseMatchesProperty.js","sources":["../../../node_modules/lodash-es/_baseMatchesProperty.js"],"sourcesContent":["import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n"],"names":["baseMatchesProperty","path","srcValue","isKey","isStrictComparable","matchesStrictComparable","toKey","object","objValue","get","undefined","hasIn","baseIsEqual","COMPARE_PARTIAL_FLAG"],"mappings":"8NAoBA,SAASA,EAAoBC,EAAMC,GACjC,OAAIC,EAAMF,IAASG,EAAmBF,GAC7BG,EAAwBC,EAAML,GAAOC,GAEvC,SAASK,GACd,IAAIC,EAAWC,EAAIF,EAAQN,GAC3B,YAAqBS,IAAbF,GAA0BA,IAAaN,EAC3CS,EAAMJ,EAAQN,GACdW,EAAYV,EAAUM,EAAUK,EACxC,CACA"}