{"version":3,"file":"_baseMerge.js","sources":["../../../node_modules/lodash-es/_baseMerge.js"],"sourcesContent":["import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n"],"names":["baseMerge","object","source","srcIndex","customizer","stack","baseFor","srcValue","key","Stack","isObject","baseMergeDeep","newValue","safeGet","undefined","assignMergeValue","keysIn"],"mappings":"sNAmBA,SAASA,EAAUC,EAAQC,EAAQC,EAAUC,EAAYC,GACnDJ,IAAWC,GAGfI,EAAQJ,GAAQ,SAASK,EAAUC,GAEjC,GADAH,IAAUA,EAAQ,IAAII,GAClBC,EAASH,GACXI,EAAcV,EAAQC,EAAQM,EAAKL,EAAUH,EAAWI,EAAYC,OAEjE,CACH,IAAIO,EAAWR,EACXA,EAAWS,EAAQZ,EAAQO,GAAMD,EAAWC,EAAM,GAAKP,EAAQC,EAAQG,QACvES,OAEaA,IAAbF,IACFA,EAAWL,GAEbQ,EAAiBd,EAAQO,EAAKI,EAC/B,CACF,GAAEI,EACL"}