{"version":3,"file":"_isKey.js","sources":["../../../node_modules/lodash-es/_isKey.js"],"sourcesContent":["import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n"],"names":["reIsDeepProp","reIsPlainProp","isKey","value","object","isArray","type","isSymbol","test","Object"],"mappings":"yDAIA,IAAIA,EAAe,mDACfC,EAAgB,QAUpB,SAASC,EAAMC,EAAOC,GACpB,GAAIC,EAAQF,GACV,OAAO,EAET,IAAIG,SAAcH,EAClB,QAAY,UAARG,GAA4B,UAARA,GAA4B,WAARA,GAC/B,MAATH,IAAiBI,EAASJ,MAGvBF,EAAcO,KAAKL,KAAWH,EAAaQ,KAAKL,IAC1C,MAAVC,GAAkBD,KAASM,OAAOL,GACvC"}