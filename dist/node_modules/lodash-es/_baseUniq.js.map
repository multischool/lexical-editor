{"version":3,"file":"_baseUniq.js","sources":["../../../node_modules/lodash-es/_baseUniq.js"],"sourcesContent":["import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport cacheHas from './_cacheHas.js';\nimport createSet from './_createSet.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseUniq;\n"],"names":["baseUniq","array","iteratee","comparator","index","includes","arrayIncludes","length","isCommon","result","seen","arrayIncludesWith","set","createSet","setToArray","cacheHas","SetCache","outer","value","computed","seenIndex","push"],"mappings":"qMAmBA,SAASA,EAASC,EAAOC,EAAUC,GACjC,IAAIC,GAAS,EACTC,EAAWC,EACXC,EAASN,EAAMM,OACfC,GAAW,EACXC,EAAS,GACTC,EAAOD,EAEX,GAAIN,EACFK,GAAW,EACXH,EAAWM,OAER,GAAIJ,GAvBY,IAuBgB,CACnC,IAAIK,EAAMV,EAAW,KAAOW,EAAUZ,GACtC,GAAIW,EACF,OAAOE,EAAWF,GAEpBJ,GAAW,EACXH,EAAWU,EACXL,EAAO,IAAIM,CACZ,MAECN,EAAOR,EAAW,GAAKO,EAEzBQ,EACA,OAASb,EAAQG,GAAQ,CACvB,IAAIW,EAAQjB,EAAMG,GACde,EAAWjB,EAAWA,EAASgB,GAASA,EAG5C,GADAA,EAASf,GAAwB,IAAVe,EAAeA,EAAQ,EAC1CV,GAAYW,GAAaA,EAAU,CAErC,IADA,IAAIC,EAAYV,EAAKH,OACda,KACL,GAAIV,EAAKU,KAAeD,EACtB,SAASF,EAGTf,GACFQ,EAAKW,KAAKF,GAEZV,EAAOY,KAAKH,EACb,MACSb,EAASK,EAAMS,EAAUhB,KAC7BO,IAASD,GACXC,EAAKW,KAAKF,GAEZV,EAAOY,KAAKH,GAEf,CACD,OAAOT,CACT"}