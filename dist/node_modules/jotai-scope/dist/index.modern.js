import"../../react/jsx-runtime.js";import{createContext as r,useRef as t,useContext as o}from"react";import{createStore as e}from"../../jotai/esm/vanilla.mjs.js";import{useStore as s,useAtom as n,useAtomValue as i,useSetAtom as u}from"../../jotai/esm/react.mjs.js";import{useHydrateAtoms as c}from"../../jotai/esm/react/utils.mjs.js";import{atom as a}from"jotai";import{j as m}from"../../../_virtual/jsx-runtime.js";function j(){return j=Object.assign?Object.assign.bind():function(r){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var e in o)Object.prototype.hasOwnProperty.call(o,e)&&(r[e]=o[e])}return r},j.apply(this,arguments)}function l(){const a=r(null);const l=r=>{const t=o(a);if(!t)throw new Error("Missing Provider from createIsolation");return s(j({store:t},r))};return{Provider:function({store:r,initialValues:o=[],children:s}){const n=t(r);return n.current||(n.current=e()),c(o,{store:n.current}),m.exports.jsx(a.Provider,{value:n.current,children:s})},useStore:l,useAtom:(r,t)=>{const o=l();return n(r,j({store:o},t))},useAtomValue:(r,t)=>{const o=l();return i(r,j({store:o},t))},useSetAtom:(r,t)=>{const o=l();return u(r,j({store:o},t))}}}process.env.NODE_ENV,a(null),r({scope:void 0,baseStore:void 0});export{l as createIsolation};
//# sourceMappingURL=index.modern.js.map
