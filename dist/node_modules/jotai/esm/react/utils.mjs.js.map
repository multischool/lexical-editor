{"version":3,"file":"utils.mjs.js","sources":["../../../../../node_modules/jotai/esm/react/utils.mjs"],"sourcesContent":["'use client';\nimport { useCallback, useMemo } from 'react';\nimport { useSetAtom, useAtom, useStore } from 'jotai/react';\nimport { RESET } from 'jotai/vanilla/utils';\nimport { atom } from 'jotai/vanilla';\n\nfunction useResetAtom(anAtom, options) {\n  const setAtom = useSetAtom(anAtom, options);\n  const resetAtom = useCallback(() => setAtom(RESET), [setAtom]);\n  return resetAtom;\n}\n\nfunction useReducerAtom(anAtom, reducer, options) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] useReducerAtom is deprecated and will be removed in the future. Please create your own version using the recipe. https://github.com/pmndrs/jotai/pull/2467\"\n    );\n  }\n  const [state, setState] = useAtom(anAtom, options);\n  const dispatch = useCallback(\n    (action) => {\n      setState((prev) => reducer(prev, action));\n    },\n    [setState, reducer]\n  );\n  return [state, dispatch];\n}\n\nfunction useAtomCallback(callback, options) {\n  const anAtom = useMemo(\n    () => atom(null, (get, set, ...args) => callback(get, set, ...args)),\n    [callback]\n  );\n  return useSetAtom(anAtom, options);\n}\n\nconst hydratedMap = /* @__PURE__ */ new WeakMap();\nfunction useHydrateAtoms(values, options) {\n  const store = useStore(options);\n  const hydratedSet = getHydratedSet(store);\n  for (const [atom, value] of values) {\n    if (!hydratedSet.has(atom) || (options == null ? void 0 : options.dangerouslyForceHydrate)) {\n      hydratedSet.add(atom);\n      store.set(atom, value);\n    }\n  }\n}\nconst getHydratedSet = (store) => {\n  let hydratedSet = hydratedMap.get(store);\n  if (!hydratedSet) {\n    hydratedSet = /* @__PURE__ */ new WeakSet();\n    hydratedMap.set(store, hydratedSet);\n  }\n  return hydratedSet;\n};\n\nexport { useAtomCallback, useHydrateAtoms, useReducerAtom, useResetAtom };\n"],"names":["hydratedMap","WeakMap","useHydrateAtoms","values","options","store","useStore","hydratedSet","getHydratedSet","atom","value","has","dangerouslyForceHydrate","add","set","get","WeakSet"],"mappings":"yFAoCA,MAAMA,EAA8B,IAAIC,QACxC,SAASC,EAAgBC,EAAQC,GAC/B,MAAMC,EAAQC,EAASF,GACjBG,EAAcC,EAAeH,GACnC,IAAK,MAAOI,EAAMC,KAAUP,EACrBI,EAAYI,IAAIF,MAAqB,MAAXL,OAAkB,EAASA,EAAQQ,2BAChEL,EAAYM,IAAIJ,GAChBJ,EAAMS,IAAIL,EAAMC,GAGtB,CACA,MAAMF,EAAkBH,IACtB,IAAIE,EAAcP,EAAYe,IAAIV,GAKlC,OAJKE,IACHA,EAA8B,IAAIS,QAClChB,EAAYc,IAAIT,EAAOE,IAElBA,CAAW"}