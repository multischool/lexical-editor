import{Graph as e}from"../../dagre-d3-es/src/graphlib/graph.js";import"../../d3-transition/src/selection/index.js";import"../../d3-zoom/src/transform.js";import{k as t,l as r,m as n,c as o,e as l,r as a,n as s,u as i,o as d}from"./mermaid-b5860b54.js";import{r as c}from"./index-3862675e.js";import{addHtmlLabel as p}from"../../dagre-d3-es/src/dagre-js/label/add-html-label.js";import b from"../../d3-selection/src/selectAll.js";import w from"../../d3-shape/src/curve/linear.js";import f from"../../d3-selection/src/select.js";import g from"../../khroma/dist/methods/rgba.js";import h from"../../khroma/dist/methods/channel.js";const u={},y=async function(e,s,i,d,c,b){const w=d.select(`[id="${i}"]`),f=Object.keys(e);for(const i of f){const d=e[i];let f="default";d.classes.length>0&&(f=d.classes.join(" ")),f+=" flowchart-label";const g=t(d.styles);let h,u=void 0!==d.text?d.text:d.id;if(r.info("vertex",d,d.labelType),"markdown"===d.labelType)r.info("vertex",d,d.labelType);else if(n(o().flowchart.htmlLabels)){h=p(w,{label:u}).node(),h.parentNode.removeChild(h)}else{const e=c.createElementNS("http://www.w3.org/2000/svg","text");e.setAttribute("style",g.labelStyle.replace("color:","fill:"));const t=u.split(l.lineBreakRegex);for(const r of t){const t=c.createElementNS("http://www.w3.org/2000/svg","tspan");t.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),t.setAttribute("dy","1em"),t.setAttribute("x","1"),t.textContent=r,e.appendChild(t)}h=e}let y=0,k="";switch(d.type){case"round":y=5,k="rect";break;case"square":case"group":default:k="rect";break;case"diamond":k="question";break;case"hexagon":k="hexagon";break;case"odd":case"odd_right":k="rect_left_inv_arrow";break;case"lean_right":k="lean_right";break;case"lean_left":k="lean_left";break;case"trapezoid":k="trapezoid";break;case"inv_trapezoid":k="inv_trapezoid";break;case"circle":k="circle";break;case"ellipse":k="ellipse";break;case"stadium":k="stadium";break;case"subroutine":k="subroutine";break;case"cylinder":k="cylinder";break;case"doublecircle":k="doublecircle"}const m=await a(u,o());s.setNode(d.id,{labelStyle:g.labelStyle,shape:k,labelText:m,labelType:d.labelType,rx:y,ry:y,class:f,style:g.style,id:d.id,link:d.link,linkTarget:d.linkTarget,tooltip:b.db.getTooltip(d.id)||"",domId:b.db.lookUpDomId(d.id),haveCallback:d.haveCallback,width:"group"===d.type?500:void 0,dir:d.dir,type:d.type,props:d.props,padding:o().flowchart.padding}),r.info("setNode",{labelStyle:g.labelStyle,labelType:d.labelType,shape:k,labelText:m,rx:y,ry:y,class:f,style:g.style,id:d.id,domId:b.db.lookUpDomId(d.id),width:"group"===d.type?500:void 0,type:d.type,dir:d.dir,props:d.props,padding:o().flowchart.padding})}},k=async function(e,n,i){r.info("abc78 edges = ",e);let d,c,p=0,b={};if(void 0!==e.defaultStyle){const r=t(e.defaultStyle);d=r.style,c=r.labelStyle}for(const i of e){p++;const f="L-"+i.start+"-"+i.end;void 0===b[f]?(b[f]=0,r.info("abc78 new entry",f,b[f])):(b[f]++,r.info("abc78 new entry",f,b[f]));let g=f+"-"+b[f];r.info("abc78 new link id to be used is",f,g,b[f]);const h="LS-"+i.start,y="LE-"+i.end,k={style:"",labelStyle:""};switch(k.minlen=i.length||1,"arrow_open"===i.type?k.arrowhead="none":k.arrowhead="normal",k.arrowTypeStart="arrow_open",k.arrowTypeEnd="arrow_open",i.type){case"double_arrow_cross":k.arrowTypeStart="arrow_cross";case"arrow_cross":k.arrowTypeEnd="arrow_cross";break;case"double_arrow_point":k.arrowTypeStart="arrow_point";case"arrow_point":k.arrowTypeEnd="arrow_point";break;case"double_arrow_circle":k.arrowTypeStart="arrow_circle";case"arrow_circle":k.arrowTypeEnd="arrow_circle"}let m="",x="";switch(i.stroke){case"normal":m="fill:none;",void 0!==d&&(m=d),void 0!==c&&(x=c),k.thickness="normal",k.pattern="solid";break;case"dotted":k.thickness="normal",k.pattern="dotted",k.style="fill:none;stroke-width:2px;stroke-dasharray:3;";break;case"thick":k.thickness="thick",k.pattern="solid",k.style="stroke-width: 3.5px;fill:none;";break;case"invisible":k.thickness="invisible",k.pattern="solid",k.style="stroke-width: 0;fill:none;"}if(void 0!==i.style){const e=t(i.style);m=e.style,x=e.labelStyle}k.style=k.style+=m,k.labelStyle=k.labelStyle+=x,void 0!==i.interpolate?k.curve=s(i.interpolate,w):void 0!==e.defaultInterpolate?k.curve=s(e.defaultInterpolate,w):k.curve=s(u.curve,w),void 0===i.text?void 0!==i.style&&(k.arrowheadStyle="fill: #333"):(k.arrowheadStyle="fill: #333",k.labelpos="c"),k.labelType=i.labelType,k.label=await a(i.text.replace(l.lineBreakRegex,"\n"),o()),void 0===i.style&&(k.style=k.style||"stroke: #333; stroke-width: 1.5px;fill:none;"),k.labelStyle=k.labelStyle.replace("color:","fill:"),k.id=g,k.classes="flowchart-link "+h+" "+y,n.setEdge(i.start,i.end,k,p)}},m={setConf:function(e){const t=Object.keys(e);for(const r of t)u[r]=e[r]},addVertices:y,addEdges:k,getClasses:function(e,t){return t.db.getClasses()},draw:async function(t,n,l,a){r.info("Drawing flowchart");let s=a.db.getDirection();void 0===s&&(s="TD");const{securityLevel:p,flowchart:w}=o(),g=w.nodeSpacing||50,h=w.rankSpacing||50;let u;"sandbox"===p&&(u=f("#i"+n));const m=f("sandbox"===p?u.nodes()[0].contentDocument.body:"body"),x="sandbox"===p?u.nodes()[0].contentDocument:document,v=new e({multigraph:!0,compound:!0}).setGraph({rankdir:s,nodesep:g,ranksep:h,marginx:0,marginy:0}).setDefaultEdgeLabel((function(){return{}}));let S;const T=a.db.getSubGraphs();r.info("Subgraphs - ",T);for(let e=T.length-1;e>=0;e--)S=T[e],r.info("Subgraph - ",S),a.db.addVertex(S.id,{text:S.title,type:S.labelType},"group",void 0,S.classes,S.dir);const _=a.db.getVertices(),$=a.db.getEdges();r.info("Edges",$);let C=0;for(C=T.length-1;C>=0;C--){S=T[C],b("cluster").append("text");for(let e=0;e<S.nodes.length;e++)r.info("Setting up subgraphs",S.nodes[e],S.id),v.setParent(S.nodes[e],S.id)}await y(_,v,n,m,x,a),await k($,v);const j=m.select(`[id="${n}"]`),A=m.select("#"+n+" g");if(await c(A,v,["point","circle","cross"],"flowchart",n),i.insertTitle(j,"flowchartTitleText",w.titleTopMargin,a.db.getDiagramTitle()),d(v,j,w.diagramPadding,w.useMaxWidth),a.db.indexNodes("subGraph"+C),!w.htmlLabels){const e=x.querySelectorAll('[id="'+n+'"] .edgeLabel .label');for(const t of e){const e=t.getBBox(),r=x.createElementNS("http://www.w3.org/2000/svg","rect");r.setAttribute("rx",0),r.setAttribute("ry",0),r.setAttribute("width",e.width),r.setAttribute("height",e.height),t.insertBefore(r,t.firstChild)}}Object.keys(_).forEach((function(e){const t=_[e];if(t.link){const r=f("#"+n+' [id="'+e+'"]');if(r){const e=x.createElementNS("http://www.w3.org/2000/svg","a");e.setAttributeNS("http://www.w3.org/2000/svg","class",t.classes.join(" ")),e.setAttributeNS("http://www.w3.org/2000/svg","href",t.link),e.setAttributeNS("http://www.w3.org/2000/svg","rel","noopener"),"sandbox"===p?e.setAttributeNS("http://www.w3.org/2000/svg","target","_top"):t.linkTarget&&e.setAttributeNS("http://www.w3.org/2000/svg","target",t.linkTarget);const n=r.insert((function(){return e}),":first-child"),o=r.select(".label-container");o&&n.append((function(){return o.node()}));const l=r.select(".label");l&&n.append((function(){return l.node()}))}}}))}},x=e=>`.label {\n    font-family: ${e.fontFamily};\n    color: ${e.nodeTextColor||e.textColor};\n  }\n  .cluster-label text {\n    fill: ${e.titleColor};\n  }\n  .cluster-label span,p {\n    color: ${e.titleColor};\n  }\n\n  .label text,span,p {\n    fill: ${e.nodeTextColor||e.textColor};\n    color: ${e.nodeTextColor||e.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${e.mainBkg};\n    stroke: ${e.nodeBorder};\n    stroke-width: 1px;\n  }\n  .flowchart-label text {\n    text-anchor: middle;\n  }\n  // .flowchart-label .text-outer-tspan {\n  //   text-anchor: middle;\n  // }\n  // .flowchart-label .text-inner-tspan {\n  //   text-anchor: start;\n  // }\n\n  .node .katex path {\n    fill: #000;\n    stroke: #000;\n    stroke-width: 1px;\n  }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${e.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${e.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${e.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${e.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n      background-color: ${e.edgeLabelBackground};\n      fill: ${e.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  /* For html labels only */\n  .labelBkg {\n    background-color: ${((e,t)=>{const r=h,n=r(e,"r"),o=r(e,"g"),l=r(e,"b");return g(n,o,l,t)})(e.edgeLabelBackground,.5)};\n    // background-color: \n  }\n\n  .cluster rect {\n    fill: ${e.clusterBkg};\n    stroke: ${e.clusterBorder};\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${e.titleColor};\n  }\n\n  .cluster span,p {\n    color: ${e.titleColor};\n  }\n  /* .cluster div {\n    color: ${e.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${e.fontFamily};\n    font-size: 12px;\n    background: ${e.tertiaryColor};\n    border: 1px solid ${e.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .flowchartTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${e.textColor};\n  }\n`;export{x as a,m as f};
//# sourceMappingURL=styles-c10674c1.js.map
