{"version":3,"file":"edges-e0da2a9e.js","sources":["../../../../node_modules/mermaid/dist/edges-e0da2a9e.js"],"sourcesContent":["import { l as log, m as evaluate, c as getConfig, M as decodeEntities, d as sanitizeText, u as utils } from \"./mermaid-b5860b54.js\";\nimport { select, line, curveBasis } from \"d3\";\nimport { a as createText } from \"./createText-2e5e7dd3.js\";\nconst insertMarkers = (elem, markerArray, type, id) => {\n  markerArray.forEach((markerName) => {\n    markers[markerName](elem, type, id);\n  });\n};\nconst extension = (elem, type, id) => {\n  log.trace(\"Making markers for \", id);\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-extensionStart\").attr(\"class\", \"marker extension \" + type).attr(\"refX\", 18).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,7 L18,13 V 1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-extensionEnd\").attr(\"class\", \"marker extension \" + type).attr(\"refX\", 1).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,1 V 13 L18,7 Z\");\n};\nconst composition = (elem, type, id) => {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-compositionStart\").attr(\"class\", \"marker composition \" + type).attr(\"refX\", 18).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-compositionEnd\").attr(\"class\", \"marker composition \" + type).attr(\"refX\", 1).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n};\nconst aggregation = (elem, type, id) => {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-aggregationStart\").attr(\"class\", \"marker aggregation \" + type).attr(\"refX\", 18).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-aggregationEnd\").attr(\"class\", \"marker aggregation \" + type).attr(\"refX\", 1).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n};\nconst dependency = (elem, type, id) => {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-dependencyStart\").attr(\"class\", \"marker dependency \" + type).attr(\"refX\", 6).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 5,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-dependencyEnd\").attr(\"class\", \"marker dependency \" + type).attr(\"refX\", 13).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L14,7 L9,1 Z\");\n};\nconst lollipop = (elem, type, id) => {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-lollipopStart\").attr(\"class\", \"marker lollipop \" + type).attr(\"refX\", 13).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"circle\").attr(\"stroke\", \"black\").attr(\"fill\", \"transparent\").attr(\"cx\", 7).attr(\"cy\", 7).attr(\"r\", 6);\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-lollipopEnd\").attr(\"class\", \"marker lollipop \" + type).attr(\"refX\", 1).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"circle\").attr(\"stroke\", \"black\").attr(\"fill\", \"transparent\").attr(\"cx\", 7).attr(\"cy\", 7).attr(\"r\", 6);\n};\nconst point = (elem, type, id) => {\n  elem.append(\"marker\").attr(\"id\", id + \"_\" + type + \"-pointEnd\").attr(\"class\", \"marker \" + type).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 6).attr(\"refY\", 5).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 12).attr(\"markerHeight\", 12).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\n  elem.append(\"marker\").attr(\"id\", id + \"_\" + type + \"-pointStart\").attr(\"class\", \"marker \" + type).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 4.5).attr(\"refY\", 5).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 12).attr(\"markerHeight\", 12).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0 5 L 10 10 L 10 0 z\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\n};\nconst circle$1 = (elem, type, id) => {\n  elem.append(\"marker\").attr(\"id\", id + \"_\" + type + \"-circleEnd\").attr(\"class\", \"marker \" + type).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 11).attr(\"refY\", 5).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 11).attr(\"markerHeight\", 11).attr(\"orient\", \"auto\").append(\"circle\").attr(\"cx\", \"5\").attr(\"cy\", \"5\").attr(\"r\", \"5\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\n  elem.append(\"marker\").attr(\"id\", id + \"_\" + type + \"-circleStart\").attr(\"class\", \"marker \" + type).attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", -1).attr(\"refY\", 5).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 11).attr(\"markerHeight\", 11).attr(\"orient\", \"auto\").append(\"circle\").attr(\"cx\", \"5\").attr(\"cy\", \"5\").attr(\"r\", \"5\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 1).style(\"stroke-dasharray\", \"1,0\");\n};\nconst cross = (elem, type, id) => {\n  elem.append(\"marker\").attr(\"id\", id + \"_\" + type + \"-crossEnd\").attr(\"class\", \"marker cross \" + type).attr(\"viewBox\", \"0 0 11 11\").attr(\"refX\", 12).attr(\"refY\", 5.2).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 11).attr(\"markerHeight\", 11).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,1 l 9,9 M 10,1 l -9,9\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 2).style(\"stroke-dasharray\", \"1,0\");\n  elem.append(\"marker\").attr(\"id\", id + \"_\" + type + \"-crossStart\").attr(\"class\", \"marker cross \" + type).attr(\"viewBox\", \"0 0 11 11\").attr(\"refX\", -1).attr(\"refY\", 5.2).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 11).attr(\"markerHeight\", 11).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,1 l 9,9 M 10,1 l -9,9\").attr(\"class\", \"arrowMarkerPath\").style(\"stroke-width\", 2).style(\"stroke-dasharray\", \"1,0\");\n};\nconst barb = (elem, type, id) => {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", id + \"_\" + type + \"-barbEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 14).attr(\"markerUnits\", \"strokeWidth\").attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n};\nconst markers = {\n  extension,\n  composition,\n  aggregation,\n  dependency,\n  lollipop,\n  point,\n  circle: circle$1,\n  cross,\n  barb\n};\nconst insertMarkers$1 = insertMarkers;\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\nfunction addHtmlLabel(node) {\n  const fo = select(document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\"));\n  const div = fo.append(\"xhtml:div\");\n  const label = node.label;\n  const labelClass = node.isNode ? \"nodeLabel\" : \"edgeLabel\";\n  div.html(\n    '<span class=\"' + labelClass + '\" ' + (node.labelStyle ? 'style=\"' + node.labelStyle + '\"' : \"\") + \">\" + label + \"</span>\"\n  );\n  applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"inline-block\");\n  div.style(\"white-space\", \"nowrap\");\n  div.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n  return fo.node();\n}\nconst createLabel = (_vertexText, style, isTitle, isNode) => {\n  let vertexText = _vertexText || \"\";\n  if (typeof vertexText === \"object\") {\n    vertexText = vertexText[0];\n  }\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    vertexText = vertexText.replace(/\\\\n|\\n/g, \"<br />\");\n    log.debug(\"vertexText\" + vertexText);\n    const node = {\n      isNode,\n      label: decodeEntities(vertexText).replace(\n        /fa[blrs]?:fa-[\\w-]+/g,\n        // cspell: disable-line\n        (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\n      ),\n      labelStyle: style.replace(\"fill:\", \"color:\")\n    };\n    let vertexNode = addHtmlLabel(node);\n    return vertexNode;\n  } else {\n    const svgLabel = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n    svgLabel.setAttribute(\"style\", style.replace(\"color:\", \"fill:\"));\n    let rows = [];\n    if (typeof vertexText === \"string\") {\n      rows = vertexText.split(/\\\\n|\\n|<br\\s*\\/?>/gi);\n    } else if (Array.isArray(vertexText)) {\n      rows = vertexText;\n    } else {\n      rows = [];\n    }\n    for (const row of rows) {\n      const tspan = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n      tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n      tspan.setAttribute(\"dy\", \"1em\");\n      tspan.setAttribute(\"x\", \"0\");\n      if (isTitle) {\n        tspan.setAttribute(\"class\", \"title-row\");\n      } else {\n        tspan.setAttribute(\"class\", \"row\");\n      }\n      tspan.textContent = row.trim();\n      svgLabel.appendChild(tspan);\n    }\n    return svgLabel;\n  }\n};\nconst createLabel$1 = createLabel;\nconst labelHelper = async (parent, node, _classes, isNode) => {\n  let classes;\n  const useHtmlLabels = node.useHtmlLabels || evaluate(getConfig().flowchart.htmlLabels);\n  if (!_classes) {\n    classes = \"node default\";\n  } else {\n    classes = _classes;\n  }\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", classes).attr(\"id\", node.domId || node.id);\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"label\").attr(\"style\", node.labelStyle);\n  let labelText;\n  if (node.labelText === void 0) {\n    labelText = \"\";\n  } else {\n    labelText = typeof node.labelText === \"string\" ? node.labelText : node.labelText[0];\n  }\n  const textNode = label.node();\n  let text;\n  if (node.labelType === \"markdown\") {\n    text = createText(label, sanitizeText(decodeEntities(labelText), getConfig()), {\n      useHtmlLabels,\n      width: node.width || getConfig().flowchart.wrappingWidth,\n      classes: \"markdown-node-label\"\n    });\n  } else {\n    text = textNode.appendChild(\n      createLabel$1(\n        sanitizeText(decodeEntities(labelText), getConfig()),\n        node.labelStyle,\n        false,\n        isNode\n      )\n    );\n  }\n  let bbox = text.getBBox();\n  const halfPadding = node.padding / 2;\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    const images = div.getElementsByTagName(\"img\");\n    if (images) {\n      const noImgText = labelText.replace(/<img[^>]*>/g, \"\").trim() === \"\";\n      await Promise.all(\n        [...images].map(\n          (img) => new Promise((res) => {\n            function setupImage() {\n              img.style.display = \"flex\";\n              img.style.flexDirection = \"column\";\n              if (noImgText) {\n                const bodyFontSize = getConfig().fontSize ? getConfig().fontSize : window.getComputedStyle(document.body).fontSize;\n                const enlargingFactor = 5;\n                const width = parseInt(bodyFontSize, 10) * enlargingFactor + \"px\";\n                img.style.minWidth = width;\n                img.style.maxWidth = width;\n              } else {\n                img.style.width = \"100%\";\n              }\n              res(img);\n            }\n            setTimeout(() => {\n              if (img.complete) {\n                setupImage();\n              }\n            });\n            img.addEventListener(\"error\", setupImage);\n            img.addEventListener(\"load\", setupImage);\n          })\n        )\n      );\n    }\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  if (useHtmlLabels) {\n    label.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\n  } else {\n    label.attr(\"transform\", \"translate(0, \" + -bbox.height / 2 + \")\");\n  }\n  if (node.centerLabel) {\n    label.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\n  }\n  label.insert(\"rect\", \":first-child\");\n  return { shapeSvg, bbox, halfPadding, label };\n};\nconst updateNodeBounds = (node, element) => {\n  const bbox = element.node().getBBox();\n  node.width = bbox.width;\n  node.height = bbox.height;\n};\nfunction insertPolygonShape(parent, w, h, points) {\n  return parent.insert(\"polygon\", \":first-child\").attr(\n    \"points\",\n    points.map(function(d) {\n      return d.x + \",\" + d.y;\n    }).join(\" \")\n  ).attr(\"class\", \"label-container\").attr(\"transform\", \"translate(\" + -w / 2 + \",\" + h / 2 + \")\");\n}\nfunction intersectNode(node, point2) {\n  return node.intersect(point2);\n}\nfunction intersectEllipse(node, rx, ry, point2) {\n  var cx = node.x;\n  var cy = node.y;\n  var px = cx - point2.x;\n  var py = cy - point2.y;\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n  var dx = Math.abs(rx * ry * px / det);\n  if (point2.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point2.y < cy) {\n    dy = -dy;\n  }\n  return { x: cx + dx, y: cy + dy };\n}\nfunction intersectCircle(node, rx, point2) {\n  return intersectEllipse(node, rx, rx, point2);\n}\nfunction intersectLine(p1, p2, q1, q2) {\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return;\n  }\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return;\n  }\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return;\n  }\n  offset = Math.abs(denom / 2);\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n  return { x, y };\n}\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\nfunction intersectPolygon(node, polyPoints, point2) {\n  var x1 = node.x;\n  var y1 = node.y;\n  var intersections = [];\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  if (typeof polyPoints.forEach === \"function\") {\n    polyPoints.forEach(function(entry) {\n      minX = Math.min(minX, entry.x);\n      minY = Math.min(minY, entry.y);\n    });\n  } else {\n    minX = Math.min(minX, polyPoints.x);\n    minY = Math.min(minY, polyPoints.y);\n  }\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect2 = intersectLine(\n      node,\n      point2,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect2) {\n      intersections.push(intersect2);\n    }\n  }\n  if (!intersections.length) {\n    return node;\n  }\n  if (intersections.length > 1) {\n    intersections.sort(function(p, q) {\n      var pdx = p.x - point2.x;\n      var pdy = p.y - point2.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n      var qdx = q.x - point2.x;\n      var qdy = q.y - point2.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\nconst intersectRect = (node, point2) => {\n  var x = node.x;\n  var y = node.y;\n  var dx = point2.x - x;\n  var dy = point2.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n  return { x: x + sx, y: y + sy };\n};\nconst intersectRect$1 = intersectRect;\nconst intersect = {\n  node: intersectNode,\n  circle: intersectCircle,\n  ellipse: intersectEllipse,\n  polygon: intersectPolygon,\n  rect: intersectRect$1\n};\nconst note = async (parent, node) => {\n  const useHtmlLabels = node.useHtmlLabels || getConfig().flowchart.htmlLabels;\n  if (!useHtmlLabels) {\n    node.centerLabel = true;\n  }\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    \"node \" + node.classes,\n    true\n  );\n  log.info(\"Classes = \", node.classes);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  rect2.attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", -bbox.width / 2 - halfPadding).attr(\"y\", -bbox.height / 2 - halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nconst note$1 = note;\nconst expandAndDeduplicateDirections = (directions) => {\n  const uniqueDirections = /* @__PURE__ */ new Set();\n  for (const direction of directions) {\n    switch (direction) {\n      case \"x\":\n        uniqueDirections.add(\"right\");\n        uniqueDirections.add(\"left\");\n        break;\n      case \"y\":\n        uniqueDirections.add(\"up\");\n        uniqueDirections.add(\"down\");\n        break;\n      default:\n        uniqueDirections.add(direction);\n        break;\n    }\n  }\n  return uniqueDirections;\n};\nconst getArrowPoints = (duplicatedDirections, bbox, node) => {\n  const directions = expandAndDeduplicateDirections(duplicatedDirections);\n  const f = 2;\n  const height = bbox.height + 2 * node.padding;\n  const midpoint = height / f;\n  const width = bbox.width + 2 * midpoint + node.padding;\n  const padding = node.padding / 2;\n  if (directions.has(\"right\") && directions.has(\"left\") && directions.has(\"up\") && directions.has(\"down\")) {\n    return [\n      // Bottom\n      { x: 0, y: 0 },\n      { x: midpoint, y: 0 },\n      { x: width / 2, y: 2 * padding },\n      { x: width - midpoint, y: 0 },\n      { x: width, y: 0 },\n      // Right\n      { x: width, y: -height / 3 },\n      { x: width + 2 * padding, y: -height / 2 },\n      { x: width, y: -2 * height / 3 },\n      { x: width, y: -height },\n      // Top\n      { x: width - midpoint, y: -height },\n      { x: width / 2, y: -height - 2 * padding },\n      { x: midpoint, y: -height },\n      // Left\n      { x: 0, y: -height },\n      { x: 0, y: -2 * height / 3 },\n      { x: -2 * padding, y: -height / 2 },\n      { x: 0, y: -height / 3 }\n    ];\n  }\n  if (directions.has(\"right\") && directions.has(\"left\") && directions.has(\"up\")) {\n    return [\n      { x: midpoint, y: 0 },\n      { x: width - midpoint, y: 0 },\n      { x: width, y: -height / 2 },\n      { x: width - midpoint, y: -height },\n      { x: midpoint, y: -height },\n      { x: 0, y: -height / 2 }\n    ];\n  }\n  if (directions.has(\"right\") && directions.has(\"left\") && directions.has(\"down\")) {\n    return [\n      { x: 0, y: 0 },\n      { x: midpoint, y: -height },\n      { x: width - midpoint, y: -height },\n      { x: width, y: 0 }\n    ];\n  }\n  if (directions.has(\"right\") && directions.has(\"up\") && directions.has(\"down\")) {\n    return [\n      { x: 0, y: 0 },\n      { x: width, y: -midpoint },\n      { x: width, y: -height + midpoint },\n      { x: 0, y: -height }\n    ];\n  }\n  if (directions.has(\"left\") && directions.has(\"up\") && directions.has(\"down\")) {\n    return [\n      { x: width, y: 0 },\n      { x: 0, y: -midpoint },\n      { x: 0, y: -height + midpoint },\n      { x: width, y: -height }\n    ];\n  }\n  if (directions.has(\"right\") && directions.has(\"left\")) {\n    return [\n      { x: midpoint, y: 0 },\n      { x: midpoint, y: -padding },\n      { x: width - midpoint, y: -padding },\n      { x: width - midpoint, y: 0 },\n      { x: width, y: -height / 2 },\n      { x: width - midpoint, y: -height },\n      { x: width - midpoint, y: -height + padding },\n      { x: midpoint, y: -height + padding },\n      { x: midpoint, y: -height },\n      { x: 0, y: -height / 2 }\n    ];\n  }\n  if (directions.has(\"up\") && directions.has(\"down\")) {\n    return [\n      // Bottom center\n      { x: width / 2, y: 0 },\n      // Left pont of bottom arrow\n      { x: 0, y: -padding },\n      { x: midpoint, y: -padding },\n      // Left top over vertical section\n      { x: midpoint, y: -height + padding },\n      { x: 0, y: -height + padding },\n      // Top of arrow\n      { x: width / 2, y: -height },\n      { x: width, y: -height + padding },\n      // Top of right vertical bar\n      { x: width - midpoint, y: -height + padding },\n      { x: width - midpoint, y: -padding },\n      { x: width, y: -padding }\n    ];\n  }\n  if (directions.has(\"right\") && directions.has(\"up\")) {\n    return [\n      { x: 0, y: 0 },\n      { x: width, y: -midpoint },\n      { x: 0, y: -height }\n    ];\n  }\n  if (directions.has(\"right\") && directions.has(\"down\")) {\n    return [\n      { x: 0, y: 0 },\n      { x: width, y: 0 },\n      { x: 0, y: -height }\n    ];\n  }\n  if (directions.has(\"left\") && directions.has(\"up\")) {\n    return [\n      { x: width, y: 0 },\n      { x: 0, y: -midpoint },\n      { x: width, y: -height }\n    ];\n  }\n  if (directions.has(\"left\") && directions.has(\"down\")) {\n    return [\n      { x: width, y: 0 },\n      { x: 0, y: 0 },\n      { x: width, y: -height }\n    ];\n  }\n  if (directions.has(\"right\")) {\n    return [\n      { x: midpoint, y: -padding },\n      { x: midpoint, y: -padding },\n      { x: width - midpoint, y: -padding },\n      { x: width - midpoint, y: 0 },\n      { x: width, y: -height / 2 },\n      { x: width - midpoint, y: -height },\n      { x: width - midpoint, y: -height + padding },\n      // top left corner of arrow\n      { x: midpoint, y: -height + padding },\n      { x: midpoint, y: -height + padding }\n    ];\n  }\n  if (directions.has(\"left\")) {\n    return [\n      { x: midpoint, y: 0 },\n      { x: midpoint, y: -padding },\n      // Two points, the right corners\n      { x: width - midpoint, y: -padding },\n      { x: width - midpoint, y: -height + padding },\n      { x: midpoint, y: -height + padding },\n      { x: midpoint, y: -height },\n      { x: 0, y: -height / 2 }\n    ];\n  }\n  if (directions.has(\"up\")) {\n    return [\n      // Bottom center\n      { x: midpoint, y: -padding },\n      // Left top over vertical section\n      { x: midpoint, y: -height + padding },\n      { x: 0, y: -height + padding },\n      // Top of arrow\n      { x: width / 2, y: -height },\n      { x: width, y: -height + padding },\n      // Top of right vertical bar\n      { x: width - midpoint, y: -height + padding },\n      { x: width - midpoint, y: -padding }\n    ];\n  }\n  if (directions.has(\"down\")) {\n    return [\n      // Bottom center\n      { x: width / 2, y: 0 },\n      // Left pont of bottom arrow\n      { x: 0, y: -padding },\n      { x: midpoint, y: -padding },\n      // Left top over vertical section\n      { x: midpoint, y: -height + padding },\n      { x: width - midpoint, y: -height + padding },\n      { x: width - midpoint, y: -padding },\n      { x: width, y: -padding }\n    ];\n  }\n  return [{ x: 0, y: 0 }];\n};\nconst formatClass = (str) => {\n  if (str) {\n    return \" \" + str;\n  }\n  return \"\";\n};\nconst getClassesFromNode = (node, otherClasses) => {\n  return `${otherClasses ? otherClasses : \"node default\"}${formatClass(node.classes)} ${formatClass(\n    node.class\n  )}`;\n};\nconst question = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const s = w + h;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 }\n  ];\n  log.info(\"Question main (Circle)\");\n  const questionElem = insertPolygonShape(shapeSvg, s, s, points);\n  questionElem.attr(\"style\", node.style);\n  updateNodeBounds(node, questionElem);\n  node.intersect = function(point2) {\n    log.warn(\"Intersect called\");\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst choice = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\n  const s = 28;\n  const points = [\n    { x: 0, y: s / 2 },\n    { x: s / 2, y: 0 },\n    { x: 0, y: -s / 2 },\n    { x: -s / 2, y: 0 }\n  ];\n  const choice2 = shapeSvg.insert(\"polygon\", \":first-child\").attr(\n    \"points\",\n    points.map(function(d) {\n      return d.x + \",\" + d.y;\n    }).join(\" \")\n  );\n  choice2.attr(\"class\", \"state-start\").attr(\"r\", 7).attr(\"width\", 28).attr(\"height\", 28);\n  node.width = 28;\n  node.height = 28;\n  node.intersect = function(point2) {\n    return intersect.circle(node, 14, point2);\n  };\n  return shapeSvg;\n};\nconst hexagon = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const f = 4;\n  const h = bbox.height + node.padding;\n  const m = h / f;\n  const w = bbox.width + 2 * m + node.padding;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  const hex = insertPolygonShape(shapeSvg, w, h, points);\n  hex.attr(\"style\", node.style);\n  updateNodeBounds(node, hex);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst block_arrow = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(parent, node, void 0, true);\n  const f = 2;\n  const h = bbox.height + 2 * node.padding;\n  const m = h / f;\n  const w = bbox.width + 2 * m + node.padding;\n  const points = getArrowPoints(node.directions, bbox, node);\n  const blockArrow = insertPolygonShape(shapeSvg, w, h, points);\n  blockArrow.attr(\"style\", node.style);\n  updateNodeBounds(node, blockArrow);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst rect_left_inv_arrow = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  node.width = w + h;\n  node.height = h;\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst lean_right = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getClassesFromNode(node), true);\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -2 * h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: -h },\n    { x: h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst lean_left = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 2 * h / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - 2 * h / 6, y: -h },\n    { x: -h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst trapezoid = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -2 * h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst inv_trapezoid = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + 2 * h / 6, y: -h },\n    { x: -2 * h / 6, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst rect_right_inv_arrow = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst cylinder = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry + node.padding;\n  const shape = \"M 0,\" + ry + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 a \" + rx + \",\" + ry + \" 0,0,0 \" + -w + \" 0 l 0,\" + h + \" a \" + rx + \",\" + ry + \" 0,0,0 \" + w + \" 0 l 0,\" + -h;\n  const el = shapeSvg.attr(\"label-offset-y\", ry).insert(\"path\", \":first-child\").attr(\"style\", node.style).attr(\"d\", shape).attr(\"transform\", \"translate(\" + -w / 2 + \",\" + -(h / 2 + ry) + \")\");\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    const pos = intersect.rect(node, point2);\n    const x = pos.x - node.x;\n    if (rx != 0 && (Math.abs(x) < node.width / 2 || Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry)) {\n      let y = ry * ry * (1 - x * x / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point2.y - node.y > 0) {\n        y = -y;\n      }\n      pos.y += y;\n    }\n    return pos;\n  };\n  return shapeSvg;\n};\nconst rect = async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    \"node \" + node.classes + \" \" + node.class,\n    true\n  );\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const totalWidth = node.positioned ? node.width : bbox.width + node.padding;\n  const totalHeight = node.positioned ? node.height : bbox.height + node.padding;\n  const x = node.positioned ? -totalWidth / 2 : -bbox.width / 2 - halfPadding;\n  const y = node.positioned ? -totalHeight / 2 : -bbox.height / 2 - halfPadding;\n  rect2.attr(\"class\", \"basic label-container\").attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", x).attr(\"y\", y).attr(\"width\", totalWidth).attr(\"height\", totalHeight);\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect2, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete(\"borders\");\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nconst composite = async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    \"node \" + node.classes,\n    true\n  );\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const totalWidth = node.positioned ? node.width : bbox.width + node.padding;\n  const totalHeight = node.positioned ? node.height : bbox.height + node.padding;\n  const x = node.positioned ? -totalWidth / 2 : -bbox.width / 2 - halfPadding;\n  const y = node.positioned ? -totalHeight / 2 : -bbox.height / 2 - halfPadding;\n  rect2.attr(\"class\", \"basic cluster composite label-container\").attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", x).attr(\"y\", y).attr(\"width\", totalWidth).attr(\"height\", totalHeight);\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect2, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete(\"borders\");\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nconst labelRect = async (parent, node) => {\n  const { shapeSvg } = await labelHelper(parent, node, \"label\", true);\n  log.trace(\"Classes = \", node.class);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const totalWidth = 0;\n  const totalHeight = 0;\n  rect2.attr(\"width\", totalWidth).attr(\"height\", totalHeight);\n  shapeSvg.attr(\"class\", \"label edgeLabel\");\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect2, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete(\"borders\");\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nfunction applyNodePropertyBorders(rect2, borders, totalWidth, totalHeight) {\n  const strokeDashArray = [];\n  const addBorder = (length) => {\n    strokeDashArray.push(length, 0);\n  };\n  const skipBorder = (length) => {\n    strokeDashArray.push(0, length);\n  };\n  if (borders.includes(\"t\")) {\n    log.debug(\"add top border\");\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes(\"r\")) {\n    log.debug(\"add right border\");\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  if (borders.includes(\"b\")) {\n    log.debug(\"add bottom border\");\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes(\"l\")) {\n    log.debug(\"add left border\");\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  rect2.attr(\"stroke-dasharray\", strokeDashArray.join(\" \"));\n}\nconst rectWithTitle = (parent, node) => {\n  let classes;\n  if (!node.classes) {\n    classes = \"node default\";\n  } else {\n    classes = \"node \" + node.classes;\n  }\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", classes).attr(\"id\", node.domId || node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const innerLine = shapeSvg.insert(\"line\");\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"label\");\n  const text2 = node.labelText.flat ? node.labelText.flat() : node.labelText;\n  let title = \"\";\n  if (typeof text2 === \"object\") {\n    title = text2[0];\n  } else {\n    title = text2;\n  }\n  log.info(\"Label text abc79\", title, text2, typeof text2 === \"object\");\n  const text = label.node().appendChild(createLabel$1(title, node.labelStyle, true, true));\n  let bbox = { width: 0, height: 0 };\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  log.info(\"Text 2\", text2);\n  const textRows = text2.slice(1, text2.length);\n  let titleBox = text.getBBox();\n  const descr = label.node().appendChild(\n    createLabel$1(textRows.join ? textRows.join(\"<br/>\") : textRows, node.labelStyle, true, true)\n  );\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = descr.children[0];\n    const dv = select(descr);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  const halfPadding = node.padding / 2;\n  select(descr).attr(\n    \"transform\",\n    \"translate( \" + // (titleBox.width - bbox.width) / 2 +\n    (bbox.width > titleBox.width ? 0 : (titleBox.width - bbox.width) / 2) + \", \" + (titleBox.height + halfPadding + 5) + \")\"\n  );\n  select(text).attr(\n    \"transform\",\n    \"translate( \" + // (titleBox.width - bbox.width) / 2 +\n    (bbox.width < titleBox.width ? 0 : -(titleBox.width - bbox.width) / 2) + \", 0)\"\n  );\n  bbox = label.node().getBBox();\n  label.attr(\n    \"transform\",\n    \"translate(\" + -bbox.width / 2 + \", \" + (-bbox.height / 2 - halfPadding + 3) + \")\"\n  );\n  rect2.attr(\"class\", \"outer title-state\").attr(\"x\", -bbox.width / 2 - halfPadding).attr(\"y\", -bbox.height / 2 - halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\n  innerLine.attr(\"class\", \"divider\").attr(\"x1\", -bbox.width / 2 - halfPadding).attr(\"x2\", bbox.width / 2 + halfPadding).attr(\"y1\", -bbox.height / 2 - halfPadding + titleBox.height + halfPadding).attr(\"y2\", -bbox.height / 2 - halfPadding + titleBox.height + halfPadding);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nconst stadium = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const h = bbox.height + node.padding;\n  const w = bbox.width + h / 4 + node.padding;\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\").attr(\"style\", node.style).attr(\"rx\", h / 2).attr(\"ry\", h / 2).attr(\"x\", -w / 2).attr(\"y\", -h / 2).attr(\"width\", w).attr(\"height\", h);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nconst circle = async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const circle2 = shapeSvg.insert(\"circle\", \":first-child\");\n  circle2.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"r\", bbox.width / 2 + halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\n  log.info(\"Circle main\");\n  updateNodeBounds(node, circle2);\n  node.intersect = function(point2) {\n    log.info(\"Circle intersect\", node, bbox.width / 2 + halfPadding, point2);\n    return intersect.circle(node, bbox.width / 2 + halfPadding, point2);\n  };\n  return shapeSvg;\n};\nconst doublecircle = async (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const gap = 5;\n  const circleGroup = shapeSvg.insert(\"g\", \":first-child\");\n  const outerCircle = circleGroup.insert(\"circle\");\n  const innerCircle = circleGroup.insert(\"circle\");\n  circleGroup.attr(\"class\", node.class);\n  outerCircle.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"r\", bbox.width / 2 + halfPadding + gap).attr(\"width\", bbox.width + node.padding + gap * 2).attr(\"height\", bbox.height + node.padding + gap * 2);\n  innerCircle.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"r\", bbox.width / 2 + halfPadding).attr(\"width\", bbox.width + node.padding).attr(\"height\", bbox.height + node.padding);\n  log.info(\"DoubleCircle main\");\n  updateNodeBounds(node, outerCircle);\n  node.intersect = function(point2) {\n    log.info(\"DoubleCircle intersect\", node, bbox.width / 2 + halfPadding + gap, point2);\n    return intersect.circle(node, bbox.width / 2 + halfPadding + gap, point2);\n  };\n  return shapeSvg;\n};\nconst subroutine = async (parent, node) => {\n  const { shapeSvg, bbox } = await labelHelper(\n    parent,\n    node,\n    getClassesFromNode(node, void 0),\n    true\n  );\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 }\n  ];\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr(\"style\", node.style);\n  updateNodeBounds(node, el);\n  node.intersect = function(point2) {\n    return intersect.polygon(node, points, point2);\n  };\n  return shapeSvg;\n};\nconst start = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\n  const circle2 = shapeSvg.insert(\"circle\", \":first-child\");\n  circle2.attr(\"class\", \"state-start\").attr(\"r\", 7).attr(\"width\", 14).attr(\"height\", 14);\n  updateNodeBounds(node, circle2);\n  node.intersect = function(point2) {\n    return intersect.circle(node, 7, point2);\n  };\n  return shapeSvg;\n};\nconst forkJoin = (parent, node, dir) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\n  let width = 70;\n  let height = 10;\n  if (dir === \"LR\") {\n    width = 10;\n    height = 70;\n  }\n  const shape = shapeSvg.append(\"rect\").attr(\"x\", -1 * width / 2).attr(\"y\", -1 * height / 2).attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"fork-join\");\n  updateNodeBounds(node, shape);\n  node.height = node.height + node.padding / 2;\n  node.width = node.width + node.padding / 2;\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nconst end = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\n  const innerCircle = shapeSvg.insert(\"circle\", \":first-child\");\n  const circle2 = shapeSvg.insert(\"circle\", \":first-child\");\n  circle2.attr(\"class\", \"state-start\").attr(\"r\", 7).attr(\"width\", 14).attr(\"height\", 14);\n  innerCircle.attr(\"class\", \"state-end\").attr(\"r\", 5).attr(\"width\", 10).attr(\"height\", 10);\n  updateNodeBounds(node, circle2);\n  node.intersect = function(point2) {\n    return intersect.circle(node, 7, point2);\n  };\n  return shapeSvg;\n};\nconst class_box = (parent, node) => {\n  const halfPadding = node.padding / 2;\n  const rowPadding = 4;\n  const lineHeight = 8;\n  let classes;\n  if (!node.classes) {\n    classes = \"node default\";\n  } else {\n    classes = \"node \" + node.classes;\n  }\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", classes).attr(\"id\", node.domId || node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const topLine = shapeSvg.insert(\"line\");\n  const bottomLine = shapeSvg.insert(\"line\");\n  let maxWidth = 0;\n  let maxHeight = rowPadding;\n  const labelContainer = shapeSvg.insert(\"g\").attr(\"class\", \"label\");\n  let verticalPos = 0;\n  const hasInterface = node.classData.annotations && node.classData.annotations[0];\n  const interfaceLabelText = node.classData.annotations[0] ? \"«\" + node.classData.annotations[0] + \"»\" : \"\";\n  const interfaceLabel = labelContainer.node().appendChild(createLabel$1(interfaceLabelText, node.labelStyle, true, true));\n  let interfaceBBox = interfaceLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = interfaceLabel.children[0];\n    const dv = select(interfaceLabel);\n    interfaceBBox = div.getBoundingClientRect();\n    dv.attr(\"width\", interfaceBBox.width);\n    dv.attr(\"height\", interfaceBBox.height);\n  }\n  if (node.classData.annotations[0]) {\n    maxHeight += interfaceBBox.height + rowPadding;\n    maxWidth += interfaceBBox.width;\n  }\n  let classTitleString = node.classData.label;\n  if (node.classData.type !== void 0 && node.classData.type !== \"\") {\n    if (getConfig().flowchart.htmlLabels) {\n      classTitleString += \"&lt;\" + node.classData.type + \"&gt;\";\n    } else {\n      classTitleString += \"<\" + node.classData.type + \">\";\n    }\n  }\n  const classTitleLabel = labelContainer.node().appendChild(createLabel$1(classTitleString, node.labelStyle, true, true));\n  select(classTitleLabel).attr(\"class\", \"classTitle\");\n  let classTitleBBox = classTitleLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = classTitleLabel.children[0];\n    const dv = select(classTitleLabel);\n    classTitleBBox = div.getBoundingClientRect();\n    dv.attr(\"width\", classTitleBBox.width);\n    dv.attr(\"height\", classTitleBBox.height);\n  }\n  maxHeight += classTitleBBox.height + rowPadding;\n  if (classTitleBBox.width > maxWidth) {\n    maxWidth = classTitleBBox.width;\n  }\n  const classAttributes = [];\n  node.classData.members.forEach((member) => {\n    const parsedInfo = member.getDisplayDetails();\n    let parsedText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      parsedText = parsedText.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n    const lbl = labelContainer.node().appendChild(\n      createLabel$1(\n        parsedText,\n        parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n        true,\n        true\n      )\n    );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr(\"width\", bbox.width);\n      dv.attr(\"height\", bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n    classAttributes.push(lbl);\n  });\n  maxHeight += lineHeight;\n  const classMethods = [];\n  node.classData.methods.forEach((member) => {\n    const parsedInfo = member.getDisplayDetails();\n    let displayText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      displayText = displayText.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n    const lbl = labelContainer.node().appendChild(\n      createLabel$1(\n        displayText,\n        parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n        true,\n        true\n      )\n    );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr(\"width\", bbox.width);\n      dv.attr(\"height\", bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n    classMethods.push(lbl);\n  });\n  maxHeight += lineHeight;\n  if (hasInterface) {\n    let diffX2 = (maxWidth - interfaceBBox.width) / 2;\n    select(interfaceLabel).attr(\n      \"transform\",\n      \"translate( \" + (-1 * maxWidth / 2 + diffX2) + \", \" + -1 * maxHeight / 2 + \")\"\n    );\n    verticalPos = interfaceBBox.height + rowPadding;\n  }\n  let diffX = (maxWidth - classTitleBBox.width) / 2;\n  select(classTitleLabel).attr(\n    \"transform\",\n    \"translate( \" + (-1 * maxWidth / 2 + diffX) + \", \" + (-1 * maxHeight / 2 + verticalPos) + \")\"\n  );\n  verticalPos += classTitleBBox.height + rowPadding;\n  topLine.attr(\"class\", \"divider\").attr(\"x1\", -maxWidth / 2 - halfPadding).attr(\"x2\", maxWidth / 2 + halfPadding).attr(\"y1\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos).attr(\"y2\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n  verticalPos += lineHeight;\n  classAttributes.forEach((lbl) => {\n    select(lbl).attr(\n      \"transform\",\n      \"translate( \" + -maxWidth / 2 + \", \" + (-1 * maxHeight / 2 + verticalPos + lineHeight / 2) + \")\"\n    );\n    const memberBBox = lbl == null ? void 0 : lbl.getBBox();\n    verticalPos += ((memberBBox == null ? void 0 : memberBBox.height) ?? 0) + rowPadding;\n  });\n  verticalPos += lineHeight;\n  bottomLine.attr(\"class\", \"divider\").attr(\"x1\", -maxWidth / 2 - halfPadding).attr(\"x2\", maxWidth / 2 + halfPadding).attr(\"y1\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos).attr(\"y2\", -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n  verticalPos += lineHeight;\n  classMethods.forEach((lbl) => {\n    select(lbl).attr(\n      \"transform\",\n      \"translate( \" + -maxWidth / 2 + \", \" + (-1 * maxHeight / 2 + verticalPos) + \")\"\n    );\n    const memberBBox = lbl == null ? void 0 : lbl.getBBox();\n    verticalPos += ((memberBBox == null ? void 0 : memberBBox.height) ?? 0) + rowPadding;\n  });\n  rect2.attr(\"style\", node.style).attr(\"class\", \"outer title-state\").attr(\"x\", -maxWidth / 2 - halfPadding).attr(\"y\", -(maxHeight / 2) - halfPadding).attr(\"width\", maxWidth + node.padding).attr(\"height\", maxHeight + node.padding);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point2) {\n    return intersect.rect(node, point2);\n  };\n  return shapeSvg;\n};\nconst shapes = {\n  rhombus: question,\n  composite,\n  question,\n  rect,\n  labelRect,\n  rectWithTitle,\n  choice,\n  circle,\n  doublecircle,\n  stadium,\n  hexagon,\n  block_arrow,\n  rect_left_inv_arrow,\n  lean_right,\n  lean_left,\n  trapezoid,\n  inv_trapezoid,\n  rect_right_inv_arrow,\n  cylinder,\n  start,\n  end,\n  note: note$1,\n  subroutine,\n  fork: forkJoin,\n  join: forkJoin,\n  class_box\n};\nlet nodeElems = {};\nconst insertNode = async (elem, node, dir) => {\n  let newEl;\n  let el;\n  if (node.link) {\n    let target;\n    if (getConfig().securityLevel === \"sandbox\") {\n      target = \"_top\";\n    } else if (node.linkTarget) {\n      target = node.linkTarget || \"_blank\";\n    }\n    newEl = elem.insert(\"svg:a\").attr(\"xlink:href\", node.link).attr(\"target\", target);\n    el = await shapes[node.shape](newEl, node, dir);\n  } else {\n    el = await shapes[node.shape](elem, node, dir);\n    newEl = el;\n  }\n  if (node.tooltip) {\n    el.attr(\"title\", node.tooltip);\n  }\n  if (node.class) {\n    el.attr(\"class\", \"node default \" + node.class);\n  }\n  newEl.attr(\"data-node\", \"true\");\n  newEl.attr(\"data-id\", node.id);\n  nodeElems[node.id] = newEl;\n  if (node.haveCallback) {\n    nodeElems[node.id].attr(\"class\", nodeElems[node.id].attr(\"class\") + \" clickable\");\n  }\n  return newEl;\n};\nconst setNodeElem = (elem, node) => {\n  nodeElems[node.id] = elem;\n};\nconst clear$1 = () => {\n  nodeElems = {};\n};\nconst positionNode = (node) => {\n  const el = nodeElems[node.id];\n  log.trace(\n    \"Transforming node\",\n    node.diff,\n    node,\n    \"translate(\" + (node.x - node.width / 2 - 5) + \", \" + node.width / 2 + \")\"\n  );\n  const padding = 8;\n  const diff = node.diff || 0;\n  if (node.clusterNode) {\n    el.attr(\n      \"transform\",\n      \"translate(\" + (node.x + diff - node.width / 2) + \", \" + (node.y - node.height / 2 - padding) + \")\"\n    );\n  } else {\n    el.attr(\"transform\", \"translate(\" + node.x + \", \" + node.y + \")\");\n  }\n  return diff;\n};\nconst getSubGraphTitleMargins = ({\n  flowchart\n}) => {\n  var _a, _b;\n  const subGraphTitleTopMargin = ((_a = flowchart == null ? void 0 : flowchart.subGraphTitleMargin) == null ? void 0 : _a.top) ?? 0;\n  const subGraphTitleBottomMargin = ((_b = flowchart == null ? void 0 : flowchart.subGraphTitleMargin) == null ? void 0 : _b.bottom) ?? 0;\n  const subGraphTitleTotalMargin = subGraphTitleTopMargin + subGraphTitleBottomMargin;\n  return {\n    subGraphTitleTopMargin,\n    subGraphTitleBottomMargin,\n    subGraphTitleTotalMargin\n  };\n};\nconst markerOffsets = {\n  aggregation: 18,\n  extension: 18,\n  composition: 18,\n  dependency: 6,\n  lollipop: 13.5,\n  arrow_point: 5.3\n};\nfunction calculateDeltaAndAngle(point1, point2) {\n  if (point1 === void 0 || point2 === void 0) {\n    return { angle: 0, deltaX: 0, deltaY: 0 };\n  }\n  point1 = pointTransformer(point1);\n  point2 = pointTransformer(point2);\n  const [x1, y1] = [point1.x, point1.y];\n  const [x2, y2] = [point2.x, point2.y];\n  const deltaX = x2 - x1;\n  const deltaY = y2 - y1;\n  return { angle: Math.atan(deltaY / deltaX), deltaX, deltaY };\n}\nconst pointTransformer = (data) => {\n  if (Array.isArray(data)) {\n    return { x: data[0], y: data[1] };\n  }\n  return data;\n};\nconst getLineFunctionsWithOffset = (edge) => {\n  return {\n    x: function(d, i, data) {\n      let offset = 0;\n      if (i === 0 && Object.hasOwn(markerOffsets, edge.arrowTypeStart)) {\n        const { angle, deltaX } = calculateDeltaAndAngle(data[0], data[1]);\n        offset = markerOffsets[edge.arrowTypeStart] * Math.cos(angle) * (deltaX >= 0 ? 1 : -1);\n      } else if (i === data.length - 1 && Object.hasOwn(markerOffsets, edge.arrowTypeEnd)) {\n        const { angle, deltaX } = calculateDeltaAndAngle(\n          data[data.length - 1],\n          data[data.length - 2]\n        );\n        offset = markerOffsets[edge.arrowTypeEnd] * Math.cos(angle) * (deltaX >= 0 ? 1 : -1);\n      }\n      return pointTransformer(d).x + offset;\n    },\n    y: function(d, i, data) {\n      let offset = 0;\n      if (i === 0 && Object.hasOwn(markerOffsets, edge.arrowTypeStart)) {\n        const { angle, deltaY } = calculateDeltaAndAngle(data[0], data[1]);\n        offset = markerOffsets[edge.arrowTypeStart] * Math.abs(Math.sin(angle)) * (deltaY >= 0 ? 1 : -1);\n      } else if (i === data.length - 1 && Object.hasOwn(markerOffsets, edge.arrowTypeEnd)) {\n        const { angle, deltaY } = calculateDeltaAndAngle(\n          data[data.length - 1],\n          data[data.length - 2]\n        );\n        offset = markerOffsets[edge.arrowTypeEnd] * Math.abs(Math.sin(angle)) * (deltaY >= 0 ? 1 : -1);\n      }\n      return pointTransformer(d).y + offset;\n    }\n  };\n};\nconst addEdgeMarkers = (svgPath, edge, url, id, diagramType) => {\n  if (edge.arrowTypeStart) {\n    addEdgeMarker(svgPath, \"start\", edge.arrowTypeStart, url, id, diagramType);\n  }\n  if (edge.arrowTypeEnd) {\n    addEdgeMarker(svgPath, \"end\", edge.arrowTypeEnd, url, id, diagramType);\n  }\n};\nconst arrowTypesMap = {\n  arrow_cross: \"cross\",\n  arrow_point: \"point\",\n  arrow_barb: \"barb\",\n  arrow_circle: \"circle\",\n  aggregation: \"aggregation\",\n  extension: \"extension\",\n  composition: \"composition\",\n  dependency: \"dependency\",\n  lollipop: \"lollipop\"\n};\nconst addEdgeMarker = (svgPath, position, arrowType, url, id, diagramType) => {\n  const endMarkerType = arrowTypesMap[arrowType];\n  if (!endMarkerType) {\n    log.warn(`Unknown arrow type: ${arrowType}`);\n    return;\n  }\n  const suffix = position === \"start\" ? \"Start\" : \"End\";\n  svgPath.attr(`marker-${position}`, `url(${url}#${id}_${diagramType}-${endMarkerType}${suffix})`);\n};\nlet edgeLabels = {};\nlet terminalLabels = {};\nconst clear = () => {\n  edgeLabels = {};\n  terminalLabels = {};\n};\nconst insertEdgeLabel = (elem, edge) => {\n  const useHtmlLabels = evaluate(getConfig().flowchart.htmlLabels);\n  const labelElement = edge.labelType === \"markdown\" ? createText(elem, edge.label, {\n    style: edge.labelStyle,\n    useHtmlLabels,\n    addSvgBackground: true\n  }) : createLabel$1(edge.label, edge.labelStyle);\n  const edgeLabel = elem.insert(\"g\").attr(\"class\", \"edgeLabel\");\n  const label = edgeLabel.insert(\"g\").attr(\"class\", \"label\");\n  label.node().appendChild(labelElement);\n  let bbox = labelElement.getBBox();\n  if (useHtmlLabels) {\n    const div = labelElement.children[0];\n    const dv = select(labelElement);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  label.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\n  edgeLabels[edge.id] = edgeLabel;\n  edge.width = bbox.width;\n  edge.height = bbox.height;\n  let fo;\n  if (edge.startLabelLeft) {\n    const startLabelElement = createLabel$1(edge.startLabelLeft, edge.labelStyle);\n    const startEdgeLabelLeft = elem.insert(\"g\").attr(\"class\", \"edgeTerminals\");\n    const inner = startEdgeLabelLeft.insert(\"g\").attr(\"class\", \"inner\");\n    fo = inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr(\"transform\", \"translate(\" + -slBox.width / 2 + \", \" + -slBox.height / 2 + \")\");\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startLeft = startEdgeLabelLeft;\n    setTerminalWidth(fo, edge.startLabelLeft);\n  }\n  if (edge.startLabelRight) {\n    const startLabelElement = createLabel$1(edge.startLabelRight, edge.labelStyle);\n    const startEdgeLabelRight = elem.insert(\"g\").attr(\"class\", \"edgeTerminals\");\n    const inner = startEdgeLabelRight.insert(\"g\").attr(\"class\", \"inner\");\n    fo = startEdgeLabelRight.node().appendChild(startLabelElement);\n    inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr(\"transform\", \"translate(\" + -slBox.width / 2 + \", \" + -slBox.height / 2 + \")\");\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startRight = startEdgeLabelRight;\n    setTerminalWidth(fo, edge.startLabelRight);\n  }\n  if (edge.endLabelLeft) {\n    const endLabelElement = createLabel$1(edge.endLabelLeft, edge.labelStyle);\n    const endEdgeLabelLeft = elem.insert(\"g\").attr(\"class\", \"edgeTerminals\");\n    const inner = endEdgeLabelLeft.insert(\"g\").attr(\"class\", \"inner\");\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr(\"transform\", \"translate(\" + -slBox.width / 2 + \", \" + -slBox.height / 2 + \")\");\n    endEdgeLabelLeft.node().appendChild(endLabelElement);\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endLeft = endEdgeLabelLeft;\n    setTerminalWidth(fo, edge.endLabelLeft);\n  }\n  if (edge.endLabelRight) {\n    const endLabelElement = createLabel$1(edge.endLabelRight, edge.labelStyle);\n    const endEdgeLabelRight = elem.insert(\"g\").attr(\"class\", \"edgeTerminals\");\n    const inner = endEdgeLabelRight.insert(\"g\").attr(\"class\", \"inner\");\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr(\"transform\", \"translate(\" + -slBox.width / 2 + \", \" + -slBox.height / 2 + \")\");\n    endEdgeLabelRight.node().appendChild(endLabelElement);\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endRight = endEdgeLabelRight;\n    setTerminalWidth(fo, edge.endLabelRight);\n  }\n  return labelElement;\n};\nfunction setTerminalWidth(fo, value) {\n  if (getConfig().flowchart.htmlLabels && fo) {\n    fo.style.width = value.length * 9 + \"px\";\n    fo.style.height = \"12px\";\n  }\n}\nconst positionEdgeLabel = (edge, paths) => {\n  log.debug(\"Moving label abc88 \", edge.id, edge.label, edgeLabels[edge.id], paths);\n  let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  const siteConfig = getConfig();\n  const { subGraphTitleTotalMargin } = getSubGraphTitleMargins(siteConfig);\n  if (edge.label) {\n    const el = edgeLabels[edge.id];\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = utils.calcLabelPosition(path);\n      log.debug(\n        \"Moving label \" + edge.label + \" from (\",\n        x,\n        \",\",\n        y,\n        \") to (\",\n        pos.x,\n        \",\",\n        pos.y,\n        \") abc88\"\n      );\n      if (paths.updatedPath) {\n        x = pos.x;\n        y = pos.y;\n      }\n    }\n    el.attr(\"transform\", `translate(${x}, ${y + subGraphTitleTotalMargin / 2})`);\n  }\n  if (edge.startLabelLeft) {\n    const el = terminalLabels[edge.id].startLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeStart ? 10 : 0, \"start_left\", path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr(\"transform\", `translate(${x}, ${y})`);\n  }\n  if (edge.startLabelRight) {\n    const el = terminalLabels[edge.id].startRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = utils.calcTerminalLabelPosition(\n        edge.arrowTypeStart ? 10 : 0,\n        \"start_right\",\n        path\n      );\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr(\"transform\", `translate(${x}, ${y})`);\n  }\n  if (edge.endLabelLeft) {\n    const el = terminalLabels[edge.id].endLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, \"end_left\", path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr(\"transform\", `translate(${x}, ${y})`);\n  }\n  if (edge.endLabelRight) {\n    const el = terminalLabels[edge.id].endRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, \"end_right\", path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr(\"transform\", `translate(${x}, ${y})`);\n  }\n};\nconst outsideNode = (node, point2) => {\n  const x = node.x;\n  const y = node.y;\n  const dx = Math.abs(point2.x - x);\n  const dy = Math.abs(point2.y - y);\n  const w = node.width / 2;\n  const h = node.height / 2;\n  if (dx >= w || dy >= h) {\n    return true;\n  }\n  return false;\n};\nconst intersection = (node, outsidePoint, insidePoint) => {\n  log.debug(`intersection calc abc89:\n  outsidePoint: ${JSON.stringify(outsidePoint)}\n  insidePoint : ${JSON.stringify(insidePoint)}\n  node        : x:${node.x} y:${node.y} w:${node.width} h:${node.height}`);\n  const x = node.x;\n  const y = node.y;\n  const dx = Math.abs(x - insidePoint.x);\n  const w = node.width / 2;\n  let r = insidePoint.x < outsidePoint.x ? w - dx : w + dx;\n  const h = node.height / 2;\n  const Q = Math.abs(outsidePoint.y - insidePoint.y);\n  const R = Math.abs(outsidePoint.x - insidePoint.x);\n  if (Math.abs(y - outsidePoint.y) * w > Math.abs(x - outsidePoint.x) * h) {\n    let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    r = R * q / Q;\n    const res = {\n      x: insidePoint.x < outsidePoint.x ? insidePoint.x + r : insidePoint.x - R + r,\n      y: insidePoint.y < outsidePoint.y ? insidePoint.y + Q - q : insidePoint.y - Q + q\n    };\n    if (r === 0) {\n      res.x = outsidePoint.x;\n      res.y = outsidePoint.y;\n    }\n    if (R === 0) {\n      res.x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      res.y = outsidePoint.y;\n    }\n    log.debug(`abc89 topp/bott calc, Q ${Q}, q ${q}, R ${R}, r ${r}`, res);\n    return res;\n  } else {\n    if (insidePoint.x < outsidePoint.x) {\n      r = outsidePoint.x - w - x;\n    } else {\n      r = x - w - outsidePoint.x;\n    }\n    let q = Q * r / R;\n    let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x - R + r;\n    let _y = insidePoint.y < outsidePoint.y ? insidePoint.y + q : insidePoint.y - q;\n    log.debug(`sides calc abc89, Q ${Q}, q ${q}, R ${R}, r ${r}`, { _x, _y });\n    if (r === 0) {\n      _x = outsidePoint.x;\n      _y = outsidePoint.y;\n    }\n    if (R === 0) {\n      _x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      _y = outsidePoint.y;\n    }\n    return { x: _x, y: _y };\n  }\n};\nconst cutPathAtIntersect = (_points, boundaryNode) => {\n  log.debug(\"abc88 cutPathAtIntersect\", _points, boundaryNode);\n  let points = [];\n  let lastPointOutside = _points[0];\n  let isInside = false;\n  _points.forEach((point2) => {\n    if (!outsideNode(boundaryNode, point2) && !isInside) {\n      const inter = intersection(boundaryNode, lastPointOutside, point2);\n      let pointPresent = false;\n      points.forEach((p) => {\n        pointPresent = pointPresent || p.x === inter.x && p.y === inter.y;\n      });\n      if (!points.some((e) => e.x === inter.x && e.y === inter.y)) {\n        points.push(inter);\n      }\n      isInside = true;\n    } else {\n      lastPointOutside = point2;\n      if (!isInside) {\n        points.push(point2);\n      }\n    }\n  });\n  return points;\n};\nconst insertEdge = function(elem, e, edge, clusterDb, diagramType, graph, id) {\n  let points = edge.points;\n  log.debug(\"abc88 InsertEdge: edge=\", edge, \"e=\", e);\n  let pointsHasChanged = false;\n  const tail = graph.node(e.v);\n  var head = graph.node(e.w);\n  if ((head == null ? void 0 : head.intersect) && (tail == null ? void 0 : tail.intersect)) {\n    points = points.slice(1, edge.points.length - 1);\n    points.unshift(tail.intersect(points[0]));\n    points.push(head.intersect(points[points.length - 1]));\n  }\n  if (edge.toCluster) {\n    log.debug(\"to cluster abc88\", clusterDb[edge.toCluster]);\n    points = cutPathAtIntersect(edge.points, clusterDb[edge.toCluster].node);\n    pointsHasChanged = true;\n  }\n  if (edge.fromCluster) {\n    log.debug(\"from cluster abc88\", clusterDb[edge.fromCluster]);\n    points = cutPathAtIntersect(points.reverse(), clusterDb[edge.fromCluster].node).reverse();\n    pointsHasChanged = true;\n  }\n  const lineData = points.filter((p) => !Number.isNaN(p.y));\n  let curve = curveBasis;\n  if (edge.curve && (diagramType === \"graph\" || diagramType === \"flowchart\")) {\n    curve = edge.curve;\n  }\n  const { x, y } = getLineFunctionsWithOffset(edge);\n  const lineFunction = line().x(x).y(y).curve(curve);\n  let strokeClasses;\n  switch (edge.thickness) {\n    case \"normal\":\n      strokeClasses = \"edge-thickness-normal\";\n      break;\n    case \"thick\":\n      strokeClasses = \"edge-thickness-thick\";\n      break;\n    case \"invisible\":\n      strokeClasses = \"edge-thickness-thick\";\n      break;\n    default:\n      strokeClasses = \"\";\n  }\n  switch (edge.pattern) {\n    case \"solid\":\n      strokeClasses += \" edge-pattern-solid\";\n      break;\n    case \"dotted\":\n      strokeClasses += \" edge-pattern-dotted\";\n      break;\n    case \"dashed\":\n      strokeClasses += \" edge-pattern-dashed\";\n      break;\n  }\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", edge.id).attr(\"class\", \" \" + strokeClasses + (edge.classes ? \" \" + edge.classes : \"\")).attr(\"style\", edge.style);\n  let url = \"\";\n  if (getConfig().flowchart.arrowMarkerAbsolute || getConfig().state.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  addEdgeMarkers(svgPath, edge, url, id, diagramType);\n  let paths = {};\n  if (pointsHasChanged) {\n    paths.updatedPath = points;\n  }\n  paths.originalPath = edge.points;\n  return paths;\n};\nexport {\n  insertMarkers$1 as a,\n  clear$1 as b,\n  createLabel$1 as c,\n  clear as d,\n  insertNode as e,\n  insertEdgeLabel as f,\n  getSubGraphTitleMargins as g,\n  insertEdge as h,\n  intersectRect$1 as i,\n  positionEdgeLabel as j,\n  getLineFunctionsWithOffset as k,\n  labelHelper as l,\n  addEdgeMarkers as m,\n  positionNode as p,\n  setNodeElem as s,\n  updateNodeBounds as u\n};\n"],"names":["markers","extension","elem","type","id","log","trace","append","attr","composition","aggregation","dependency","lollipop","point","style","circle","cross","barb","insertMarkers$1","markerArray","forEach","markerName","createLabel$1","_vertexText","isTitle","isNode","vertexText","evaluate","getConfig","flowchart","htmlLabels","replace","debug","vertexNode","node","fo","select","document","createElementNS","div","label","labelClass","dom","styleFn","html","labelStyle","addHtmlLabel","decodeEntities","s","svgLabel","setAttribute","rows","split","Array","isArray","row","tspan","setAttributeNS","textContent","trim","appendChild","labelHelper","async","parent","_classes","classes","useHtmlLabels","shapeSvg","insert","domId","labelText","textNode","text","labelType","createText","sanitizeText","width","wrappingWidth","bbox","getBBox","halfPadding","padding","children","dv","images","getElementsByTagName","noImgText","Promise","all","map","img","res","setupImage","display","flexDirection","bodyFontSize","fontSize","window","getComputedStyle","body","enlargingFactor","parseInt","minWidth","maxWidth","setTimeout","complete","addEventListener","getBoundingClientRect","height","centerLabel","updateNodeBounds","element","insertPolygonShape","w","h","points","d","x","y","join","intersectEllipse","rx","ry","point2","cx","cy","px","py","det","Math","sqrt","dx","abs","dy","intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","sameSign","intersectRect$1","sx","sy","intersect","ellipse","polygon","polyPoints","x1","y1","intersections","minX","Number","POSITIVE_INFINITY","minY","entry","min","left","top","i","length","intersect2","push","sort","p","q","pdx","pdy","distp","qdx","qdy","distq","rect","getArrowPoints","duplicatedDirections","directions","uniqueDirections","Set","direction","add","expandAndDeduplicateDirections","midpoint","has","formatClass","str","getClassesFromNode","otherClasses","class","question","info","questionElem","warn","applyNodePropertyBorders","rect2","borders","totalWidth","totalHeight","strokeDashArray","addBorder","skipBorder","includes","forkJoin","dir","shape","shapes","rhombus","composite","positioned","props","propKeys","Object","keys","delete","propKey","labelRect","rectWithTitle","innerLine","text2","flat","title","textRows","slice","titleBox","descr","choice","circle2","doublecircle","circleGroup","outerCircle","innerCircle","gap","stadium","hexagon","m","hex","block_arrow","blockArrow","rect_left_inv_arrow","lean_right","el","lean_left","trapezoid","inv_trapezoid","rect_right_inv_arrow","cylinder","pos","start","end","note","subroutine","fork","class_box","topLine","bottomLine","maxHeight","labelContainer","verticalPos","hasInterface","classData","annotations","interfaceLabelText","interfaceLabel","interfaceBBox","classTitleString","classTitleLabel","classTitleBBox","classAttributes","members","member","parsedInfo","getDisplayDetails","parsedText","displayText","lbl","cssStyle","classMethods","methods","diffX2","diffX","lineHeight","memberBBox","nodeElems","insertNode","newEl","link","target","securityLevel","linkTarget","tooltip","haveCallback","setNodeElem","clear$1","positionNode","diff","clusterNode","getSubGraphTitleMargins","_a","_b","subGraphTitleTopMargin","subGraphTitleMargin","subGraphTitleBottomMargin","bottom","subGraphTitleTotalMargin","markerOffsets","arrow_point","calculateDeltaAndAngle","point1","angle","deltaX","deltaY","pointTransformer","x2","y2","atan","data","getLineFunctionsWithOffset","edge","hasOwn","arrowTypeStart","cos","arrowTypeEnd","sin","addEdgeMarkers","svgPath","url","diagramType","addEdgeMarker","arrowTypesMap","arrow_cross","arrow_barb","arrow_circle","position","arrowType","endMarkerType","suffix","edgeLabels","terminalLabels","clear","insertEdgeLabel","labelElement","addSvgBackground","edgeLabel","startLabelLeft","startLabelElement","startEdgeLabelLeft","inner","slBox","startLeft","setTerminalWidth","startLabelRight","startEdgeLabelRight","startRight","endLabelLeft","endLabelElement","endEdgeLabelLeft","endLeft","endLabelRight","endEdgeLabelRight","endRight","value","positionEdgeLabel","paths","path","updatedPath","originalPath","siteConfig","utils","calcLabelPosition","calcTerminalLabelPosition","cutPathAtIntersect","_points","boundaryNode","lastPointOutside","isInside","outsideNode","inter","outsidePoint","insidePoint","JSON","stringify","r","Q","R","_x","_y","intersection","pointPresent","some","e","insertEdge","clusterDb","graph","pointsHasChanged","tail","v","head","unshift","toCluster","fromCluster","reverse","lineData","filter","isNaN","curve","curveBasis","lineFunction","line","strokeClasses","thickness","pattern","arrowMarkerAbsolute","state","location","protocol","host","pathname","search"],"mappings":"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"}