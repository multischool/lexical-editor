{"version":3,"file":"sankeyDiagram-04a897e0.js","sources":["../../../../node_modules/mermaid/dist/sankeyDiagram-04a897e0.js"],"sourcesContent":["import { c as getConfig, g as getAccTitle, s as setAccTitle, a as getAccDescription, b as setAccDescription, t as getDiagramTitle, q as setDiagramTitle, v as clear$1, e as common, K as defaultConfig, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport { select, scaleOrdinal, schemeTableau10 } from \"d3\";\nimport { sankey, sankeyLinkHorizontal, sankeyLeft, sankeyRight, sankeyCenter, sankeyJustify } from \"d3-sankey\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [1, 9], $V1 = [1, 10], $V2 = [1, 5, 10, 12];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"start\": 3, \"SANKEY\": 4, \"NEWLINE\": 5, \"csv\": 6, \"opt_eof\": 7, \"record\": 8, \"csv_tail\": 9, \"EOF\": 10, \"field[source]\": 11, \"COMMA\": 12, \"field[target]\": 13, \"field[value]\": 14, \"field\": 15, \"escaped\": 16, \"non_escaped\": 17, \"DQUOTE\": 18, \"ESCAPED_TEXT\": 19, \"NON_ESCAPED_TEXT\": 20, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 4: \"SANKEY\", 5: \"NEWLINE\", 10: \"EOF\", 11: \"field[source]\", 12: \"COMMA\", 13: \"field[target]\", 14: \"field[value]\", 18: \"DQUOTE\", 19: \"ESCAPED_TEXT\", 20: \"NON_ESCAPED_TEXT\" },\n    productions_: [0, [3, 4], [6, 2], [9, 2], [9, 0], [7, 1], [7, 0], [8, 5], [15, 1], [15, 1], [16, 3], [17, 1]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 7:\n          const source = yy.findOrCreateNode($$[$0 - 4].trim().replaceAll('\"\"', '\"'));\n          const target = yy.findOrCreateNode($$[$0 - 2].trim().replaceAll('\"\"', '\"'));\n          const value = parseFloat($$[$0].trim());\n          yy.addLink(source, target, value);\n          break;\n        case 8:\n        case 9:\n        case 11:\n          this.$ = $$[$0];\n          break;\n        case 10:\n          this.$ = $$[$0 - 1];\n          break;\n      }\n    },\n    table: [{ 3: 1, 4: [1, 2] }, { 1: [3] }, { 5: [1, 3] }, { 6: 4, 8: 5, 15: 6, 16: 7, 17: 8, 18: $V0, 20: $V1 }, { 1: [2, 6], 7: 11, 10: [1, 12] }, o($V1, [2, 4], { 9: 13, 5: [1, 14] }), { 12: [1, 15] }, o($V2, [2, 8]), o($V2, [2, 9]), { 19: [1, 16] }, o($V2, [2, 11]), { 1: [2, 1] }, { 1: [2, 5] }, o($V1, [2, 2]), { 6: 17, 8: 5, 15: 6, 16: 7, 17: 8, 18: $V0, 20: $V1 }, { 15: 18, 16: 7, 17: 8, 18: $V0, 20: $V1 }, { 18: [1, 19] }, o($V1, [2, 3]), { 12: [1, 20] }, o($V2, [2, 10]), { 15: 21, 16: 7, 17: 8, 18: $V0, 20: $V1 }, o([1, 5, 10], [2, 7])],\n    defaultActions: { 11: [2, 1], 12: [2, 5] },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: { \"case-insensitive\": true },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            this.pushState(\"csv\");\n            return 4;\n          case 1:\n            return 10;\n          case 2:\n            return 5;\n          case 3:\n            return 12;\n          case 4:\n            this.pushState(\"escaped_text\");\n            return 18;\n          case 5:\n            return 20;\n          case 6:\n            this.popState(\"escaped_text\");\n            return 18;\n          case 7:\n            return 19;\n        }\n      },\n      rules: [/^(?:sankey-beta\\b)/i, /^(?:$)/i, /^(?:((\\u000D\\u000A)|(\\u000A)))/i, /^(?:(\\u002C))/i, /^(?:(\\u0022))/i, /^(?:([\\u0020-\\u0021\\u0023-\\u002B\\u002D-\\u007E])*)/i, /^(?:(\\u0022)(?!(\\u0022)))/i, /^(?:(([\\u0020-\\u0021\\u0023-\\u002B\\u002D-\\u007E])|(\\u002C)|(\\u000D)|(\\u000A)|(\\u0022)(\\u0022))*)/i],\n      conditions: { \"csv\": { \"rules\": [1, 2, 3, 4, 5, 6, 7], \"inclusive\": false }, \"escaped_text\": { \"rules\": [6, 7], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nlet links = [];\nlet nodes = [];\nlet nodesMap = {};\nconst clear = () => {\n  links = [];\n  nodes = [];\n  nodesMap = {};\n  clear$1();\n};\nclass SankeyLink {\n  constructor(source, target, value = 0) {\n    this.source = source;\n    this.target = target;\n    this.value = value;\n  }\n}\nconst addLink = (source, target, value) => {\n  links.push(new SankeyLink(source, target, value));\n};\nclass SankeyNode {\n  constructor(ID) {\n    this.ID = ID;\n  }\n}\nconst findOrCreateNode = (ID) => {\n  ID = common.sanitizeText(ID, getConfig());\n  if (!nodesMap[ID]) {\n    nodesMap[ID] = new SankeyNode(ID);\n    nodes.push(nodesMap[ID]);\n  }\n  return nodesMap[ID];\n};\nconst getNodes = () => nodes;\nconst getLinks = () => links;\nconst getGraph = () => ({\n  nodes: nodes.map((node) => ({ id: node.ID })),\n  links: links.map((link) => ({\n    source: link.source.ID,\n    target: link.target.ID,\n    value: link.value\n  }))\n});\nconst db = {\n  nodesMap,\n  getConfig: () => getConfig().sankey,\n  getNodes,\n  getLinks,\n  getGraph,\n  addLink,\n  findOrCreateNode,\n  getAccTitle,\n  setAccTitle,\n  getAccDescription,\n  setAccDescription,\n  getDiagramTitle,\n  setDiagramTitle,\n  clear\n};\nconst _Uid = class _Uid2 {\n  static next(name) {\n    return new _Uid2(name + ++_Uid2.count);\n  }\n  constructor(id) {\n    this.id = id;\n    this.href = `#${id}`;\n  }\n  toString() {\n    return \"url(\" + this.href + \")\";\n  }\n};\n_Uid.count = 0;\nlet Uid = _Uid;\nconst alignmentsMap = {\n  left: sankeyLeft,\n  right: sankeyRight,\n  center: sankeyCenter,\n  justify: sankeyJustify\n};\nconst draw = function(text, id, _version, diagObj) {\n  const { securityLevel, sankey: conf } = getConfig();\n  const defaultSankeyConfig = defaultConfig.sankey;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = securityLevel === \"sandbox\" ? root.select(`[id=\"${id}\"]`) : select(`[id=\"${id}\"]`);\n  const width = (conf == null ? void 0 : conf.width) ?? defaultSankeyConfig.width;\n  const height = (conf == null ? void 0 : conf.height) ?? defaultSankeyConfig.width;\n  const useMaxWidth = (conf == null ? void 0 : conf.useMaxWidth) ?? defaultSankeyConfig.useMaxWidth;\n  const nodeAlignment = (conf == null ? void 0 : conf.nodeAlignment) ?? defaultSankeyConfig.nodeAlignment;\n  const prefix = (conf == null ? void 0 : conf.prefix) ?? defaultSankeyConfig.prefix;\n  const suffix = (conf == null ? void 0 : conf.suffix) ?? defaultSankeyConfig.suffix;\n  const showValues = (conf == null ? void 0 : conf.showValues) ?? defaultSankeyConfig.showValues;\n  const graph = diagObj.db.getGraph();\n  const nodeAlign = alignmentsMap[nodeAlignment];\n  const nodeWidth = 10;\n  const sankey$1 = sankey().nodeId((d) => d.id).nodeWidth(nodeWidth).nodePadding(10 + (showValues ? 15 : 0)).nodeAlign(nodeAlign).extent([\n    [0, 0],\n    [width, height]\n  ]);\n  sankey$1(graph);\n  const colorScheme = scaleOrdinal(schemeTableau10);\n  svg.append(\"g\").attr(\"class\", \"nodes\").selectAll(\".node\").data(graph.nodes).join(\"g\").attr(\"class\", \"node\").attr(\"id\", (d) => (d.uid = Uid.next(\"node-\")).id).attr(\"transform\", function(d) {\n    return \"translate(\" + d.x0 + \",\" + d.y0 + \")\";\n  }).attr(\"x\", (d) => d.x0).attr(\"y\", (d) => d.y0).append(\"rect\").attr(\"height\", (d) => {\n    return d.y1 - d.y0;\n  }).attr(\"width\", (d) => d.x1 - d.x0).attr(\"fill\", (d) => colorScheme(d.id));\n  const getText = ({ id: id2, value }) => {\n    if (!showValues) {\n      return id2;\n    }\n    return `${id2}\n${prefix}${Math.round(value * 100) / 100}${suffix}`;\n  };\n  svg.append(\"g\").attr(\"class\", \"node-labels\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 14).selectAll(\"text\").data(graph.nodes).join(\"text\").attr(\"x\", (d) => d.x0 < width / 2 ? d.x1 + 6 : d.x0 - 6).attr(\"y\", (d) => (d.y1 + d.y0) / 2).attr(\"dy\", `${showValues ? \"0\" : \"0.35\"}em`).attr(\"text-anchor\", (d) => d.x0 < width / 2 ? \"start\" : \"end\").text(getText);\n  const link = svg.append(\"g\").attr(\"class\", \"links\").attr(\"fill\", \"none\").attr(\"stroke-opacity\", 0.5).selectAll(\".link\").data(graph.links).join(\"g\").attr(\"class\", \"link\").style(\"mix-blend-mode\", \"multiply\");\n  const linkColor = (conf == null ? void 0 : conf.linkColor) || \"gradient\";\n  if (linkColor === \"gradient\") {\n    const gradient = link.append(\"linearGradient\").attr(\"id\", (d) => (d.uid = Uid.next(\"linearGradient-\")).id).attr(\"gradientUnits\", \"userSpaceOnUse\").attr(\"x1\", (d) => d.source.x1).attr(\"x2\", (d) => d.target.x0);\n    gradient.append(\"stop\").attr(\"offset\", \"0%\").attr(\"stop-color\", (d) => colorScheme(d.source.id));\n    gradient.append(\"stop\").attr(\"offset\", \"100%\").attr(\"stop-color\", (d) => colorScheme(d.target.id));\n  }\n  let coloring;\n  switch (linkColor) {\n    case \"gradient\":\n      coloring = (d) => d.uid;\n      break;\n    case \"source\":\n      coloring = (d) => colorScheme(d.source.id);\n      break;\n    case \"target\":\n      coloring = (d) => colorScheme(d.target.id);\n      break;\n    default:\n      coloring = linkColor;\n  }\n  link.append(\"path\").attr(\"d\", sankeyLinkHorizontal()).attr(\"stroke\", coloring).attr(\"stroke-width\", (d) => Math.max(1, d.width));\n  setupGraphViewbox(void 0, svg, 0, useMaxWidth);\n};\nconst renderer = {\n  draw\n};\nconst prepareTextForParsing = (text) => {\n  const textToParse = text.replaceAll(/^[^\\S\\n\\r]+|[^\\S\\n\\r]+$/g, \"\").replaceAll(/([\\n\\r])+/g, \"\\n\").trim();\n  return textToParse;\n};\nconst originalParse = parser$1.parse.bind(parser$1);\nparser$1.parse = (text) => originalParse(prepareTextForParsing(text));\nconst diagram = {\n  parser: parser$1,\n  db,\n  renderer\n};\nexport {\n  diagram\n};\n"],"names":["parser","o","k","v","o2","l","length","$V0","$V1","$V2","parser2","trace","yy","symbols_","error","start","SANKEY","NEWLINE","csv","opt_eof","record","csv_tail","EOF","COMMA","field","escaped","non_escaped","DQUOTE","ESCAPED_TEXT","NON_ESCAPED_TEXT","$accept","$end","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","source","findOrCreateNode","trim","replaceAll","target","value","parseFloat","addLink","this","$","table","defaultActions","parseError","str","hash","recoverable","Error","parse","input","self","stack","tstack","vstack","lstack","args","slice","call","arguments","lexer2","Object","create","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","getPrototypeOf","symbol","state","action","r","p","len","newState","expected","token","yyval","pop","lex","Array","errStr","showPosition","join","text","match","line","loc","first_line","last_line","first_column","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","inclusive","escaped_text","INITIAL","Parser","parser$1","links","nodes","nodesMap","SankeyLink","constructor","SankeyNode","ID","db","getConfig","sankey","getNodes","getLinks","getGraph","map","node","id","link","common","sanitizeText","getAccTitle","setAccTitle","getAccDescription","setAccDescription","getDiagramTitle","setDiagramTitle","clear","clear$1","_Uid","_Uid2","name","count","href","toString","Uid","alignmentsMap","left","sankeyLeft","right","sankeyRight","center","sankeyCenter","justify","sankeyJustify","renderer","draw","_version","diagObj","securityLevel","conf","defaultSankeyConfig","defaultConfig","sandboxElement","select","root","contentDocument","body","svg","width","height","useMaxWidth","nodeAlignment","prefix","suffix","showValues","graph","nodeAlign","nodeId","d","nodeWidth","nodePadding","extent","sankey$1","colorScheme","scaleOrdinal","schemeTableau10","append","attr","selectAll","data","uid","x0","y0","y1","x1","id2","round","style","linkColor","gradient","coloring","sankeyLinkHorizontal","max","setupGraphViewbox","originalParse","bind","prepareTextForParsing","diagram"],"mappings":"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"}