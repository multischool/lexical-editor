{"version":3,"file":"rgb.js","sources":["../../../../node_modules/d3-interpolate/src/rgb.js"],"sourcesContent":["import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n"],"names":["interpolateRgb","rgbGamma","y","color","gamma","rgb","start","end","r","colorRgb","g","b","opacity","nogamma","t"],"mappings":"wFAKA,IAAAA,EAAe,SAAUC,EAASC,GAChC,IAAIC,EAAQC,EAAMF,GAElB,SAASG,EAAIC,EAAOC,GAClB,IAAIC,EAAIL,GAAOG,EAAQG,EAASH,IAAQE,GAAID,EAAME,EAASF,IAAMC,GAC7DE,EAAIP,EAAMG,EAAMI,EAAGH,EAAIG,GACvBC,EAAIR,EAAMG,EAAMK,EAAGJ,EAAII,GACvBC,EAAUC,EAAQP,EAAMM,QAASL,EAAIK,SACzC,OAAO,SAASE,GAKd,OAJAR,EAAME,EAAIA,EAAEM,GACZR,EAAMI,EAAIA,EAAEI,GACZR,EAAMK,EAAIA,EAAEG,GACZR,EAAMM,QAAUA,EAAQE,GACjBR,EAAQ,EACrB,CACG,CAID,OAFAD,EAAID,MAAQH,EAELI,CACR,CApBc,CAoBZ"}