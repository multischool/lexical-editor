import{useEffect as e}from"react";import{useLexicalComposerContext as t}from"../../../../../node_modules/@lexical/react/LexicalComposerContext.mjs.js";import{$trimTextContentFromAnchor as r}from"../../../../../node_modules/@lexical/selection/LexicalSelection.mjs.js";import{$restoreEditorState as o}from"@lexical/utils";import{RootNode as i,$getSelection as n,$isRangeSelection as l}from"lexical";function a(a){var m=a.maxLength,c=t()[0];return e((function(){var e=null;return c.registerNodeTransform(i,(function(t){var i=n();if(l(i)&&i.isCollapsed()){var a=c.getEditorState(),s=a.read((function(){return t.getTextContentSize()})),f=t.getTextContentSize();if(s!==f){var u=f-m,x=i.anchor;u>0&&(s===m&&e!==a?(e=a,o(c,a)):r(c,x,u))}}}))}),[c,m]),null}export{a as MaxLengthPlugin};
//# sourceMappingURL=max-length-plugin.js.map
