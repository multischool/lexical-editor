import{useState as e,useEffect as t}from"react";import{useLexicalComposerContext as o}from"../../../../../node_modules/@lexical/react/LexicalComposerContext.mjs.js";import{mergeRegister as i}from"@lexical/utils";import{CAN_UNDO_COMMAND as a,COMMAND_PRIORITY_CRITICAL as r,CAN_REDO_COMMAND as n,UNDO_COMMAND as s,REDO_COMMAND as c}from"lexical";import{Button as m}from"../../../ui/button.js";import{useToolbarContext as l}from"../../context/toolbar-context.js";import d from"../../../../../node_modules/lucide-react/dist/esm/icons/undo.js";import u from"../../../../../node_modules/lucide-react/dist/esm/icons/redo.js";function f(){var f=o()[0],p=l(),b=p.activeEditor,x=p.$updateToolbar,C=e(f.isEditable()),E=C[0],v=C[1],R=e(!1),j=R[0],g=R[1],N=e(!1),h=N[0],z=N[1];return t((function(){return i(f.registerEditableListener((function(e){v(e)})),b.registerUpdateListener((function(e){e.editorState.read((function(){x()}))})),b.registerCommand(a,(function(e){return g(e),!1}),r),b.registerCommand(n,(function(e){return z(e),!1}),r))}),[x,b,f]),React.createElement("div",{className:"flex items-center gap-1"},React.createElement(m,{disabled:!j||!E,onClick:function(){b.dispatchCommand(s,void 0)},title:"Undo (⌘Z)",type:"button","aria-label":"Undo",size:"sm",className:"h-8 w-8",variant:"outline"},React.createElement(d,{className:"size-4"})),React.createElement(m,{disabled:!h||!E,onClick:function(){b.dispatchCommand(c,void 0)},title:"Redo (⇧⌘Z)",type:"button","aria-label":"Redo",size:"sm",className:"h-8 w-8",variant:"outline"},React.createElement(u,{className:"size-4"})))}export{f as HistoryToolbarPlugin};
//# sourceMappingURL=history-toolbar-plugin.js.map
